Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> statement ;
Rule 7     instruction -> IF ( condition ) instruction ELSE instruction
Rule 8     instruction -> IF ( condition ) instruction
Rule 9     instruction -> FOR variable ASSIGN expression : expression instruction
Rule 10    instruction -> WHILE ( condition ) instruction
Rule 11    instruction -> { instructions }
Rule 12    statement -> PRINT expression
Rule 13    statement -> PRINT multiple_expressions
Rule 14    statement -> RETURN expression
Rule 15    statement -> RETURN
Rule 16    statement -> CONTINUE
Rule 17    statement -> BREAK
Rule 18    statement -> assignable ASSIGN expression
Rule 19    statement -> assignable ADDASSIGN expression
Rule 20    statement -> assignable SUBASSIGN expression
Rule 21    statement -> assignable MULASSIGN expression
Rule 22    statement -> assignable DIVASSIGN expression
Rule 23    condition -> expression EQ expression
Rule 24    condition -> expression GT expression
Rule 25    condition -> expression LT expression
Rule 26    condition -> expression GE expression
Rule 27    condition -> expression LE expression
Rule 28    condition -> expression NE expression
Rule 29    expression -> expression ADD expression
Rule 30    expression -> expression SUB expression
Rule 31    expression -> expression MUL expression
Rule 32    expression -> expression DIV expression
Rule 33    expression -> expression DOTADD expression
Rule 34    expression -> expression DOTSUB expression
Rule 35    expression -> expression DOTMUL expression
Rule 36    expression -> expression DOTDIV expression
Rule 37    expression -> SUB expression
Rule 38    expression -> expression TRANSPOSE
Rule 39    expression -> INTNUM
Rule 40    expression -> FLOATNUM
Rule 41    expression -> assignable
Rule 42    assignable -> variable
Rule 43    assignable -> reference
Rule 44    reference -> variable [ expression ]
Rule 45    reference -> variable [ multiple_expressions ]
Rule 46    variable -> ID
Rule 47    expression -> STRING
Rule 48    expression -> ( expression )
Rule 49    expression -> vector
Rule 50    expression -> matrix
Rule 51    matrix -> ONES ( expression )
Rule 52    matrix -> ONES ( expression , expression )
Rule 53    matrix -> ZEROS ( expression )
Rule 54    matrix -> ZEROS ( expression , expression )
Rule 55    matrix -> EYE ( expression )
Rule 56    matrix -> EYE ( expression , expression )
Rule 57    vector -> [ expression ]
Rule 58    vector -> [ multiple_expressions ]
Rule 59    multiple_expressions -> expression , expression
Rule 60    multiple_expressions -> multiple_expressions , expression

Terminals, with rules where they appear

(                    : 7 8 10 48 51 52 53 54 55 56
)                    : 7 8 10 48 51 52 53 54 55 56
,                    : 52 54 56 59 60
:                    : 9
;                    : 6
ADD                  : 29
ADDASSIGN            : 19
ASSIGN               : 9 18
BREAK                : 17
CONTINUE             : 16
DIV                  : 32
DIVASSIGN            : 22
DOTADD               : 33
DOTDIV               : 36
DOTMUL               : 35
DOTSUB               : 34
ELSE                 : 7
EQ                   : 23
EYE                  : 55 56
FLOATNUM             : 40
FOR                  : 9
GE                   : 26
GT                   : 24
ID                   : 46
IF                   : 7 8
INTNUM               : 39
LE                   : 27
LT                   : 25
MUL                  : 31
MULASSIGN            : 21
NE                   : 28
ONES                 : 51 52
PRINT                : 12 13
RETURN               : 14 15
STRING               : 47
SUB                  : 30 37
SUBASSIGN            : 20
TRANSPOSE            : 38
WHILE                : 10
ZEROS                : 53 54
[                    : 44 45 57 58
]                    : 44 45 57 58
error                : 
{                    : 11
}                    : 11

Nonterminals, with rules where they appear

assignable           : 18 19 20 21 22 41
condition            : 7 8 10
expression           : 9 9 12 14 18 19 20 21 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 38 44 48 51 52 52 53 54 54 55 56 56 57 59 59 60
instruction          : 4 5 7 7 8 9 10
instructions         : 2 4 11
instructions_opt     : 1
matrix               : 50
multiple_expressions : 13 45 58 60
program              : 0
reference            : 43
statement            : 6
variable             : 9 42 44 45
vector               : 49

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR variable ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . PRINT multiple_expressions
    (14) statement -> . RETURN expression
    (15) statement -> . RETURN
    (16) statement -> . CONTINUE
    (17) statement -> . BREAK
    (18) statement -> . assignable ASSIGN expression
    (19) statement -> . assignable ADDASSIGN expression
    (20) statement -> . assignable SUBASSIGN expression
    (21) statement -> . assignable MULASSIGN expression
    (22) statement -> . assignable DIVASSIGN expression
    (42) assignable -> . variable
    (43) assignable -> . reference
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    $end            reduce using rule 3 (instructions_opt -> .)
    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 17

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    statement                      shift and go to state 5
    variable                       shift and go to state 8
    assignable                     shift and go to state 15
    reference                      shift and go to state 16

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR variable ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . PRINT multiple_expressions
    (14) statement -> . RETURN expression
    (15) statement -> . RETURN
    (16) statement -> . CONTINUE
    (17) statement -> . BREAK
    (18) statement -> . assignable ASSIGN expression
    (19) statement -> . assignable ADDASSIGN expression
    (20) statement -> . assignable SUBASSIGN expression
    (21) statement -> . assignable MULASSIGN expression
    (22) statement -> . assignable DIVASSIGN expression
    (42) assignable -> . variable
    (43) assignable -> . reference
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 17

    instruction                    shift and go to state 18
    statement                      shift and go to state 5
    variable                       shift and go to state 8
    assignable                     shift and go to state 15
    reference                      shift and go to state 16

state 4

    (5) instructions -> instruction .

    IF              reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    {               reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)


state 5

    (6) instruction -> statement . ;

    ;               shift and go to state 19


state 6

    (7) instruction -> IF . ( condition ) instruction ELSE instruction
    (8) instruction -> IF . ( condition ) instruction

    (               shift and go to state 20


state 7

    (9) instruction -> FOR . variable ASSIGN expression : expression instruction
    (46) variable -> . ID

    ID              shift and go to state 17

    variable                       shift and go to state 21

state 8

    (42) assignable -> variable .
    (44) reference -> variable . [ expression ]
    (45) reference -> variable . [ multiple_expressions ]

    ASSIGN          reduce using rule 42 (assignable -> variable .)
    ADDASSIGN       reduce using rule 42 (assignable -> variable .)
    SUBASSIGN       reduce using rule 42 (assignable -> variable .)
    MULASSIGN       reduce using rule 42 (assignable -> variable .)
    DIVASSIGN       reduce using rule 42 (assignable -> variable .)
    ADD             reduce using rule 42 (assignable -> variable .)
    SUB             reduce using rule 42 (assignable -> variable .)
    MUL             reduce using rule 42 (assignable -> variable .)
    DIV             reduce using rule 42 (assignable -> variable .)
    DOTADD          reduce using rule 42 (assignable -> variable .)
    DOTSUB          reduce using rule 42 (assignable -> variable .)
    DOTMUL          reduce using rule 42 (assignable -> variable .)
    DOTDIV          reduce using rule 42 (assignable -> variable .)
    TRANSPOSE       reduce using rule 42 (assignable -> variable .)
    ,               reduce using rule 42 (assignable -> variable .)
    ;               reduce using rule 42 (assignable -> variable .)
    EQ              reduce using rule 42 (assignable -> variable .)
    GT              reduce using rule 42 (assignable -> variable .)
    LT              reduce using rule 42 (assignable -> variable .)
    GE              reduce using rule 42 (assignable -> variable .)
    LE              reduce using rule 42 (assignable -> variable .)
    NE              reduce using rule 42 (assignable -> variable .)
    ]               reduce using rule 42 (assignable -> variable .)
    )               reduce using rule 42 (assignable -> variable .)
    :               reduce using rule 42 (assignable -> variable .)
    IF              reduce using rule 42 (assignable -> variable .)
    FOR             reduce using rule 42 (assignable -> variable .)
    WHILE           reduce using rule 42 (assignable -> variable .)
    {               reduce using rule 42 (assignable -> variable .)
    PRINT           reduce using rule 42 (assignable -> variable .)
    RETURN          reduce using rule 42 (assignable -> variable .)
    CONTINUE        reduce using rule 42 (assignable -> variable .)
    BREAK           reduce using rule 42 (assignable -> variable .)
    ID              reduce using rule 42 (assignable -> variable .)
    [               shift and go to state 22


state 9

    (10) instruction -> WHILE . ( condition ) instruction

    (               shift and go to state 23


state 10

    (11) instruction -> { . instructions }
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR variable ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . PRINT multiple_expressions
    (14) statement -> . RETURN expression
    (15) statement -> . RETURN
    (16) statement -> . CONTINUE
    (17) statement -> . BREAK
    (18) statement -> . assignable ASSIGN expression
    (19) statement -> . assignable ADDASSIGN expression
    (20) statement -> . assignable SUBASSIGN expression
    (21) statement -> . assignable MULASSIGN expression
    (22) statement -> . assignable DIVASSIGN expression
    (42) assignable -> . variable
    (43) assignable -> . reference
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 17

    instructions                   shift and go to state 24
    instruction                    shift and go to state 4
    statement                      shift and go to state 5
    variable                       shift and go to state 8
    assignable                     shift and go to state 15
    reference                      shift and go to state 16

state 11

    (12) statement -> PRINT . expression
    (13) statement -> PRINT . multiple_expressions
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (59) multiple_expressions -> . expression , expression
    (60) multiple_expressions -> . multiple_expressions , expression
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 25
    multiple_expressions           shift and go to state 26
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 12

    (14) statement -> RETURN . expression
    (15) statement -> RETURN .
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    ;               reduce using rule 15 (statement -> RETURN .)
    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 39
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 13

    (16) statement -> CONTINUE .

    ;               reduce using rule 16 (statement -> CONTINUE .)


state 14

    (17) statement -> BREAK .

    ;               reduce using rule 17 (statement -> BREAK .)


state 15

    (18) statement -> assignable . ASSIGN expression
    (19) statement -> assignable . ADDASSIGN expression
    (20) statement -> assignable . SUBASSIGN expression
    (21) statement -> assignable . MULASSIGN expression
    (22) statement -> assignable . DIVASSIGN expression

    ASSIGN          shift and go to state 40
    ADDASSIGN       shift and go to state 41
    SUBASSIGN       shift and go to state 42
    MULASSIGN       shift and go to state 43
    DIVASSIGN       shift and go to state 44


state 16

    (43) assignable -> reference .

    ASSIGN          reduce using rule 43 (assignable -> reference .)
    ADDASSIGN       reduce using rule 43 (assignable -> reference .)
    SUBASSIGN       reduce using rule 43 (assignable -> reference .)
    MULASSIGN       reduce using rule 43 (assignable -> reference .)
    DIVASSIGN       reduce using rule 43 (assignable -> reference .)
    ADD             reduce using rule 43 (assignable -> reference .)
    SUB             reduce using rule 43 (assignable -> reference .)
    MUL             reduce using rule 43 (assignable -> reference .)
    DIV             reduce using rule 43 (assignable -> reference .)
    DOTADD          reduce using rule 43 (assignable -> reference .)
    DOTSUB          reduce using rule 43 (assignable -> reference .)
    DOTMUL          reduce using rule 43 (assignable -> reference .)
    DOTDIV          reduce using rule 43 (assignable -> reference .)
    TRANSPOSE       reduce using rule 43 (assignable -> reference .)
    ,               reduce using rule 43 (assignable -> reference .)
    ;               reduce using rule 43 (assignable -> reference .)
    EQ              reduce using rule 43 (assignable -> reference .)
    GT              reduce using rule 43 (assignable -> reference .)
    LT              reduce using rule 43 (assignable -> reference .)
    GE              reduce using rule 43 (assignable -> reference .)
    LE              reduce using rule 43 (assignable -> reference .)
    NE              reduce using rule 43 (assignable -> reference .)
    ]               reduce using rule 43 (assignable -> reference .)
    )               reduce using rule 43 (assignable -> reference .)
    :               reduce using rule 43 (assignable -> reference .)
    IF              reduce using rule 43 (assignable -> reference .)
    FOR             reduce using rule 43 (assignable -> reference .)
    WHILE           reduce using rule 43 (assignable -> reference .)
    {               reduce using rule 43 (assignable -> reference .)
    PRINT           reduce using rule 43 (assignable -> reference .)
    RETURN          reduce using rule 43 (assignable -> reference .)
    CONTINUE        reduce using rule 43 (assignable -> reference .)
    BREAK           reduce using rule 43 (assignable -> reference .)
    ID              reduce using rule 43 (assignable -> reference .)


state 17

    (46) variable -> ID .

    [               reduce using rule 46 (variable -> ID .)
    ASSIGN          reduce using rule 46 (variable -> ID .)
    ADDASSIGN       reduce using rule 46 (variable -> ID .)
    SUBASSIGN       reduce using rule 46 (variable -> ID .)
    MULASSIGN       reduce using rule 46 (variable -> ID .)
    DIVASSIGN       reduce using rule 46 (variable -> ID .)
    ADD             reduce using rule 46 (variable -> ID .)
    SUB             reduce using rule 46 (variable -> ID .)
    MUL             reduce using rule 46 (variable -> ID .)
    DIV             reduce using rule 46 (variable -> ID .)
    DOTADD          reduce using rule 46 (variable -> ID .)
    DOTSUB          reduce using rule 46 (variable -> ID .)
    DOTMUL          reduce using rule 46 (variable -> ID .)
    DOTDIV          reduce using rule 46 (variable -> ID .)
    TRANSPOSE       reduce using rule 46 (variable -> ID .)
    ,               reduce using rule 46 (variable -> ID .)
    ;               reduce using rule 46 (variable -> ID .)
    EQ              reduce using rule 46 (variable -> ID .)
    GT              reduce using rule 46 (variable -> ID .)
    LT              reduce using rule 46 (variable -> ID .)
    GE              reduce using rule 46 (variable -> ID .)
    LE              reduce using rule 46 (variable -> ID .)
    NE              reduce using rule 46 (variable -> ID .)
    ]               reduce using rule 46 (variable -> ID .)
    )               reduce using rule 46 (variable -> ID .)
    :               reduce using rule 46 (variable -> ID .)
    IF              reduce using rule 46 (variable -> ID .)
    FOR             reduce using rule 46 (variable -> ID .)
    WHILE           reduce using rule 46 (variable -> ID .)
    {               reduce using rule 46 (variable -> ID .)
    PRINT           reduce using rule 46 (variable -> ID .)
    RETURN          reduce using rule 46 (variable -> ID .)
    CONTINUE        reduce using rule 46 (variable -> ID .)
    BREAK           reduce using rule 46 (variable -> ID .)
    ID              reduce using rule 46 (variable -> ID .)


state 18

    (4) instructions -> instructions instruction .

    IF              reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    {               reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)


state 19

    (6) instruction -> statement ; .

    IF              reduce using rule 6 (instruction -> statement ; .)
    FOR             reduce using rule 6 (instruction -> statement ; .)
    WHILE           reduce using rule 6 (instruction -> statement ; .)
    {               reduce using rule 6 (instruction -> statement ; .)
    PRINT           reduce using rule 6 (instruction -> statement ; .)
    RETURN          reduce using rule 6 (instruction -> statement ; .)
    CONTINUE        reduce using rule 6 (instruction -> statement ; .)
    BREAK           reduce using rule 6 (instruction -> statement ; .)
    ID              reduce using rule 6 (instruction -> statement ; .)
    $end            reduce using rule 6 (instruction -> statement ; .)
    }               reduce using rule 6 (instruction -> statement ; .)
    ELSE            reduce using rule 6 (instruction -> statement ; .)


state 20

    (7) instruction -> IF ( . condition ) instruction ELSE instruction
    (8) instruction -> IF ( . condition ) instruction
    (23) condition -> . expression EQ expression
    (24) condition -> . expression GT expression
    (25) condition -> . expression LT expression
    (26) condition -> . expression GE expression
    (27) condition -> . expression LE expression
    (28) condition -> . expression NE expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    condition                      shift and go to state 45
    expression                     shift and go to state 46
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 21

    (9) instruction -> FOR variable . ASSIGN expression : expression instruction

    ASSIGN          shift and go to state 47


state 22

    (44) reference -> variable [ . expression ]
    (45) reference -> variable [ . multiple_expressions ]
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (59) multiple_expressions -> . expression , expression
    (60) multiple_expressions -> . multiple_expressions , expression
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    variable                       shift and go to state 8
    expression                     shift and go to state 48
    multiple_expressions           shift and go to state 49
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    reference                      shift and go to state 16

state 23

    (10) instruction -> WHILE ( . condition ) instruction
    (23) condition -> . expression EQ expression
    (24) condition -> . expression GT expression
    (25) condition -> . expression LT expression
    (26) condition -> . expression GE expression
    (27) condition -> . expression LE expression
    (28) condition -> . expression NE expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    condition                      shift and go to state 50
    expression                     shift and go to state 46
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 24

    (11) instruction -> { instructions . }
    (4) instructions -> instructions . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR variable ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . PRINT multiple_expressions
    (14) statement -> . RETURN expression
    (15) statement -> . RETURN
    (16) statement -> . CONTINUE
    (17) statement -> . BREAK
    (18) statement -> . assignable ASSIGN expression
    (19) statement -> . assignable ADDASSIGN expression
    (20) statement -> . assignable SUBASSIGN expression
    (21) statement -> . assignable MULASSIGN expression
    (22) statement -> . assignable DIVASSIGN expression
    (42) assignable -> . variable
    (43) assignable -> . reference
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    }               shift and go to state 51
    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 17

    instruction                    shift and go to state 18
    statement                      shift and go to state 5
    variable                       shift and go to state 8
    assignable                     shift and go to state 15
    reference                      shift and go to state 16

state 25

    (12) statement -> PRINT expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE
    (59) multiple_expressions -> expression . , expression

    ;               reduce using rule 12 (statement -> PRINT expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60
    ,               shift and go to state 61


state 26

    (13) statement -> PRINT multiple_expressions .
    (60) multiple_expressions -> multiple_expressions . , expression

    ;               reduce using rule 13 (statement -> PRINT multiple_expressions .)
    ,               shift and go to state 62


state 27

    (37) expression -> SUB . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 63
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 28

    (39) expression -> INTNUM .

    ADD             reduce using rule 39 (expression -> INTNUM .)
    SUB             reduce using rule 39 (expression -> INTNUM .)
    MUL             reduce using rule 39 (expression -> INTNUM .)
    DIV             reduce using rule 39 (expression -> INTNUM .)
    DOTADD          reduce using rule 39 (expression -> INTNUM .)
    DOTSUB          reduce using rule 39 (expression -> INTNUM .)
    DOTMUL          reduce using rule 39 (expression -> INTNUM .)
    DOTDIV          reduce using rule 39 (expression -> INTNUM .)
    TRANSPOSE       reduce using rule 39 (expression -> INTNUM .)
    ,               reduce using rule 39 (expression -> INTNUM .)
    ;               reduce using rule 39 (expression -> INTNUM .)
    EQ              reduce using rule 39 (expression -> INTNUM .)
    GT              reduce using rule 39 (expression -> INTNUM .)
    LT              reduce using rule 39 (expression -> INTNUM .)
    GE              reduce using rule 39 (expression -> INTNUM .)
    LE              reduce using rule 39 (expression -> INTNUM .)
    NE              reduce using rule 39 (expression -> INTNUM .)
    ]               reduce using rule 39 (expression -> INTNUM .)
    )               reduce using rule 39 (expression -> INTNUM .)
    :               reduce using rule 39 (expression -> INTNUM .)
    IF              reduce using rule 39 (expression -> INTNUM .)
    FOR             reduce using rule 39 (expression -> INTNUM .)
    WHILE           reduce using rule 39 (expression -> INTNUM .)
    {               reduce using rule 39 (expression -> INTNUM .)
    PRINT           reduce using rule 39 (expression -> INTNUM .)
    RETURN          reduce using rule 39 (expression -> INTNUM .)
    CONTINUE        reduce using rule 39 (expression -> INTNUM .)
    BREAK           reduce using rule 39 (expression -> INTNUM .)
    ID              reduce using rule 39 (expression -> INTNUM .)


state 29

    (40) expression -> FLOATNUM .

    ADD             reduce using rule 40 (expression -> FLOATNUM .)
    SUB             reduce using rule 40 (expression -> FLOATNUM .)
    MUL             reduce using rule 40 (expression -> FLOATNUM .)
    DIV             reduce using rule 40 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 40 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 40 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 40 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 40 (expression -> FLOATNUM .)
    TRANSPOSE       reduce using rule 40 (expression -> FLOATNUM .)
    ,               reduce using rule 40 (expression -> FLOATNUM .)
    ;               reduce using rule 40 (expression -> FLOATNUM .)
    EQ              reduce using rule 40 (expression -> FLOATNUM .)
    GT              reduce using rule 40 (expression -> FLOATNUM .)
    LT              reduce using rule 40 (expression -> FLOATNUM .)
    GE              reduce using rule 40 (expression -> FLOATNUM .)
    LE              reduce using rule 40 (expression -> FLOATNUM .)
    NE              reduce using rule 40 (expression -> FLOATNUM .)
    ]               reduce using rule 40 (expression -> FLOATNUM .)
    )               reduce using rule 40 (expression -> FLOATNUM .)
    :               reduce using rule 40 (expression -> FLOATNUM .)
    IF              reduce using rule 40 (expression -> FLOATNUM .)
    FOR             reduce using rule 40 (expression -> FLOATNUM .)
    WHILE           reduce using rule 40 (expression -> FLOATNUM .)
    {               reduce using rule 40 (expression -> FLOATNUM .)
    PRINT           reduce using rule 40 (expression -> FLOATNUM .)
    RETURN          reduce using rule 40 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 40 (expression -> FLOATNUM .)
    BREAK           reduce using rule 40 (expression -> FLOATNUM .)
    ID              reduce using rule 40 (expression -> FLOATNUM .)


state 30

    (41) expression -> assignable .

    ADD             reduce using rule 41 (expression -> assignable .)
    SUB             reduce using rule 41 (expression -> assignable .)
    MUL             reduce using rule 41 (expression -> assignable .)
    DIV             reduce using rule 41 (expression -> assignable .)
    DOTADD          reduce using rule 41 (expression -> assignable .)
    DOTSUB          reduce using rule 41 (expression -> assignable .)
    DOTMUL          reduce using rule 41 (expression -> assignable .)
    DOTDIV          reduce using rule 41 (expression -> assignable .)
    TRANSPOSE       reduce using rule 41 (expression -> assignable .)
    ,               reduce using rule 41 (expression -> assignable .)
    ;               reduce using rule 41 (expression -> assignable .)
    EQ              reduce using rule 41 (expression -> assignable .)
    GT              reduce using rule 41 (expression -> assignable .)
    LT              reduce using rule 41 (expression -> assignable .)
    GE              reduce using rule 41 (expression -> assignable .)
    LE              reduce using rule 41 (expression -> assignable .)
    NE              reduce using rule 41 (expression -> assignable .)
    ]               reduce using rule 41 (expression -> assignable .)
    )               reduce using rule 41 (expression -> assignable .)
    :               reduce using rule 41 (expression -> assignable .)
    IF              reduce using rule 41 (expression -> assignable .)
    FOR             reduce using rule 41 (expression -> assignable .)
    WHILE           reduce using rule 41 (expression -> assignable .)
    {               reduce using rule 41 (expression -> assignable .)
    PRINT           reduce using rule 41 (expression -> assignable .)
    RETURN          reduce using rule 41 (expression -> assignable .)
    CONTINUE        reduce using rule 41 (expression -> assignable .)
    BREAK           reduce using rule 41 (expression -> assignable .)
    ID              reduce using rule 41 (expression -> assignable .)


state 31

    (47) expression -> STRING .

    ADD             reduce using rule 47 (expression -> STRING .)
    SUB             reduce using rule 47 (expression -> STRING .)
    MUL             reduce using rule 47 (expression -> STRING .)
    DIV             reduce using rule 47 (expression -> STRING .)
    DOTADD          reduce using rule 47 (expression -> STRING .)
    DOTSUB          reduce using rule 47 (expression -> STRING .)
    DOTMUL          reduce using rule 47 (expression -> STRING .)
    DOTDIV          reduce using rule 47 (expression -> STRING .)
    TRANSPOSE       reduce using rule 47 (expression -> STRING .)
    ,               reduce using rule 47 (expression -> STRING .)
    ;               reduce using rule 47 (expression -> STRING .)
    EQ              reduce using rule 47 (expression -> STRING .)
    GT              reduce using rule 47 (expression -> STRING .)
    LT              reduce using rule 47 (expression -> STRING .)
    GE              reduce using rule 47 (expression -> STRING .)
    LE              reduce using rule 47 (expression -> STRING .)
    NE              reduce using rule 47 (expression -> STRING .)
    ]               reduce using rule 47 (expression -> STRING .)
    )               reduce using rule 47 (expression -> STRING .)
    :               reduce using rule 47 (expression -> STRING .)
    IF              reduce using rule 47 (expression -> STRING .)
    FOR             reduce using rule 47 (expression -> STRING .)
    WHILE           reduce using rule 47 (expression -> STRING .)
    {               reduce using rule 47 (expression -> STRING .)
    PRINT           reduce using rule 47 (expression -> STRING .)
    RETURN          reduce using rule 47 (expression -> STRING .)
    CONTINUE        reduce using rule 47 (expression -> STRING .)
    BREAK           reduce using rule 47 (expression -> STRING .)
    ID              reduce using rule 47 (expression -> STRING .)


state 32

    (48) expression -> ( . expression )
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 64
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 33

    (49) expression -> vector .

    ADD             reduce using rule 49 (expression -> vector .)
    SUB             reduce using rule 49 (expression -> vector .)
    MUL             reduce using rule 49 (expression -> vector .)
    DIV             reduce using rule 49 (expression -> vector .)
    DOTADD          reduce using rule 49 (expression -> vector .)
    DOTSUB          reduce using rule 49 (expression -> vector .)
    DOTMUL          reduce using rule 49 (expression -> vector .)
    DOTDIV          reduce using rule 49 (expression -> vector .)
    TRANSPOSE       reduce using rule 49 (expression -> vector .)
    ,               reduce using rule 49 (expression -> vector .)
    ;               reduce using rule 49 (expression -> vector .)
    EQ              reduce using rule 49 (expression -> vector .)
    GT              reduce using rule 49 (expression -> vector .)
    LT              reduce using rule 49 (expression -> vector .)
    GE              reduce using rule 49 (expression -> vector .)
    LE              reduce using rule 49 (expression -> vector .)
    NE              reduce using rule 49 (expression -> vector .)
    ]               reduce using rule 49 (expression -> vector .)
    )               reduce using rule 49 (expression -> vector .)
    :               reduce using rule 49 (expression -> vector .)
    IF              reduce using rule 49 (expression -> vector .)
    FOR             reduce using rule 49 (expression -> vector .)
    WHILE           reduce using rule 49 (expression -> vector .)
    {               reduce using rule 49 (expression -> vector .)
    PRINT           reduce using rule 49 (expression -> vector .)
    RETURN          reduce using rule 49 (expression -> vector .)
    CONTINUE        reduce using rule 49 (expression -> vector .)
    BREAK           reduce using rule 49 (expression -> vector .)
    ID              reduce using rule 49 (expression -> vector .)


state 34

    (50) expression -> matrix .

    ADD             reduce using rule 50 (expression -> matrix .)
    SUB             reduce using rule 50 (expression -> matrix .)
    MUL             reduce using rule 50 (expression -> matrix .)
    DIV             reduce using rule 50 (expression -> matrix .)
    DOTADD          reduce using rule 50 (expression -> matrix .)
    DOTSUB          reduce using rule 50 (expression -> matrix .)
    DOTMUL          reduce using rule 50 (expression -> matrix .)
    DOTDIV          reduce using rule 50 (expression -> matrix .)
    TRANSPOSE       reduce using rule 50 (expression -> matrix .)
    ,               reduce using rule 50 (expression -> matrix .)
    ;               reduce using rule 50 (expression -> matrix .)
    EQ              reduce using rule 50 (expression -> matrix .)
    GT              reduce using rule 50 (expression -> matrix .)
    LT              reduce using rule 50 (expression -> matrix .)
    GE              reduce using rule 50 (expression -> matrix .)
    LE              reduce using rule 50 (expression -> matrix .)
    NE              reduce using rule 50 (expression -> matrix .)
    ]               reduce using rule 50 (expression -> matrix .)
    )               reduce using rule 50 (expression -> matrix .)
    :               reduce using rule 50 (expression -> matrix .)
    IF              reduce using rule 50 (expression -> matrix .)
    FOR             reduce using rule 50 (expression -> matrix .)
    WHILE           reduce using rule 50 (expression -> matrix .)
    {               reduce using rule 50 (expression -> matrix .)
    PRINT           reduce using rule 50 (expression -> matrix .)
    RETURN          reduce using rule 50 (expression -> matrix .)
    CONTINUE        reduce using rule 50 (expression -> matrix .)
    BREAK           reduce using rule 50 (expression -> matrix .)
    ID              reduce using rule 50 (expression -> matrix .)


state 35

    (57) vector -> [ . expression ]
    (58) vector -> [ . multiple_expressions ]
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (59) multiple_expressions -> . expression , expression
    (60) multiple_expressions -> . multiple_expressions , expression
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 65
    multiple_expressions           shift and go to state 66
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 36

    (51) matrix -> ONES . ( expression )
    (52) matrix -> ONES . ( expression , expression )

    (               shift and go to state 67


state 37

    (53) matrix -> ZEROS . ( expression )
    (54) matrix -> ZEROS . ( expression , expression )

    (               shift and go to state 68


state 38

    (55) matrix -> EYE . ( expression )
    (56) matrix -> EYE . ( expression , expression )

    (               shift and go to state 69


state 39

    (14) statement -> RETURN expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ;               reduce using rule 14 (statement -> RETURN expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 40

    (18) statement -> assignable ASSIGN . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    assignable                     shift and go to state 30
    expression                     shift and go to state 70
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 41

    (19) statement -> assignable ADDASSIGN . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    assignable                     shift and go to state 30
    expression                     shift and go to state 71
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 42

    (20) statement -> assignable SUBASSIGN . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    assignable                     shift and go to state 30
    expression                     shift and go to state 72
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 43

    (21) statement -> assignable MULASSIGN . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    assignable                     shift and go to state 30
    expression                     shift and go to state 73
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 44

    (22) statement -> assignable DIVASSIGN . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    assignable                     shift and go to state 30
    expression                     shift and go to state 74
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 45

    (7) instruction -> IF ( condition . ) instruction ELSE instruction
    (8) instruction -> IF ( condition . ) instruction

    )               shift and go to state 75


state 46

    (23) condition -> expression . EQ expression
    (24) condition -> expression . GT expression
    (25) condition -> expression . LT expression
    (26) condition -> expression . GE expression
    (27) condition -> expression . LE expression
    (28) condition -> expression . NE expression
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    EQ              shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    NE              shift and go to state 81
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 47

    (9) instruction -> FOR variable ASSIGN . expression : expression instruction
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    variable                       shift and go to state 8
    expression                     shift and go to state 82
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    reference                      shift and go to state 16

state 48

    (44) reference -> variable [ expression . ]
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE
    (59) multiple_expressions -> expression . , expression

    ]               shift and go to state 83
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60
    ,               shift and go to state 61


state 49

    (45) reference -> variable [ multiple_expressions . ]
    (60) multiple_expressions -> multiple_expressions . , expression

    ]               shift and go to state 84
    ,               shift and go to state 62


state 50

    (10) instruction -> WHILE ( condition . ) instruction

    )               shift and go to state 85


state 51

    (11) instruction -> { instructions } .

    IF              reduce using rule 11 (instruction -> { instructions } .)
    FOR             reduce using rule 11 (instruction -> { instructions } .)
    WHILE           reduce using rule 11 (instruction -> { instructions } .)
    {               reduce using rule 11 (instruction -> { instructions } .)
    PRINT           reduce using rule 11 (instruction -> { instructions } .)
    RETURN          reduce using rule 11 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 11 (instruction -> { instructions } .)
    BREAK           reduce using rule 11 (instruction -> { instructions } .)
    ID              reduce using rule 11 (instruction -> { instructions } .)
    $end            reduce using rule 11 (instruction -> { instructions } .)
    }               reduce using rule 11 (instruction -> { instructions } .)
    ELSE            reduce using rule 11 (instruction -> { instructions } .)


state 52

    (29) expression -> expression ADD . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 86
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 53

    (30) expression -> expression SUB . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 87
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 54

    (31) expression -> expression MUL . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 88
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 55

    (32) expression -> expression DIV . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 89
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 56

    (33) expression -> expression DOTADD . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 90
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 57

    (34) expression -> expression DOTSUB . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 91
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 58

    (35) expression -> expression DOTMUL . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 92
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 59

    (36) expression -> expression DOTDIV . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 93
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 60

    (38) expression -> expression TRANSPOSE .

    ADD             reduce using rule 38 (expression -> expression TRANSPOSE .)
    SUB             reduce using rule 38 (expression -> expression TRANSPOSE .)
    MUL             reduce using rule 38 (expression -> expression TRANSPOSE .)
    DIV             reduce using rule 38 (expression -> expression TRANSPOSE .)
    DOTADD          reduce using rule 38 (expression -> expression TRANSPOSE .)
    DOTSUB          reduce using rule 38 (expression -> expression TRANSPOSE .)
    DOTMUL          reduce using rule 38 (expression -> expression TRANSPOSE .)
    DOTDIV          reduce using rule 38 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 38 (expression -> expression TRANSPOSE .)
    ,               reduce using rule 38 (expression -> expression TRANSPOSE .)
    ;               reduce using rule 38 (expression -> expression TRANSPOSE .)
    EQ              reduce using rule 38 (expression -> expression TRANSPOSE .)
    GT              reduce using rule 38 (expression -> expression TRANSPOSE .)
    LT              reduce using rule 38 (expression -> expression TRANSPOSE .)
    GE              reduce using rule 38 (expression -> expression TRANSPOSE .)
    LE              reduce using rule 38 (expression -> expression TRANSPOSE .)
    NE              reduce using rule 38 (expression -> expression TRANSPOSE .)
    ]               reduce using rule 38 (expression -> expression TRANSPOSE .)
    )               reduce using rule 38 (expression -> expression TRANSPOSE .)
    :               reduce using rule 38 (expression -> expression TRANSPOSE .)
    IF              reduce using rule 38 (expression -> expression TRANSPOSE .)
    FOR             reduce using rule 38 (expression -> expression TRANSPOSE .)
    WHILE           reduce using rule 38 (expression -> expression TRANSPOSE .)
    {               reduce using rule 38 (expression -> expression TRANSPOSE .)
    PRINT           reduce using rule 38 (expression -> expression TRANSPOSE .)
    RETURN          reduce using rule 38 (expression -> expression TRANSPOSE .)
    CONTINUE        reduce using rule 38 (expression -> expression TRANSPOSE .)
    BREAK           reduce using rule 38 (expression -> expression TRANSPOSE .)
    ID              reduce using rule 38 (expression -> expression TRANSPOSE .)


state 61

    (59) multiple_expressions -> expression , . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 94
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 62

    (60) multiple_expressions -> multiple_expressions , . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 95
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 63

    (37) expression -> SUB expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ADD             reduce using rule 37 (expression -> SUB expression .)
    SUB             reduce using rule 37 (expression -> SUB expression .)
    MUL             reduce using rule 37 (expression -> SUB expression .)
    DIV             reduce using rule 37 (expression -> SUB expression .)
    DOTADD          reduce using rule 37 (expression -> SUB expression .)
    DOTSUB          reduce using rule 37 (expression -> SUB expression .)
    DOTMUL          reduce using rule 37 (expression -> SUB expression .)
    DOTDIV          reduce using rule 37 (expression -> SUB expression .)
    ,               reduce using rule 37 (expression -> SUB expression .)
    ;               reduce using rule 37 (expression -> SUB expression .)
    EQ              reduce using rule 37 (expression -> SUB expression .)
    GT              reduce using rule 37 (expression -> SUB expression .)
    LT              reduce using rule 37 (expression -> SUB expression .)
    GE              reduce using rule 37 (expression -> SUB expression .)
    LE              reduce using rule 37 (expression -> SUB expression .)
    NE              reduce using rule 37 (expression -> SUB expression .)
    ]               reduce using rule 37 (expression -> SUB expression .)
    )               reduce using rule 37 (expression -> SUB expression .)
    :               reduce using rule 37 (expression -> SUB expression .)
    IF              reduce using rule 37 (expression -> SUB expression .)
    FOR             reduce using rule 37 (expression -> SUB expression .)
    WHILE           reduce using rule 37 (expression -> SUB expression .)
    {               reduce using rule 37 (expression -> SUB expression .)
    PRINT           reduce using rule 37 (expression -> SUB expression .)
    RETURN          reduce using rule 37 (expression -> SUB expression .)
    CONTINUE        reduce using rule 37 (expression -> SUB expression .)
    BREAK           reduce using rule 37 (expression -> SUB expression .)
    ID              reduce using rule 37 (expression -> SUB expression .)
    TRANSPOSE       shift and go to state 60

  ! TRANSPOSE       [ reduce using rule 37 (expression -> SUB expression .) ]
  ! ADD             [ shift and go to state 52 ]
  ! SUB             [ shift and go to state 53 ]
  ! MUL             [ shift and go to state 54 ]
  ! DIV             [ shift and go to state 55 ]
  ! DOTADD          [ shift and go to state 56 ]
  ! DOTSUB          [ shift and go to state 57 ]
  ! DOTMUL          [ shift and go to state 58 ]
  ! DOTDIV          [ shift and go to state 59 ]


state 64

    (48) expression -> ( expression . )
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               shift and go to state 96
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 65

    (57) vector -> [ expression . ]
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE
    (59) multiple_expressions -> expression . , expression

    ]               shift and go to state 97
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60
    ,               shift and go to state 61


state 66

    (58) vector -> [ multiple_expressions . ]
    (60) multiple_expressions -> multiple_expressions . , expression

    ]               shift and go to state 98
    ,               shift and go to state 62


state 67

    (51) matrix -> ONES ( . expression )
    (52) matrix -> ONES ( . expression , expression )
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 99
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 68

    (53) matrix -> ZEROS ( . expression )
    (54) matrix -> ZEROS ( . expression , expression )
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 100
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 69

    (55) matrix -> EYE ( . expression )
    (56) matrix -> EYE ( . expression , expression )
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 101
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 70

    (18) statement -> assignable ASSIGN expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ;               reduce using rule 18 (statement -> assignable ASSIGN expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 71

    (19) statement -> assignable ADDASSIGN expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ;               reduce using rule 19 (statement -> assignable ADDASSIGN expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 72

    (20) statement -> assignable SUBASSIGN expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ;               reduce using rule 20 (statement -> assignable SUBASSIGN expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 73

    (21) statement -> assignable MULASSIGN expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ;               reduce using rule 21 (statement -> assignable MULASSIGN expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 74

    (22) statement -> assignable DIVASSIGN expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ;               reduce using rule 22 (statement -> assignable DIVASSIGN expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 75

    (7) instruction -> IF ( condition ) . instruction ELSE instruction
    (8) instruction -> IF ( condition ) . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR variable ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . PRINT multiple_expressions
    (14) statement -> . RETURN expression
    (15) statement -> . RETURN
    (16) statement -> . CONTINUE
    (17) statement -> . BREAK
    (18) statement -> . assignable ASSIGN expression
    (19) statement -> . assignable ADDASSIGN expression
    (20) statement -> . assignable SUBASSIGN expression
    (21) statement -> . assignable MULASSIGN expression
    (22) statement -> . assignable DIVASSIGN expression
    (42) assignable -> . variable
    (43) assignable -> . reference
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 17

    instruction                    shift and go to state 102
    statement                      shift and go to state 5
    variable                       shift and go to state 8
    assignable                     shift and go to state 15
    reference                      shift and go to state 16

state 76

    (23) condition -> expression EQ . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 103
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 77

    (24) condition -> expression GT . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 104
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 78

    (25) condition -> expression LT . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 105
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 79

    (26) condition -> expression GE . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 106
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 80

    (27) condition -> expression LE . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 107
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 81

    (28) condition -> expression NE . expression
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 108
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 82

    (9) instruction -> FOR variable ASSIGN expression . : expression instruction
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    :               shift and go to state 109
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 83

    (44) reference -> variable [ expression ] .

    ASSIGN          reduce using rule 44 (reference -> variable [ expression ] .)
    ADDASSIGN       reduce using rule 44 (reference -> variable [ expression ] .)
    SUBASSIGN       reduce using rule 44 (reference -> variable [ expression ] .)
    MULASSIGN       reduce using rule 44 (reference -> variable [ expression ] .)
    DIVASSIGN       reduce using rule 44 (reference -> variable [ expression ] .)
    ADD             reduce using rule 44 (reference -> variable [ expression ] .)
    SUB             reduce using rule 44 (reference -> variable [ expression ] .)
    MUL             reduce using rule 44 (reference -> variable [ expression ] .)
    DIV             reduce using rule 44 (reference -> variable [ expression ] .)
    DOTADD          reduce using rule 44 (reference -> variable [ expression ] .)
    DOTSUB          reduce using rule 44 (reference -> variable [ expression ] .)
    DOTMUL          reduce using rule 44 (reference -> variable [ expression ] .)
    DOTDIV          reduce using rule 44 (reference -> variable [ expression ] .)
    TRANSPOSE       reduce using rule 44 (reference -> variable [ expression ] .)
    ,               reduce using rule 44 (reference -> variable [ expression ] .)
    ;               reduce using rule 44 (reference -> variable [ expression ] .)
    EQ              reduce using rule 44 (reference -> variable [ expression ] .)
    GT              reduce using rule 44 (reference -> variable [ expression ] .)
    LT              reduce using rule 44 (reference -> variable [ expression ] .)
    GE              reduce using rule 44 (reference -> variable [ expression ] .)
    LE              reduce using rule 44 (reference -> variable [ expression ] .)
    NE              reduce using rule 44 (reference -> variable [ expression ] .)
    ]               reduce using rule 44 (reference -> variable [ expression ] .)
    )               reduce using rule 44 (reference -> variable [ expression ] .)
    :               reduce using rule 44 (reference -> variable [ expression ] .)
    IF              reduce using rule 44 (reference -> variable [ expression ] .)
    FOR             reduce using rule 44 (reference -> variable [ expression ] .)
    WHILE           reduce using rule 44 (reference -> variable [ expression ] .)
    {               reduce using rule 44 (reference -> variable [ expression ] .)
    PRINT           reduce using rule 44 (reference -> variable [ expression ] .)
    RETURN          reduce using rule 44 (reference -> variable [ expression ] .)
    CONTINUE        reduce using rule 44 (reference -> variable [ expression ] .)
    BREAK           reduce using rule 44 (reference -> variable [ expression ] .)
    ID              reduce using rule 44 (reference -> variable [ expression ] .)


state 84

    (45) reference -> variable [ multiple_expressions ] .

    ASSIGN          reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    ADDASSIGN       reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    SUBASSIGN       reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    MULASSIGN       reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    DIVASSIGN       reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    ADD             reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    SUB             reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    MUL             reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    DIV             reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    DOTADD          reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    DOTSUB          reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    DOTMUL          reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    DOTDIV          reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    TRANSPOSE       reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    ,               reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    ;               reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    EQ              reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    GT              reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    LT              reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    GE              reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    LE              reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    NE              reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    ]               reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    )               reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    :               reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    IF              reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    FOR             reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    WHILE           reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    {               reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    PRINT           reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    RETURN          reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    CONTINUE        reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    BREAK           reduce using rule 45 (reference -> variable [ multiple_expressions ] .)
    ID              reduce using rule 45 (reference -> variable [ multiple_expressions ] .)


state 85

    (10) instruction -> WHILE ( condition ) . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR variable ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . PRINT multiple_expressions
    (14) statement -> . RETURN expression
    (15) statement -> . RETURN
    (16) statement -> . CONTINUE
    (17) statement -> . BREAK
    (18) statement -> . assignable ASSIGN expression
    (19) statement -> . assignable ADDASSIGN expression
    (20) statement -> . assignable SUBASSIGN expression
    (21) statement -> . assignable MULASSIGN expression
    (22) statement -> . assignable DIVASSIGN expression
    (42) assignable -> . variable
    (43) assignable -> . reference
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 17

    instruction                    shift and go to state 110
    statement                      shift and go to state 5
    variable                       shift and go to state 8
    assignable                     shift and go to state 15
    reference                      shift and go to state 16

state 86

    (29) expression -> expression ADD expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ADD             reduce using rule 29 (expression -> expression ADD expression .)
    SUB             reduce using rule 29 (expression -> expression ADD expression .)
    DOTADD          reduce using rule 29 (expression -> expression ADD expression .)
    DOTSUB          reduce using rule 29 (expression -> expression ADD expression .)
    ,               reduce using rule 29 (expression -> expression ADD expression .)
    ;               reduce using rule 29 (expression -> expression ADD expression .)
    EQ              reduce using rule 29 (expression -> expression ADD expression .)
    GT              reduce using rule 29 (expression -> expression ADD expression .)
    LT              reduce using rule 29 (expression -> expression ADD expression .)
    GE              reduce using rule 29 (expression -> expression ADD expression .)
    LE              reduce using rule 29 (expression -> expression ADD expression .)
    NE              reduce using rule 29 (expression -> expression ADD expression .)
    ]               reduce using rule 29 (expression -> expression ADD expression .)
    )               reduce using rule 29 (expression -> expression ADD expression .)
    :               reduce using rule 29 (expression -> expression ADD expression .)
    IF              reduce using rule 29 (expression -> expression ADD expression .)
    FOR             reduce using rule 29 (expression -> expression ADD expression .)
    WHILE           reduce using rule 29 (expression -> expression ADD expression .)
    {               reduce using rule 29 (expression -> expression ADD expression .)
    PRINT           reduce using rule 29 (expression -> expression ADD expression .)
    RETURN          reduce using rule 29 (expression -> expression ADD expression .)
    CONTINUE        reduce using rule 29 (expression -> expression ADD expression .)
    BREAK           reduce using rule 29 (expression -> expression ADD expression .)
    ID              reduce using rule 29 (expression -> expression ADD expression .)
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60

  ! MUL             [ reduce using rule 29 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 29 (expression -> expression ADD expression .) ]
  ! DOTMUL          [ reduce using rule 29 (expression -> expression ADD expression .) ]
  ! DOTDIV          [ reduce using rule 29 (expression -> expression ADD expression .) ]
  ! TRANSPOSE       [ reduce using rule 29 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 52 ]
  ! SUB             [ shift and go to state 53 ]
  ! DOTADD          [ shift and go to state 56 ]
  ! DOTSUB          [ shift and go to state 57 ]


state 87

    (30) expression -> expression SUB expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ADD             reduce using rule 30 (expression -> expression SUB expression .)
    SUB             reduce using rule 30 (expression -> expression SUB expression .)
    DOTADD          reduce using rule 30 (expression -> expression SUB expression .)
    DOTSUB          reduce using rule 30 (expression -> expression SUB expression .)
    ,               reduce using rule 30 (expression -> expression SUB expression .)
    ;               reduce using rule 30 (expression -> expression SUB expression .)
    EQ              reduce using rule 30 (expression -> expression SUB expression .)
    GT              reduce using rule 30 (expression -> expression SUB expression .)
    LT              reduce using rule 30 (expression -> expression SUB expression .)
    GE              reduce using rule 30 (expression -> expression SUB expression .)
    LE              reduce using rule 30 (expression -> expression SUB expression .)
    NE              reduce using rule 30 (expression -> expression SUB expression .)
    ]               reduce using rule 30 (expression -> expression SUB expression .)
    )               reduce using rule 30 (expression -> expression SUB expression .)
    :               reduce using rule 30 (expression -> expression SUB expression .)
    IF              reduce using rule 30 (expression -> expression SUB expression .)
    FOR             reduce using rule 30 (expression -> expression SUB expression .)
    WHILE           reduce using rule 30 (expression -> expression SUB expression .)
    {               reduce using rule 30 (expression -> expression SUB expression .)
    PRINT           reduce using rule 30 (expression -> expression SUB expression .)
    RETURN          reduce using rule 30 (expression -> expression SUB expression .)
    CONTINUE        reduce using rule 30 (expression -> expression SUB expression .)
    BREAK           reduce using rule 30 (expression -> expression SUB expression .)
    ID              reduce using rule 30 (expression -> expression SUB expression .)
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60

  ! MUL             [ reduce using rule 30 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 30 (expression -> expression SUB expression .) ]
  ! DOTMUL          [ reduce using rule 30 (expression -> expression SUB expression .) ]
  ! DOTDIV          [ reduce using rule 30 (expression -> expression SUB expression .) ]
  ! TRANSPOSE       [ reduce using rule 30 (expression -> expression SUB expression .) ]
  ! ADD             [ shift and go to state 52 ]
  ! SUB             [ shift and go to state 53 ]
  ! DOTADD          [ shift and go to state 56 ]
  ! DOTSUB          [ shift and go to state 57 ]


state 88

    (31) expression -> expression MUL expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ADD             reduce using rule 31 (expression -> expression MUL expression .)
    SUB             reduce using rule 31 (expression -> expression MUL expression .)
    MUL             reduce using rule 31 (expression -> expression MUL expression .)
    DIV             reduce using rule 31 (expression -> expression MUL expression .)
    DOTADD          reduce using rule 31 (expression -> expression MUL expression .)
    DOTSUB          reduce using rule 31 (expression -> expression MUL expression .)
    DOTMUL          reduce using rule 31 (expression -> expression MUL expression .)
    DOTDIV          reduce using rule 31 (expression -> expression MUL expression .)
    ,               reduce using rule 31 (expression -> expression MUL expression .)
    ;               reduce using rule 31 (expression -> expression MUL expression .)
    EQ              reduce using rule 31 (expression -> expression MUL expression .)
    GT              reduce using rule 31 (expression -> expression MUL expression .)
    LT              reduce using rule 31 (expression -> expression MUL expression .)
    GE              reduce using rule 31 (expression -> expression MUL expression .)
    LE              reduce using rule 31 (expression -> expression MUL expression .)
    NE              reduce using rule 31 (expression -> expression MUL expression .)
    ]               reduce using rule 31 (expression -> expression MUL expression .)
    )               reduce using rule 31 (expression -> expression MUL expression .)
    :               reduce using rule 31 (expression -> expression MUL expression .)
    IF              reduce using rule 31 (expression -> expression MUL expression .)
    FOR             reduce using rule 31 (expression -> expression MUL expression .)
    WHILE           reduce using rule 31 (expression -> expression MUL expression .)
    {               reduce using rule 31 (expression -> expression MUL expression .)
    PRINT           reduce using rule 31 (expression -> expression MUL expression .)
    RETURN          reduce using rule 31 (expression -> expression MUL expression .)
    CONTINUE        reduce using rule 31 (expression -> expression MUL expression .)
    BREAK           reduce using rule 31 (expression -> expression MUL expression .)
    ID              reduce using rule 31 (expression -> expression MUL expression .)
    TRANSPOSE       shift and go to state 60

  ! TRANSPOSE       [ reduce using rule 31 (expression -> expression MUL expression .) ]
  ! ADD             [ shift and go to state 52 ]
  ! SUB             [ shift and go to state 53 ]
  ! MUL             [ shift and go to state 54 ]
  ! DIV             [ shift and go to state 55 ]
  ! DOTADD          [ shift and go to state 56 ]
  ! DOTSUB          [ shift and go to state 57 ]
  ! DOTMUL          [ shift and go to state 58 ]
  ! DOTDIV          [ shift and go to state 59 ]


state 89

    (32) expression -> expression DIV expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ADD             reduce using rule 32 (expression -> expression DIV expression .)
    SUB             reduce using rule 32 (expression -> expression DIV expression .)
    MUL             reduce using rule 32 (expression -> expression DIV expression .)
    DIV             reduce using rule 32 (expression -> expression DIV expression .)
    DOTADD          reduce using rule 32 (expression -> expression DIV expression .)
    DOTSUB          reduce using rule 32 (expression -> expression DIV expression .)
    DOTMUL          reduce using rule 32 (expression -> expression DIV expression .)
    DOTDIV          reduce using rule 32 (expression -> expression DIV expression .)
    ,               reduce using rule 32 (expression -> expression DIV expression .)
    ;               reduce using rule 32 (expression -> expression DIV expression .)
    EQ              reduce using rule 32 (expression -> expression DIV expression .)
    GT              reduce using rule 32 (expression -> expression DIV expression .)
    LT              reduce using rule 32 (expression -> expression DIV expression .)
    GE              reduce using rule 32 (expression -> expression DIV expression .)
    LE              reduce using rule 32 (expression -> expression DIV expression .)
    NE              reduce using rule 32 (expression -> expression DIV expression .)
    ]               reduce using rule 32 (expression -> expression DIV expression .)
    )               reduce using rule 32 (expression -> expression DIV expression .)
    :               reduce using rule 32 (expression -> expression DIV expression .)
    IF              reduce using rule 32 (expression -> expression DIV expression .)
    FOR             reduce using rule 32 (expression -> expression DIV expression .)
    WHILE           reduce using rule 32 (expression -> expression DIV expression .)
    {               reduce using rule 32 (expression -> expression DIV expression .)
    PRINT           reduce using rule 32 (expression -> expression DIV expression .)
    RETURN          reduce using rule 32 (expression -> expression DIV expression .)
    CONTINUE        reduce using rule 32 (expression -> expression DIV expression .)
    BREAK           reduce using rule 32 (expression -> expression DIV expression .)
    ID              reduce using rule 32 (expression -> expression DIV expression .)
    TRANSPOSE       shift and go to state 60

  ! TRANSPOSE       [ reduce using rule 32 (expression -> expression DIV expression .) ]
  ! ADD             [ shift and go to state 52 ]
  ! SUB             [ shift and go to state 53 ]
  ! MUL             [ shift and go to state 54 ]
  ! DIV             [ shift and go to state 55 ]
  ! DOTADD          [ shift and go to state 56 ]
  ! DOTSUB          [ shift and go to state 57 ]
  ! DOTMUL          [ shift and go to state 58 ]
  ! DOTDIV          [ shift and go to state 59 ]


state 90

    (33) expression -> expression DOTADD expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ADD             reduce using rule 33 (expression -> expression DOTADD expression .)
    SUB             reduce using rule 33 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 33 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 33 (expression -> expression DOTADD expression .)
    ,               reduce using rule 33 (expression -> expression DOTADD expression .)
    ;               reduce using rule 33 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 33 (expression -> expression DOTADD expression .)
    GT              reduce using rule 33 (expression -> expression DOTADD expression .)
    LT              reduce using rule 33 (expression -> expression DOTADD expression .)
    GE              reduce using rule 33 (expression -> expression DOTADD expression .)
    LE              reduce using rule 33 (expression -> expression DOTADD expression .)
    NE              reduce using rule 33 (expression -> expression DOTADD expression .)
    ]               reduce using rule 33 (expression -> expression DOTADD expression .)
    )               reduce using rule 33 (expression -> expression DOTADD expression .)
    :               reduce using rule 33 (expression -> expression DOTADD expression .)
    IF              reduce using rule 33 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 33 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 33 (expression -> expression DOTADD expression .)
    {               reduce using rule 33 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 33 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 33 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 33 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 33 (expression -> expression DOTADD expression .)
    ID              reduce using rule 33 (expression -> expression DOTADD expression .)
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60

  ! MUL             [ reduce using rule 33 (expression -> expression DOTADD expression .) ]
  ! DIV             [ reduce using rule 33 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 33 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 33 (expression -> expression DOTADD expression .) ]
  ! TRANSPOSE       [ reduce using rule 33 (expression -> expression DOTADD expression .) ]
  ! ADD             [ shift and go to state 52 ]
  ! SUB             [ shift and go to state 53 ]
  ! DOTADD          [ shift and go to state 56 ]
  ! DOTSUB          [ shift and go to state 57 ]


state 91

    (34) expression -> expression DOTSUB expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ADD             reduce using rule 34 (expression -> expression DOTSUB expression .)
    SUB             reduce using rule 34 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 34 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 34 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 34 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 34 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 34 (expression -> expression DOTSUB expression .)
    GT              reduce using rule 34 (expression -> expression DOTSUB expression .)
    LT              reduce using rule 34 (expression -> expression DOTSUB expression .)
    GE              reduce using rule 34 (expression -> expression DOTSUB expression .)
    LE              reduce using rule 34 (expression -> expression DOTSUB expression .)
    NE              reduce using rule 34 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 34 (expression -> expression DOTSUB expression .)
    )               reduce using rule 34 (expression -> expression DOTSUB expression .)
    :               reduce using rule 34 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 34 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 34 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 34 (expression -> expression DOTSUB expression .)
    {               reduce using rule 34 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 34 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 34 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 34 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 34 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 34 (expression -> expression DOTSUB expression .)
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60

  ! MUL             [ reduce using rule 34 (expression -> expression DOTSUB expression .) ]
  ! DIV             [ reduce using rule 34 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 34 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 34 (expression -> expression DOTSUB expression .) ]
  ! TRANSPOSE       [ reduce using rule 34 (expression -> expression DOTSUB expression .) ]
  ! ADD             [ shift and go to state 52 ]
  ! SUB             [ shift and go to state 53 ]
  ! DOTADD          [ shift and go to state 56 ]
  ! DOTSUB          [ shift and go to state 57 ]


state 92

    (35) expression -> expression DOTMUL expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ADD             reduce using rule 35 (expression -> expression DOTMUL expression .)
    SUB             reduce using rule 35 (expression -> expression DOTMUL expression .)
    MUL             reduce using rule 35 (expression -> expression DOTMUL expression .)
    DIV             reduce using rule 35 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 35 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 35 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 35 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 35 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 35 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 35 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 35 (expression -> expression DOTMUL expression .)
    GT              reduce using rule 35 (expression -> expression DOTMUL expression .)
    LT              reduce using rule 35 (expression -> expression DOTMUL expression .)
    GE              reduce using rule 35 (expression -> expression DOTMUL expression .)
    LE              reduce using rule 35 (expression -> expression DOTMUL expression .)
    NE              reduce using rule 35 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 35 (expression -> expression DOTMUL expression .)
    )               reduce using rule 35 (expression -> expression DOTMUL expression .)
    :               reduce using rule 35 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 35 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 35 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 35 (expression -> expression DOTMUL expression .)
    {               reduce using rule 35 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 35 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 35 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 35 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 35 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 35 (expression -> expression DOTMUL expression .)
    TRANSPOSE       shift and go to state 60

  ! TRANSPOSE       [ reduce using rule 35 (expression -> expression DOTMUL expression .) ]
  ! ADD             [ shift and go to state 52 ]
  ! SUB             [ shift and go to state 53 ]
  ! MUL             [ shift and go to state 54 ]
  ! DIV             [ shift and go to state 55 ]
  ! DOTADD          [ shift and go to state 56 ]
  ! DOTSUB          [ shift and go to state 57 ]
  ! DOTMUL          [ shift and go to state 58 ]
  ! DOTDIV          [ shift and go to state 59 ]


state 93

    (36) expression -> expression DOTDIV expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ADD             reduce using rule 36 (expression -> expression DOTDIV expression .)
    SUB             reduce using rule 36 (expression -> expression DOTDIV expression .)
    MUL             reduce using rule 36 (expression -> expression DOTDIV expression .)
    DIV             reduce using rule 36 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 36 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 36 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 36 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 36 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 36 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 36 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 36 (expression -> expression DOTDIV expression .)
    GT              reduce using rule 36 (expression -> expression DOTDIV expression .)
    LT              reduce using rule 36 (expression -> expression DOTDIV expression .)
    GE              reduce using rule 36 (expression -> expression DOTDIV expression .)
    LE              reduce using rule 36 (expression -> expression DOTDIV expression .)
    NE              reduce using rule 36 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 36 (expression -> expression DOTDIV expression .)
    )               reduce using rule 36 (expression -> expression DOTDIV expression .)
    :               reduce using rule 36 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 36 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 36 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 36 (expression -> expression DOTDIV expression .)
    {               reduce using rule 36 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 36 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 36 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 36 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 36 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 36 (expression -> expression DOTDIV expression .)
    TRANSPOSE       shift and go to state 60

  ! TRANSPOSE       [ reduce using rule 36 (expression -> expression DOTDIV expression .) ]
  ! ADD             [ shift and go to state 52 ]
  ! SUB             [ shift and go to state 53 ]
  ! MUL             [ shift and go to state 54 ]
  ! DIV             [ shift and go to state 55 ]
  ! DOTADD          [ shift and go to state 56 ]
  ! DOTSUB          [ shift and go to state 57 ]
  ! DOTMUL          [ shift and go to state 58 ]
  ! DOTDIV          [ shift and go to state 59 ]


state 94

    (59) multiple_expressions -> expression , expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ,               reduce using rule 59 (multiple_expressions -> expression , expression .)
    ;               reduce using rule 59 (multiple_expressions -> expression , expression .)
    ]               reduce using rule 59 (multiple_expressions -> expression , expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 95

    (60) multiple_expressions -> multiple_expressions , expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    ,               reduce using rule 60 (multiple_expressions -> multiple_expressions , expression .)
    ;               reduce using rule 60 (multiple_expressions -> multiple_expressions , expression .)
    ]               reduce using rule 60 (multiple_expressions -> multiple_expressions , expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 96

    (48) expression -> ( expression ) .

    ADD             reduce using rule 48 (expression -> ( expression ) .)
    SUB             reduce using rule 48 (expression -> ( expression ) .)
    MUL             reduce using rule 48 (expression -> ( expression ) .)
    DIV             reduce using rule 48 (expression -> ( expression ) .)
    DOTADD          reduce using rule 48 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 48 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 48 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 48 (expression -> ( expression ) .)
    TRANSPOSE       reduce using rule 48 (expression -> ( expression ) .)
    ,               reduce using rule 48 (expression -> ( expression ) .)
    ;               reduce using rule 48 (expression -> ( expression ) .)
    EQ              reduce using rule 48 (expression -> ( expression ) .)
    GT              reduce using rule 48 (expression -> ( expression ) .)
    LT              reduce using rule 48 (expression -> ( expression ) .)
    GE              reduce using rule 48 (expression -> ( expression ) .)
    LE              reduce using rule 48 (expression -> ( expression ) .)
    NE              reduce using rule 48 (expression -> ( expression ) .)
    ]               reduce using rule 48 (expression -> ( expression ) .)
    )               reduce using rule 48 (expression -> ( expression ) .)
    :               reduce using rule 48 (expression -> ( expression ) .)
    IF              reduce using rule 48 (expression -> ( expression ) .)
    FOR             reduce using rule 48 (expression -> ( expression ) .)
    WHILE           reduce using rule 48 (expression -> ( expression ) .)
    {               reduce using rule 48 (expression -> ( expression ) .)
    PRINT           reduce using rule 48 (expression -> ( expression ) .)
    RETURN          reduce using rule 48 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 48 (expression -> ( expression ) .)
    BREAK           reduce using rule 48 (expression -> ( expression ) .)
    ID              reduce using rule 48 (expression -> ( expression ) .)


state 97

    (57) vector -> [ expression ] .

    ADD             reduce using rule 57 (vector -> [ expression ] .)
    SUB             reduce using rule 57 (vector -> [ expression ] .)
    MUL             reduce using rule 57 (vector -> [ expression ] .)
    DIV             reduce using rule 57 (vector -> [ expression ] .)
    DOTADD          reduce using rule 57 (vector -> [ expression ] .)
    DOTSUB          reduce using rule 57 (vector -> [ expression ] .)
    DOTMUL          reduce using rule 57 (vector -> [ expression ] .)
    DOTDIV          reduce using rule 57 (vector -> [ expression ] .)
    TRANSPOSE       reduce using rule 57 (vector -> [ expression ] .)
    ,               reduce using rule 57 (vector -> [ expression ] .)
    ;               reduce using rule 57 (vector -> [ expression ] .)
    EQ              reduce using rule 57 (vector -> [ expression ] .)
    GT              reduce using rule 57 (vector -> [ expression ] .)
    LT              reduce using rule 57 (vector -> [ expression ] .)
    GE              reduce using rule 57 (vector -> [ expression ] .)
    LE              reduce using rule 57 (vector -> [ expression ] .)
    NE              reduce using rule 57 (vector -> [ expression ] .)
    ]               reduce using rule 57 (vector -> [ expression ] .)
    )               reduce using rule 57 (vector -> [ expression ] .)
    :               reduce using rule 57 (vector -> [ expression ] .)
    IF              reduce using rule 57 (vector -> [ expression ] .)
    FOR             reduce using rule 57 (vector -> [ expression ] .)
    WHILE           reduce using rule 57 (vector -> [ expression ] .)
    {               reduce using rule 57 (vector -> [ expression ] .)
    PRINT           reduce using rule 57 (vector -> [ expression ] .)
    RETURN          reduce using rule 57 (vector -> [ expression ] .)
    CONTINUE        reduce using rule 57 (vector -> [ expression ] .)
    BREAK           reduce using rule 57 (vector -> [ expression ] .)
    ID              reduce using rule 57 (vector -> [ expression ] .)


state 98

    (58) vector -> [ multiple_expressions ] .

    ADD             reduce using rule 58 (vector -> [ multiple_expressions ] .)
    SUB             reduce using rule 58 (vector -> [ multiple_expressions ] .)
    MUL             reduce using rule 58 (vector -> [ multiple_expressions ] .)
    DIV             reduce using rule 58 (vector -> [ multiple_expressions ] .)
    DOTADD          reduce using rule 58 (vector -> [ multiple_expressions ] .)
    DOTSUB          reduce using rule 58 (vector -> [ multiple_expressions ] .)
    DOTMUL          reduce using rule 58 (vector -> [ multiple_expressions ] .)
    DOTDIV          reduce using rule 58 (vector -> [ multiple_expressions ] .)
    TRANSPOSE       reduce using rule 58 (vector -> [ multiple_expressions ] .)
    ,               reduce using rule 58 (vector -> [ multiple_expressions ] .)
    ;               reduce using rule 58 (vector -> [ multiple_expressions ] .)
    EQ              reduce using rule 58 (vector -> [ multiple_expressions ] .)
    GT              reduce using rule 58 (vector -> [ multiple_expressions ] .)
    LT              reduce using rule 58 (vector -> [ multiple_expressions ] .)
    GE              reduce using rule 58 (vector -> [ multiple_expressions ] .)
    LE              reduce using rule 58 (vector -> [ multiple_expressions ] .)
    NE              reduce using rule 58 (vector -> [ multiple_expressions ] .)
    ]               reduce using rule 58 (vector -> [ multiple_expressions ] .)
    )               reduce using rule 58 (vector -> [ multiple_expressions ] .)
    :               reduce using rule 58 (vector -> [ multiple_expressions ] .)
    IF              reduce using rule 58 (vector -> [ multiple_expressions ] .)
    FOR             reduce using rule 58 (vector -> [ multiple_expressions ] .)
    WHILE           reduce using rule 58 (vector -> [ multiple_expressions ] .)
    {               reduce using rule 58 (vector -> [ multiple_expressions ] .)
    PRINT           reduce using rule 58 (vector -> [ multiple_expressions ] .)
    RETURN          reduce using rule 58 (vector -> [ multiple_expressions ] .)
    CONTINUE        reduce using rule 58 (vector -> [ multiple_expressions ] .)
    BREAK           reduce using rule 58 (vector -> [ multiple_expressions ] .)
    ID              reduce using rule 58 (vector -> [ multiple_expressions ] .)


state 99

    (51) matrix -> ONES ( expression . )
    (52) matrix -> ONES ( expression . , expression )
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               shift and go to state 111
    ,               shift and go to state 112
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 100

    (53) matrix -> ZEROS ( expression . )
    (54) matrix -> ZEROS ( expression . , expression )
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               shift and go to state 113
    ,               shift and go to state 114
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 101

    (55) matrix -> EYE ( expression . )
    (56) matrix -> EYE ( expression . , expression )
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               shift and go to state 115
    ,               shift and go to state 116
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 102

    (7) instruction -> IF ( condition ) instruction . ELSE instruction
    (8) instruction -> IF ( condition ) instruction .

    ELSE            shift and go to state 117
    IF              reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    FOR             reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    WHILE           reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    {               reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    PRINT           reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    RETURN          reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    CONTINUE        reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    BREAK           reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    ID              reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    $end            reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    }               reduce using rule 8 (instruction -> IF ( condition ) instruction .)

  ! ELSE            [ reduce using rule 8 (instruction -> IF ( condition ) instruction .) ]


state 103

    (23) condition -> expression EQ expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               reduce using rule 23 (condition -> expression EQ expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 104

    (24) condition -> expression GT expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               reduce using rule 24 (condition -> expression GT expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 105

    (25) condition -> expression LT expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               reduce using rule 25 (condition -> expression LT expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 106

    (26) condition -> expression GE expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               reduce using rule 26 (condition -> expression GE expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 107

    (27) condition -> expression LE expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               reduce using rule 27 (condition -> expression LE expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 108

    (28) condition -> expression NE expression .
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               reduce using rule 28 (condition -> expression NE expression .)
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 109

    (9) instruction -> FOR variable ASSIGN expression : . expression instruction
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    variable                       shift and go to state 8
    expression                     shift and go to state 118
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    reference                      shift and go to state 16

state 110

    (10) instruction -> WHILE ( condition ) instruction .

    IF              reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    FOR             reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    WHILE           reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    {               reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    PRINT           reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    RETURN          reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    CONTINUE        reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    BREAK           reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    ID              reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    $end            reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    }               reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    ELSE            reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)


state 111

    (51) matrix -> ONES ( expression ) .

    ADD             reduce using rule 51 (matrix -> ONES ( expression ) .)
    SUB             reduce using rule 51 (matrix -> ONES ( expression ) .)
    MUL             reduce using rule 51 (matrix -> ONES ( expression ) .)
    DIV             reduce using rule 51 (matrix -> ONES ( expression ) .)
    DOTADD          reduce using rule 51 (matrix -> ONES ( expression ) .)
    DOTSUB          reduce using rule 51 (matrix -> ONES ( expression ) .)
    DOTMUL          reduce using rule 51 (matrix -> ONES ( expression ) .)
    DOTDIV          reduce using rule 51 (matrix -> ONES ( expression ) .)
    TRANSPOSE       reduce using rule 51 (matrix -> ONES ( expression ) .)
    ,               reduce using rule 51 (matrix -> ONES ( expression ) .)
    ;               reduce using rule 51 (matrix -> ONES ( expression ) .)
    EQ              reduce using rule 51 (matrix -> ONES ( expression ) .)
    GT              reduce using rule 51 (matrix -> ONES ( expression ) .)
    LT              reduce using rule 51 (matrix -> ONES ( expression ) .)
    GE              reduce using rule 51 (matrix -> ONES ( expression ) .)
    LE              reduce using rule 51 (matrix -> ONES ( expression ) .)
    NE              reduce using rule 51 (matrix -> ONES ( expression ) .)
    ]               reduce using rule 51 (matrix -> ONES ( expression ) .)
    )               reduce using rule 51 (matrix -> ONES ( expression ) .)
    :               reduce using rule 51 (matrix -> ONES ( expression ) .)
    IF              reduce using rule 51 (matrix -> ONES ( expression ) .)
    FOR             reduce using rule 51 (matrix -> ONES ( expression ) .)
    WHILE           reduce using rule 51 (matrix -> ONES ( expression ) .)
    {               reduce using rule 51 (matrix -> ONES ( expression ) .)
    PRINT           reduce using rule 51 (matrix -> ONES ( expression ) .)
    RETURN          reduce using rule 51 (matrix -> ONES ( expression ) .)
    CONTINUE        reduce using rule 51 (matrix -> ONES ( expression ) .)
    BREAK           reduce using rule 51 (matrix -> ONES ( expression ) .)
    ID              reduce using rule 51 (matrix -> ONES ( expression ) .)


state 112

    (52) matrix -> ONES ( expression , . expression )
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 119
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 113

    (53) matrix -> ZEROS ( expression ) .

    ADD             reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    SUB             reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    MUL             reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    DIV             reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    DOTADD          reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    DOTSUB          reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    DOTMUL          reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    DOTDIV          reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    TRANSPOSE       reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    ,               reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    ;               reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    EQ              reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    GT              reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    LT              reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    GE              reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    LE              reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    NE              reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    ]               reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    )               reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    :               reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    IF              reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    FOR             reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    WHILE           reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    {               reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    PRINT           reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    RETURN          reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    BREAK           reduce using rule 53 (matrix -> ZEROS ( expression ) .)
    ID              reduce using rule 53 (matrix -> ZEROS ( expression ) .)


state 114

    (54) matrix -> ZEROS ( expression , . expression )
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 120
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 115

    (55) matrix -> EYE ( expression ) .

    ADD             reduce using rule 55 (matrix -> EYE ( expression ) .)
    SUB             reduce using rule 55 (matrix -> EYE ( expression ) .)
    MUL             reduce using rule 55 (matrix -> EYE ( expression ) .)
    DIV             reduce using rule 55 (matrix -> EYE ( expression ) .)
    DOTADD          reduce using rule 55 (matrix -> EYE ( expression ) .)
    DOTSUB          reduce using rule 55 (matrix -> EYE ( expression ) .)
    DOTMUL          reduce using rule 55 (matrix -> EYE ( expression ) .)
    DOTDIV          reduce using rule 55 (matrix -> EYE ( expression ) .)
    TRANSPOSE       reduce using rule 55 (matrix -> EYE ( expression ) .)
    ,               reduce using rule 55 (matrix -> EYE ( expression ) .)
    ;               reduce using rule 55 (matrix -> EYE ( expression ) .)
    EQ              reduce using rule 55 (matrix -> EYE ( expression ) .)
    GT              reduce using rule 55 (matrix -> EYE ( expression ) .)
    LT              reduce using rule 55 (matrix -> EYE ( expression ) .)
    GE              reduce using rule 55 (matrix -> EYE ( expression ) .)
    LE              reduce using rule 55 (matrix -> EYE ( expression ) .)
    NE              reduce using rule 55 (matrix -> EYE ( expression ) .)
    ]               reduce using rule 55 (matrix -> EYE ( expression ) .)
    )               reduce using rule 55 (matrix -> EYE ( expression ) .)
    :               reduce using rule 55 (matrix -> EYE ( expression ) .)
    IF              reduce using rule 55 (matrix -> EYE ( expression ) .)
    FOR             reduce using rule 55 (matrix -> EYE ( expression ) .)
    WHILE           reduce using rule 55 (matrix -> EYE ( expression ) .)
    {               reduce using rule 55 (matrix -> EYE ( expression ) .)
    PRINT           reduce using rule 55 (matrix -> EYE ( expression ) .)
    RETURN          reduce using rule 55 (matrix -> EYE ( expression ) .)
    CONTINUE        reduce using rule 55 (matrix -> EYE ( expression ) .)
    BREAK           reduce using rule 55 (matrix -> EYE ( expression ) .)
    ID              reduce using rule 55 (matrix -> EYE ( expression ) .)


state 116

    (56) matrix -> EYE ( expression , . expression )
    (29) expression -> . expression ADD expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MUL expression
    (32) expression -> . expression DIV expression
    (33) expression -> . expression DOTADD expression
    (34) expression -> . expression DOTSUB expression
    (35) expression -> . expression DOTMUL expression
    (36) expression -> . expression DOTDIV expression
    (37) expression -> . SUB expression
    (38) expression -> . expression TRANSPOSE
    (39) expression -> . INTNUM
    (40) expression -> . FLOATNUM
    (41) expression -> . assignable
    (47) expression -> . STRING
    (48) expression -> . ( expression )
    (49) expression -> . vector
    (50) expression -> . matrix
    (42) assignable -> . variable
    (43) assignable -> . reference
    (57) vector -> . [ expression ]
    (58) vector -> . [ multiple_expressions ]
    (51) matrix -> . ONES ( expression )
    (52) matrix -> . ONES ( expression , expression )
    (53) matrix -> . ZEROS ( expression )
    (54) matrix -> . ZEROS ( expression , expression )
    (55) matrix -> . EYE ( expression )
    (56) matrix -> . EYE ( expression , expression )
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    SUB             shift and go to state 27
    INTNUM          shift and go to state 28
    FLOATNUM        shift and go to state 29
    STRING          shift and go to state 31
    (               shift and go to state 32
    [               shift and go to state 35
    ONES            shift and go to state 36
    ZEROS           shift and go to state 37
    EYE             shift and go to state 38
    ID              shift and go to state 17

    expression                     shift and go to state 121
    assignable                     shift and go to state 30
    vector                         shift and go to state 33
    matrix                         shift and go to state 34
    variable                       shift and go to state 8
    reference                      shift and go to state 16

state 117

    (7) instruction -> IF ( condition ) instruction ELSE . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR variable ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . PRINT multiple_expressions
    (14) statement -> . RETURN expression
    (15) statement -> . RETURN
    (16) statement -> . CONTINUE
    (17) statement -> . BREAK
    (18) statement -> . assignable ASSIGN expression
    (19) statement -> . assignable ADDASSIGN expression
    (20) statement -> . assignable SUBASSIGN expression
    (21) statement -> . assignable MULASSIGN expression
    (22) statement -> . assignable DIVASSIGN expression
    (42) assignable -> . variable
    (43) assignable -> . reference
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 17

    instruction                    shift and go to state 122
    statement                      shift and go to state 5
    variable                       shift and go to state 8
    assignable                     shift and go to state 15
    reference                      shift and go to state 16

state 118

    (9) instruction -> FOR variable ASSIGN expression : expression . instruction
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR variable ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . PRINT multiple_expressions
    (14) statement -> . RETURN expression
    (15) statement -> . RETURN
    (16) statement -> . CONTINUE
    (17) statement -> . BREAK
    (18) statement -> . assignable ASSIGN expression
    (19) statement -> . assignable ADDASSIGN expression
    (20) statement -> . assignable SUBASSIGN expression
    (21) statement -> . assignable MULASSIGN expression
    (22) statement -> . assignable DIVASSIGN expression
    (42) assignable -> . variable
    (43) assignable -> . reference
    (46) variable -> . ID
    (44) reference -> . variable [ expression ]
    (45) reference -> . variable [ multiple_expressions ]

    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60
    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 17

    variable                       shift and go to state 8
    instruction                    shift and go to state 123
    statement                      shift and go to state 5
    assignable                     shift and go to state 15
    reference                      shift and go to state 16

state 119

    (52) matrix -> ONES ( expression , expression . )
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               shift and go to state 124
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 120

    (54) matrix -> ZEROS ( expression , expression . )
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               shift and go to state 125
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 121

    (56) matrix -> EYE ( expression , expression . )
    (29) expression -> expression . ADD expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MUL expression
    (32) expression -> expression . DIV expression
    (33) expression -> expression . DOTADD expression
    (34) expression -> expression . DOTSUB expression
    (35) expression -> expression . DOTMUL expression
    (36) expression -> expression . DOTDIV expression
    (38) expression -> expression . TRANSPOSE

    )               shift and go to state 126
    ADD             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DOTADD          shift and go to state 56
    DOTSUB          shift and go to state 57
    DOTMUL          shift and go to state 58
    DOTDIV          shift and go to state 59
    TRANSPOSE       shift and go to state 60


state 122

    (7) instruction -> IF ( condition ) instruction ELSE instruction .

    IF              reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    FOR             reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    WHILE           reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    {               reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    PRINT           reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    RETURN          reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    BREAK           reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    ID              reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    $end            reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    }               reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    ELSE            reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)


state 123

    (9) instruction -> FOR variable ASSIGN expression : expression instruction .

    IF              reduce using rule 9 (instruction -> FOR variable ASSIGN expression : expression instruction .)
    FOR             reduce using rule 9 (instruction -> FOR variable ASSIGN expression : expression instruction .)
    WHILE           reduce using rule 9 (instruction -> FOR variable ASSIGN expression : expression instruction .)
    {               reduce using rule 9 (instruction -> FOR variable ASSIGN expression : expression instruction .)
    PRINT           reduce using rule 9 (instruction -> FOR variable ASSIGN expression : expression instruction .)
    RETURN          reduce using rule 9 (instruction -> FOR variable ASSIGN expression : expression instruction .)
    CONTINUE        reduce using rule 9 (instruction -> FOR variable ASSIGN expression : expression instruction .)
    BREAK           reduce using rule 9 (instruction -> FOR variable ASSIGN expression : expression instruction .)
    ID              reduce using rule 9 (instruction -> FOR variable ASSIGN expression : expression instruction .)
    $end            reduce using rule 9 (instruction -> FOR variable ASSIGN expression : expression instruction .)
    }               reduce using rule 9 (instruction -> FOR variable ASSIGN expression : expression instruction .)
    ELSE            reduce using rule 9 (instruction -> FOR variable ASSIGN expression : expression instruction .)


state 124

    (52) matrix -> ONES ( expression , expression ) .

    ADD             reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    SUB             reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    MUL             reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    DIV             reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    DOTADD          reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    DOTSUB          reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    DOTMUL          reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    DOTDIV          reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    TRANSPOSE       reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    ,               reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    ;               reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    EQ              reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    GT              reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    LT              reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    GE              reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    LE              reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    NE              reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    ]               reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    )               reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    :               reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    IF              reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    FOR             reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    WHILE           reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    {               reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    PRINT           reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    RETURN          reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    CONTINUE        reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    BREAK           reduce using rule 52 (matrix -> ONES ( expression , expression ) .)
    ID              reduce using rule 52 (matrix -> ONES ( expression , expression ) .)


state 125

    (54) matrix -> ZEROS ( expression , expression ) .

    ADD             reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    SUB             reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    MUL             reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    DIV             reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    DOTADD          reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    DOTSUB          reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    DOTMUL          reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    DOTDIV          reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    TRANSPOSE       reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    ,               reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    ;               reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    EQ              reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    GT              reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    LT              reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    GE              reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    LE              reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    NE              reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    ]               reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    )               reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    :               reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    IF              reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    FOR             reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    WHILE           reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    {               reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    PRINT           reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    RETURN          reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    CONTINUE        reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    BREAK           reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)
    ID              reduce using rule 54 (matrix -> ZEROS ( expression , expression ) .)


state 126

    (56) matrix -> EYE ( expression , expression ) .

    ADD             reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    SUB             reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    MUL             reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    DIV             reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    DOTADD          reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    DOTSUB          reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    DOTMUL          reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    DOTDIV          reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    TRANSPOSE       reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    ,               reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    ;               reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    EQ              reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    GT              reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    LT              reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    GE              reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    LE              reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    NE              reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    ]               reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    )               reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    :               reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    IF              reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    FOR             reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    WHILE           reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    {               reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    PRINT           reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    RETURN          reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    CONTINUE        reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    BREAK           reduce using rule 56 (matrix -> EYE ( expression , expression ) .)
    ID              reduce using rule 56 (matrix -> EYE ( expression , expression ) .)

