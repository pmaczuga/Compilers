
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEnonassocASSIGNADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNnonassocEQGTLTGELENEleftADDSUBDOTADDDOTSUBleftMULDIVDOTMULDOTDIVrightNEGATIONleftTRANSPOSEADD ADDASSIGN ASSIGN BREAK CONTINUE DIV DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE GT ID IF INTNUM LE LT MUL MULASSIGN NE ONES PRINT RETURN STRING SUB SUBASSIGN TRANSPOSE WHILE ZEROSprogram : instructions_optinstructions_opt : instructionsinstructions_opt : instructions : instructions instructioninstructions : instructioninstruction : statement ';' instruction : IF '(' condition ')' instruction ELSE instruction\n                   | IF '(' condition ')' instruction %prec IFXinstruction : FOR variable ASSIGN expression ':' expression instructioninstruction : WHILE '(' condition ')' instructioninstruction : '{' instructions '}' statement : PRINT expressionstatement : PRINT multiple_expressionsstatement : RETURN expression\n                 | RETURNstatement : CONTINUEstatement : BREAKstatement : assignable ASSIGN expression\n                 | assignable ADDASSIGN expression\n                 | assignable SUBASSIGN expression\n                 | assignable MULASSIGN expression\n                 | assignable DIVASSIGN expressioncondition : expression EQ expression\n                 | expression GT expression\n                 | expression LT expression\n                 | expression GE expression\n                 | expression LE expression\n                 | expression NE expressionexpression : expression ADD expression\n                  | expression SUB expression\n                  | expression MUL expression\n                  | expression DIV expressionexpression : expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expressionexpression : SUB expression %prec NEGATIONexpression : expression TRANSPOSE expression : INTNUMexpression : FLOATNUMexpression : assignableassignable : variable\n                  | referencereference : variable '[' expression ']' reference : variable '[' multiple_expressions ']' variable : IDexpression : STRINGexpression : '(' expression ')' expression : vectorexpression : matrixmatrix : ONES '(' expression ')'\n              | ONES '(' expression ',' expression ')' matrix : ZEROS '(' expression ')'\n              | ZEROS '(' expression ',' expression ')' matrix : EYE '(' expression ')'\n              | EYE '(' expression ',' expression ')' vector : '[' expression ']' vector : '[' multiple_expressions ']' multiple_expressions : expression ',' expressionmultiple_expressions : multiple_expressions ',' expression"
    
_lr_action_items = {':':([3,7,8,28,29,33,34,37,38,58,67,82,83,84,85,86,87,88,89,90,91,92,94,95,98,110,112,114,123,124,125,],[-42,-43,-46,-47,-40,-49,-41,-39,-50,-38,-37,-44,-45,109,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,-53,-55,-51,-54,-56,-52,]),']':([3,7,8,28,29,33,34,37,38,47,48,58,65,66,67,82,83,85,86,87,88,89,90,91,92,94,95,98,99,100,110,112,114,123,124,125,],[-42,-43,-46,-47,-40,-49,-41,-39,-50,82,83,-38,94,95,-37,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,-59,-60,-53,-55,-51,-54,-56,-52,]),'GT':([3,7,8,28,29,33,34,37,38,46,58,67,82,83,85,86,87,88,89,90,91,92,94,95,98,110,112,114,123,124,125,],[-42,-43,-46,-47,-40,-49,-41,-39,-50,79,-38,-37,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,-53,-55,-51,-54,-56,-52,]),'$end':([0,1,4,10,16,20,43,74,102,116,122,126,],[-3,-1,-5,0,-2,-6,-4,-11,-10,-8,-9,-7,]),'DIVASSIGN':([3,7,8,11,82,83,],[-42,-43,-46,22,-44,-45,]),'MULASSIGN':([3,7,8,11,82,83,],[-42,-43,-46,23,-44,-45,]),'SUB':([3,7,8,12,13,18,19,22,23,24,25,26,27,28,29,31,32,33,34,37,38,39,40,42,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,123,124,125,],[-42,-43,-46,32,32,32,32,32,32,32,32,32,59,-47,-40,32,32,-49,-41,-39,-50,32,59,32,59,59,32,59,59,59,59,59,32,32,32,-38,32,32,32,32,32,32,59,-37,32,32,59,32,32,32,32,32,32,32,32,-44,-45,59,-31,-34,-33,-30,-35,-32,-36,-29,59,-57,-58,59,59,-48,59,59,59,59,59,59,59,59,32,-53,32,-55,32,-51,32,59,59,59,59,-54,-56,-52,]),'GE':([3,7,8,28,29,33,34,37,38,46,58,67,82,83,85,86,87,88,89,90,91,92,94,95,98,110,112,114,123,124,125,],[-42,-43,-46,-47,-40,-49,-41,-39,-50,80,-38,-37,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,-53,-55,-51,-54,-56,-52,]),'ID':([0,3,4,6,7,8,12,13,16,17,18,19,20,22,23,24,25,26,28,29,31,32,33,34,37,38,39,42,43,44,49,55,56,57,58,59,60,61,62,63,64,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,94,95,98,101,102,109,110,111,112,113,114,115,116,117,121,122,123,124,125,126,],[8,-42,-5,8,-43,-46,8,8,8,8,8,8,-6,8,8,8,8,8,-47,-40,8,8,-49,-41,-39,-50,8,8,-4,8,8,8,8,8,-38,8,8,8,8,8,8,-37,8,8,8,8,-11,8,8,8,8,8,8,8,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,8,-10,8,-53,8,-55,8,-51,8,-8,8,8,-9,-54,-56,-52,-7,]),'NE':([3,7,8,28,29,33,34,37,38,46,58,67,82,83,85,86,87,88,89,90,91,92,94,95,98,110,112,114,123,124,125,],[-42,-43,-46,-47,-40,-49,-41,-39,-50,81,-38,-37,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,-53,-55,-51,-54,-56,-52,]),'ELSE':([20,74,102,116,122,126,],[-6,-11,-10,121,-9,-7,]),'DOTADD':([3,7,8,27,28,29,33,34,37,38,40,46,47,50,51,52,53,54,58,65,67,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,110,112,114,117,118,119,120,123,124,125,],[-42,-43,-46,57,-47,-40,-49,-41,-39,-50,57,57,57,57,57,57,57,57,-38,57,-37,57,-44,-45,57,-31,-34,-33,-30,-35,-32,-36,-29,57,-57,-58,57,57,-48,57,57,57,57,57,57,57,57,-53,-55,-51,57,57,57,57,-54,-56,-52,]),'EQ':([3,7,8,28,29,33,34,37,38,46,58,67,82,83,85,86,87,88,89,90,91,92,94,95,98,110,112,114,123,124,125,],[-42,-43,-46,-47,-40,-49,-41,-39,-50,76,-38,-37,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,-53,-55,-51,-54,-56,-52,]),'ZEROS':([12,13,18,19,22,23,24,25,26,31,32,39,42,49,55,56,57,59,60,61,62,63,64,68,69,71,72,76,77,78,79,80,81,109,111,113,115,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'RETURN':([0,3,4,7,8,16,17,20,28,29,33,34,37,38,43,44,58,67,74,75,82,83,85,86,87,88,89,90,91,92,94,95,98,101,102,110,112,114,116,117,121,122,123,124,125,126,],[12,-42,-5,-43,-46,12,12,-6,-47,-40,-49,-41,-39,-50,-4,12,-38,-37,-11,12,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,12,-10,-53,-55,-51,-8,12,12,-9,-54,-56,-52,-7,]),'FLOATNUM':([12,13,18,19,22,23,24,25,26,31,32,39,42,49,55,56,57,59,60,61,62,63,64,68,69,71,72,76,77,78,79,80,81,109,111,113,115,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'PRINT':([0,3,4,7,8,16,17,20,28,29,33,34,37,38,43,44,58,67,74,75,82,83,85,86,87,88,89,90,91,92,94,95,98,101,102,110,112,114,116,117,121,122,123,124,125,126,],[13,-42,-5,-43,-46,13,13,-6,-47,-40,-49,-41,-39,-50,-4,13,-38,-37,-11,13,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,13,-10,-53,-55,-51,-8,13,13,-9,-54,-56,-52,-7,]),'BREAK':([0,3,4,7,8,16,17,20,28,29,33,34,37,38,43,44,58,67,74,75,82,83,85,86,87,88,89,90,91,92,94,95,98,101,102,110,112,114,116,117,121,122,123,124,125,126,],[14,-42,-5,-43,-46,14,14,-6,-47,-40,-49,-41,-39,-50,-4,14,-38,-37,-11,14,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,14,-10,-53,-55,-51,-8,14,14,-9,-54,-56,-52,-7,]),'EYE':([12,13,18,19,22,23,24,25,26,31,32,39,42,49,55,56,57,59,60,61,62,63,64,68,69,71,72,76,77,78,79,80,81,109,111,113,115,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'IF':([0,3,4,7,8,16,17,20,28,29,33,34,37,38,43,44,58,67,74,75,82,83,85,86,87,88,89,90,91,92,94,95,98,101,102,110,112,114,116,117,121,122,123,124,125,126,],[15,-42,-5,-43,-46,15,15,-6,-47,-40,-49,-41,-39,-50,-4,15,-38,-37,-11,15,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,15,-10,-53,-55,-51,-8,15,15,-9,-54,-56,-52,-7,]),'INTNUM':([12,13,18,19,22,23,24,25,26,31,32,39,42,49,55,56,57,59,60,61,62,63,64,68,69,71,72,76,77,78,79,80,81,109,111,113,115,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TRANSPOSE':([3,7,8,27,28,29,33,34,37,38,40,46,47,50,51,52,53,54,58,65,67,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,110,112,114,117,118,119,120,123,124,125,],[-42,-43,-46,58,-47,-40,-49,-41,-39,-50,58,58,58,58,58,58,58,58,-38,58,58,58,-44,-45,58,58,58,58,58,58,58,58,58,58,-57,-58,58,58,-48,58,58,58,58,58,58,58,58,-53,-55,-51,58,58,58,58,-54,-56,-52,]),'{':([0,3,4,7,8,16,17,20,28,29,33,34,37,38,43,44,58,67,74,75,82,83,85,86,87,88,89,90,91,92,94,95,98,101,102,110,112,114,116,117,121,122,123,124,125,126,],[17,-42,-5,-43,-46,17,17,-6,-47,-40,-49,-41,-39,-50,-4,17,-38,-37,-11,17,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,17,-10,-53,-55,-51,-8,17,17,-9,-54,-56,-52,-7,]),',':([3,7,8,28,29,33,34,37,38,40,41,47,48,58,65,66,67,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,110,112,114,123,124,125,],[-42,-43,-46,-47,-40,-49,-41,-39,-50,71,72,71,72,-38,71,72,-37,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,111,-57,-58,113,115,-48,-59,-60,-53,-55,-51,-54,-56,-52,]),'[':([3,8,12,13,18,19,22,23,24,25,26,31,32,39,42,49,55,56,57,59,60,61,62,63,64,68,69,71,72,76,77,78,79,80,81,109,111,113,115,],[19,-46,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'DOTSUB':([3,7,8,27,28,29,33,34,37,38,40,46,47,50,51,52,53,54,58,65,67,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,110,112,114,117,118,119,120,123,124,125,],[-42,-43,-46,56,-47,-40,-49,-41,-39,-50,56,56,56,56,56,56,56,56,-38,56,-37,56,-44,-45,56,-31,-34,-33,-30,-35,-32,-36,-29,56,-57,-58,56,56,-48,56,56,56,56,56,56,56,56,-53,-55,-51,56,56,56,56,-54,-56,-52,]),';':([3,5,7,8,9,12,14,27,28,29,33,34,37,38,40,41,50,51,52,53,54,58,67,82,83,85,86,87,88,89,90,91,92,94,95,98,99,100,110,112,114,123,124,125,],[-42,20,-43,-46,-16,-15,-17,-14,-47,-40,-49,-41,-39,-50,-12,-13,-22,-21,-20,-18,-19,-38,-37,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,-59,-60,-53,-55,-51,-54,-56,-52,]),'WHILE':([0,3,4,7,8,16,17,20,28,29,33,34,37,38,43,44,58,67,74,75,82,83,85,86,87,88,89,90,91,92,94,95,98,101,102,110,112,114,116,117,121,122,123,124,125,126,],[2,-42,-5,-43,-46,2,2,-6,-47,-40,-49,-41,-39,-50,-4,2,-38,-37,-11,2,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,2,-10,-53,-55,-51,-8,2,2,-9,-54,-56,-52,-7,]),'DOTMUL':([3,7,8,27,28,29,33,34,37,38,40,46,47,50,51,52,53,54,58,65,67,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,110,112,114,117,118,119,120,123,124,125,],[-42,-43,-46,60,-47,-40,-49,-41,-39,-50,60,60,60,60,60,60,60,60,-38,60,-37,60,-44,-45,60,-31,60,60,60,-35,-32,-36,60,60,-57,-58,60,60,-48,60,60,60,60,60,60,60,60,-53,-55,-51,60,60,60,60,-54,-56,-52,]),'ONES':([12,13,18,19,22,23,24,25,26,31,32,39,42,49,55,56,57,59,60,61,62,63,64,68,69,71,72,76,77,78,79,80,81,109,111,113,115,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'LT':([3,7,8,28,29,33,34,37,38,46,58,67,82,83,85,86,87,88,89,90,91,92,94,95,98,110,112,114,123,124,125,],[-42,-43,-46,-47,-40,-49,-41,-39,-50,78,-38,-37,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,-53,-55,-51,-54,-56,-52,]),'STRING':([12,13,18,19,22,23,24,25,26,31,32,39,42,49,55,56,57,59,60,61,62,63,64,68,69,71,72,76,77,78,79,80,81,109,111,113,115,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'ADDASSIGN':([3,7,8,11,82,83,],[-42,-43,-46,26,-44,-45,]),'ASSIGN':([3,7,8,11,21,82,83,],[-42,-43,-46,25,49,-44,-45,]),'FOR':([0,3,4,7,8,16,17,20,28,29,33,34,37,38,43,44,58,67,74,75,82,83,85,86,87,88,89,90,91,92,94,95,98,101,102,110,112,114,116,117,121,122,123,124,125,126,],[6,-42,-5,-43,-46,6,6,-6,-47,-40,-49,-41,-39,-50,-4,6,-38,-37,-11,6,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,6,-10,-53,-55,-51,-8,6,6,-9,-54,-56,-52,-7,]),'DIV':([3,7,8,27,28,29,33,34,37,38,40,46,47,50,51,52,53,54,58,65,67,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,110,112,114,117,118,119,120,123,124,125,],[-42,-43,-46,61,-47,-40,-49,-41,-39,-50,61,61,61,61,61,61,61,61,-38,61,-37,61,-44,-45,61,-31,61,61,61,-35,-32,-36,61,61,-57,-58,61,61,-48,61,61,61,61,61,61,61,61,-53,-55,-51,61,61,61,61,-54,-56,-52,]),'CONTINUE':([0,3,4,7,8,16,17,20,28,29,33,34,37,38,43,44,58,67,74,75,82,83,85,86,87,88,89,90,91,92,94,95,98,101,102,110,112,114,116,117,121,122,123,124,125,126,],[9,-42,-5,-43,-46,9,9,-6,-47,-40,-49,-41,-39,-50,-4,9,-38,-37,-11,9,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,9,-10,-53,-55,-51,-8,9,9,-9,-54,-56,-52,-7,]),'MUL':([3,7,8,27,28,29,33,34,37,38,40,46,47,50,51,52,53,54,58,65,67,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,110,112,114,117,118,119,120,123,124,125,],[-42,-43,-46,55,-47,-40,-49,-41,-39,-50,55,55,55,55,55,55,55,55,-38,55,-37,55,-44,-45,55,-31,55,55,55,-35,-32,-36,55,55,-57,-58,55,55,-48,55,55,55,55,55,55,55,55,-53,-55,-51,55,55,55,55,-54,-56,-52,]),'LE':([3,7,8,28,29,33,34,37,38,46,58,67,82,83,85,86,87,88,89,90,91,92,94,95,98,110,112,114,123,124,125,],[-42,-43,-46,-47,-40,-49,-41,-39,-50,77,-38,-37,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,-57,-58,-48,-53,-55,-51,-54,-56,-52,]),'}':([4,20,43,44,74,102,116,122,126,],[-5,-6,-4,74,-11,-10,-8,-9,-7,]),'DOTDIV':([3,7,8,27,28,29,33,34,37,38,40,46,47,50,51,52,53,54,58,65,67,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,110,112,114,117,118,119,120,123,124,125,],[-42,-43,-46,62,-47,-40,-49,-41,-39,-50,62,62,62,62,62,62,62,62,-38,62,-37,62,-44,-45,62,-31,62,62,62,-35,-32,-36,62,62,-57,-58,62,62,-48,62,62,62,62,62,62,62,62,-53,-55,-51,62,62,62,62,-54,-56,-52,]),'ADD':([3,7,8,27,28,29,33,34,37,38,40,46,47,50,51,52,53,54,58,65,67,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,110,112,114,117,118,119,120,123,124,125,],[-42,-43,-46,63,-47,-40,-49,-41,-39,-50,63,63,63,63,63,63,63,63,-38,63,-37,63,-44,-45,63,-31,-34,-33,-30,-35,-32,-36,-29,63,-57,-58,63,63,-48,63,63,63,63,63,63,63,63,-53,-55,-51,63,63,63,63,-54,-56,-52,]),')':([3,7,8,28,29,33,34,37,38,45,58,67,70,73,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,108,110,112,114,118,119,120,123,124,125,],[-42,-43,-46,-47,-40,-49,-41,-39,-50,75,-38,-37,98,101,-44,-45,-31,-34,-33,-30,-35,-32,-36,-29,110,-57,-58,112,114,-48,-23,-27,-25,-24,-26,-28,-53,-55,-51,123,124,125,-54,-56,-52,]),'(':([2,12,13,15,18,19,22,23,24,25,26,30,31,32,35,36,39,42,49,55,56,57,59,60,61,62,63,64,68,69,71,72,76,77,78,79,80,81,109,111,113,115,],[18,39,39,42,39,39,39,39,39,39,39,64,39,39,68,69,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'SUBASSIGN':([3,7,8,11,82,83,],[-42,-43,-46,24,-44,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instructions_opt':([0,],[1,]),'condition':([18,42,],[45,73,]),'variable':([0,6,12,13,16,17,18,19,22,23,24,25,26,31,32,39,42,44,49,55,56,57,59,60,61,62,63,64,68,69,71,72,75,76,77,78,79,80,81,101,109,111,113,115,117,121,],[3,21,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'instruction':([0,16,17,44,75,101,117,121,],[4,43,4,43,102,116,122,126,]),'expression':([12,13,18,19,22,23,24,25,26,31,32,39,42,49,55,56,57,59,60,61,62,63,64,68,69,71,72,76,77,78,79,80,81,109,111,113,115,],[27,40,46,47,50,51,52,53,54,65,67,70,46,84,85,86,87,88,89,90,91,92,93,96,97,99,100,103,104,105,106,107,108,117,118,119,120,]),'reference':([0,12,13,16,17,18,19,22,23,24,25,26,31,32,39,42,44,49,55,56,57,59,60,61,62,63,64,68,69,71,72,75,76,77,78,79,80,81,101,109,111,113,115,117,121,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'statement':([0,16,17,44,75,101,117,121,],[5,5,5,5,5,5,5,5,]),'program':([0,],[10,]),'instructions':([0,17,],[16,44,]),'matrix':([12,13,18,19,22,23,24,25,26,31,32,39,42,49,55,56,57,59,60,61,62,63,64,68,69,71,72,76,77,78,79,80,81,109,111,113,115,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'assignable':([0,12,13,16,17,18,19,22,23,24,25,26,31,32,39,42,44,49,55,56,57,59,60,61,62,63,64,68,69,71,72,75,76,77,78,79,80,81,101,109,111,113,115,117,121,],[11,34,34,11,11,34,34,34,34,34,34,34,34,34,34,34,11,34,34,34,34,34,34,34,34,34,34,34,34,34,34,11,34,34,34,34,34,34,11,34,34,34,34,11,11,]),'multiple_expressions':([13,19,31,],[41,48,66,]),'vector':([12,13,18,19,22,23,24,25,26,31,32,39,42,49,55,56,57,59,60,61,62,63,64,68,69,71,72,76,77,78,79,80,81,109,111,113,115,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','zad2_parser.py',28),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_some','zad2_parser.py',32),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_none','zad2_parser.py',36),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_multiple','zad2_parser.py',40),
  ('instructions -> instruction','instructions',1,'p_instructions_single','zad2_parser.py',44),
  ('instruction -> statement ;','instruction',2,'p_instruction_statement','zad2_parser.py',48),
  ('instruction -> IF ( condition ) instruction ELSE instruction','instruction',7,'p_instruction_if','zad2_parser.py',52),
  ('instruction -> IF ( condition ) instruction','instruction',5,'p_instruction_if','zad2_parser.py',53),
  ('instruction -> FOR variable ASSIGN expression : expression instruction','instruction',7,'p_instruction_for','zad2_parser.py',60),
  ('instruction -> WHILE ( condition ) instruction','instruction',5,'p_instruction_while','zad2_parser.py',64),
  ('instruction -> { instructions }','instruction',3,'p_instruction_comlex','zad2_parser.py',68),
  ('statement -> PRINT expression','statement',2,'p_statement_print_one','zad2_parser.py',72),
  ('statement -> PRINT multiple_expressions','statement',2,'p_statement_print_more','zad2_parser.py',76),
  ('statement -> RETURN expression','statement',2,'p_statement_return','zad2_parser.py',80),
  ('statement -> RETURN','statement',1,'p_statement_return','zad2_parser.py',81),
  ('statement -> CONTINUE','statement',1,'p_statement_continue','zad2_parser.py',88),
  ('statement -> BREAK','statement',1,'p_statement_break','zad2_parser.py',92),
  ('statement -> assignable ASSIGN expression','statement',3,'p_statement_assign','zad2_parser.py',96),
  ('statement -> assignable ADDASSIGN expression','statement',3,'p_statement_assign','zad2_parser.py',97),
  ('statement -> assignable SUBASSIGN expression','statement',3,'p_statement_assign','zad2_parser.py',98),
  ('statement -> assignable MULASSIGN expression','statement',3,'p_statement_assign','zad2_parser.py',99),
  ('statement -> assignable DIVASSIGN expression','statement',3,'p_statement_assign','zad2_parser.py',100),
  ('condition -> expression EQ expression','condition',3,'p_condtion','zad2_parser.py',104),
  ('condition -> expression GT expression','condition',3,'p_condtion','zad2_parser.py',105),
  ('condition -> expression LT expression','condition',3,'p_condtion','zad2_parser.py',106),
  ('condition -> expression GE expression','condition',3,'p_condtion','zad2_parser.py',107),
  ('condition -> expression LE expression','condition',3,'p_condtion','zad2_parser.py',108),
  ('condition -> expression NE expression','condition',3,'p_condtion','zad2_parser.py',109),
  ('expression -> expression ADD expression','expression',3,'p_expression_binary_simple','zad2_parser.py',113),
  ('expression -> expression SUB expression','expression',3,'p_expression_binary_simple','zad2_parser.py',114),
  ('expression -> expression MUL expression','expression',3,'p_expression_binary_simple','zad2_parser.py',115),
  ('expression -> expression DIV expression','expression',3,'p_expression_binary_simple','zad2_parser.py',116),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_binary_dot','zad2_parser.py',120),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_binary_dot','zad2_parser.py',121),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_binary_dot','zad2_parser.py',122),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression_binary_dot','zad2_parser.py',123),
  ('expression -> SUB expression','expression',2,'p_expression_negation','zad2_parser.py',127),
  ('expression -> expression TRANSPOSE','expression',2,'p_expression_transposition','zad2_parser.py',131),
  ('expression -> INTNUM','expression',1,'p_expression_int_numver','zad2_parser.py',135),
  ('expression -> FLOATNUM','expression',1,'p_expression_float_numver','zad2_parser.py',139),
  ('expression -> assignable','expression',1,'p_expression_assignable','zad2_parser.py',143),
  ('assignable -> variable','assignable',1,'p_assiganble','zad2_parser.py',147),
  ('assignable -> reference','assignable',1,'p_assiganble','zad2_parser.py',148),
  ('reference -> variable [ expression ]','reference',4,'p_reference_one','zad2_parser.py',152),
  ('reference -> variable [ multiple_expressions ]','reference',4,'p_reference_more','zad2_parser.py',156),
  ('variable -> ID','variable',1,'p_variable','zad2_parser.py',160),
  ('expression -> STRING','expression',1,'p_expression_string','zad2_parser.py',165),
  ('expression -> ( expression )','expression',3,'p_expression_paren','zad2_parser.py',169),
  ('expression -> vector','expression',1,'p_expression_vector','zad2_parser.py',173),
  ('expression -> matrix','expression',1,'p_expression_matrix','zad2_parser.py',177),
  ('matrix -> ONES ( expression )','matrix',4,'p_matrix_ones','zad2_parser.py',181),
  ('matrix -> ONES ( expression , expression )','matrix',6,'p_matrix_ones','zad2_parser.py',182),
  ('matrix -> ZEROS ( expression )','matrix',4,'p_matrix_zeros','zad2_parser.py',189),
  ('matrix -> ZEROS ( expression , expression )','matrix',6,'p_matrix_zeros','zad2_parser.py',190),
  ('matrix -> EYE ( expression )','matrix',4,'p_matrix_eye','zad2_parser.py',197),
  ('matrix -> EYE ( expression , expression )','matrix',6,'p_matrix_eye','zad2_parser.py',198),
  ('vector -> [ expression ]','vector',3,'p_vector_one','zad2_parser.py',205),
  ('vector -> [ multiple_expressions ]','vector',3,'p_vector_more','zad2_parser.py',209),
  ('multiple_expressions -> expression , expression','multiple_expressions',3,'p_multiple_expressions_two','zad2_parser.py',213),
  ('multiple_expressions -> multiple_expressions , expression','multiple_expressions',3,'p_multiple_expressions_more','zad2_parser.py',217),
]
