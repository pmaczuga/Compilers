Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> statement ;
Rule 7     instruction -> IF ( condition ) instruction ELSE instruction
Rule 8     instruction -> IF ( condition ) instruction
Rule 9     instruction -> FOR ID ASSIGN expression : expression instruction
Rule 10    instruction -> WHILE ( condition ) instruction
Rule 11    instruction -> { instructions }
Rule 12    statement -> PRINT expression
Rule 13    statement -> RETURN expression
Rule 14    statement -> RETURN
Rule 15    statement -> CONTINUE
Rule 16    statement -> BREAK
Rule 17    statement -> variable ASSIGN expression
Rule 18    statement -> variable ADDASSIGN expression
Rule 19    statement -> variable SUBASSIGN expression
Rule 20    statement -> variable MULASSIGN expression
Rule 21    statement -> variable DIVASSIGN expression
Rule 22    condition -> expression EQ expression
Rule 23    condition -> expression GT expression
Rule 24    condition -> expression LT expression
Rule 25    condition -> expression GE expression
Rule 26    condition -> expression LE expression
Rule 27    condition -> expression NE expression
Rule 28    expression -> expression ADD expression
Rule 29    expression -> expression SUB expression
Rule 30    expression -> expression MUL expression
Rule 31    expression -> expression DIV expression
Rule 32    expression -> expression DOTADD expression
Rule 33    expression -> expression DOTSUB expression
Rule 34    expression -> expression DOTMUL expression
Rule 35    expression -> expression DOTDIV expression
Rule 36    expression -> SUB expression
Rule 37    expression -> expression TRANSPOSE
Rule 38    expression -> INTNUM
Rule 39    expression -> FLOATNUM
Rule 40    expression -> variable
Rule 41    variable -> ID
Rule 42    variable -> ID [ expression ]
Rule 43    variable -> ID [ expression , expression ]
Rule 44    expression -> STRING
Rule 45    expression -> matrix
Rule 46    expression -> vector
Rule 47    matrix -> ONES ( expression )
Rule 48    matrix -> ONES ( expression , expression )
Rule 49    matrix -> ZEROS ( expression )
Rule 50    matrix -> ZEROS ( expression , expression )
Rule 51    matrix -> EYE ( expression )
Rule 52    matrix -> EYE ( expression , expression )
Rule 53    matrix -> [ vectors ]
Rule 54    vectors -> vectors , vector
Rule 55    vectors -> vector
Rule 56    vector -> [ elements , element ]
Rule 57    vector -> [ element ]
Rule 58    elements -> elements , element
Rule 59    elements -> element
Rule 60    element -> expression

Terminals, with rules where they appear

(                    : 7 8 10 47 48 49 50 51 52
)                    : 7 8 10 47 48 49 50 51 52
,                    : 43 48 50 52 54 56 58
:                    : 9
;                    : 6
ADD                  : 28
ADDASSIGN            : 18
ASSIGN               : 9 17
BREAK                : 16
COMMENT              : 
CONTINUE             : 15
DIV                  : 31
DIVASSIGN            : 21
DOTADD               : 32
DOTDIV               : 35
DOTMUL               : 34
DOTSUB               : 33
ELSE                 : 7
EQ                   : 22
EYE                  : 51 52
FLOATNUM             : 39
FOR                  : 9
GE                   : 25
GT                   : 23
ID                   : 9 41 42 43
IF                   : 7 8
INTNUM               : 38
LE                   : 26
LT                   : 24
MUL                  : 30
MULASSIGN            : 20
NE                   : 27
ONES                 : 47 48
PRINT                : 12
RETURN               : 13 14
STRING               : 44
SUB                  : 29 36
SUBASSIGN            : 19
TRANSPOSE            : 37
WHILE                : 10
ZEROS                : 49 50
[                    : 42 43 53 56 57
]                    : 42 43 53 56 57
error                : 
{                    : 11
}                    : 11

Nonterminals, with rules where they appear

condition            : 7 8 10
element              : 56 57 58 59
elements             : 56 58
expression           : 9 9 12 13 17 18 19 20 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 37 42 43 43 47 48 48 49 50 50 51 52 52 60
instruction          : 4 5 7 7 8 9 10
instructions         : 2 4 11
instructions_opt     : 1
matrix               : 45
program              : 0
statement            : 6
variable             : 17 18 19 20 21 40
vector               : 46 54 55
vectors              : 53 54

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR ID ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . RETURN expression
    (14) statement -> . RETURN
    (15) statement -> . CONTINUE
    (16) statement -> . BREAK
    (17) statement -> . variable ASSIGN expression
    (18) statement -> . variable ADDASSIGN expression
    (19) statement -> . variable SUBASSIGN expression
    (20) statement -> . variable MULASSIGN expression
    (21) statement -> . variable DIVASSIGN expression
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]

    $end            reduce using rule 3 (instructions_opt -> .)
    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 8

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    statement                      shift and go to state 5
    variable                       shift and go to state 15

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR ID ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . RETURN expression
    (14) statement -> . RETURN
    (15) statement -> . CONTINUE
    (16) statement -> . BREAK
    (17) statement -> . variable ASSIGN expression
    (18) statement -> . variable ADDASSIGN expression
    (19) statement -> . variable SUBASSIGN expression
    (20) statement -> . variable MULASSIGN expression
    (21) statement -> . variable DIVASSIGN expression
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 8

    instruction                    shift and go to state 16
    statement                      shift and go to state 5
    variable                       shift and go to state 15

state 4

    (5) instructions -> instruction .

    IF              reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    {               reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)


state 5

    (6) instruction -> statement . ;

    ;               shift and go to state 17


state 6

    (7) instruction -> IF . ( condition ) instruction ELSE instruction
    (8) instruction -> IF . ( condition ) instruction

    (               shift and go to state 18


state 7

    (9) instruction -> FOR . ID ASSIGN expression : expression instruction

    ID              shift and go to state 19


state 8

    (41) variable -> ID .
    (42) variable -> ID . [ expression ]
    (43) variable -> ID . [ expression , expression ]

    ASSIGN          reduce using rule 41 (variable -> ID .)
    ADDASSIGN       reduce using rule 41 (variable -> ID .)
    SUBASSIGN       reduce using rule 41 (variable -> ID .)
    MULASSIGN       reduce using rule 41 (variable -> ID .)
    DIVASSIGN       reduce using rule 41 (variable -> ID .)
    ADD             reduce using rule 41 (variable -> ID .)
    SUB             reduce using rule 41 (variable -> ID .)
    MUL             reduce using rule 41 (variable -> ID .)
    DIV             reduce using rule 41 (variable -> ID .)
    DOTADD          reduce using rule 41 (variable -> ID .)
    DOTSUB          reduce using rule 41 (variable -> ID .)
    DOTMUL          reduce using rule 41 (variable -> ID .)
    DOTDIV          reduce using rule 41 (variable -> ID .)
    TRANSPOSE       reduce using rule 41 (variable -> ID .)
    ;               reduce using rule 41 (variable -> ID .)
    EQ              reduce using rule 41 (variable -> ID .)
    GT              reduce using rule 41 (variable -> ID .)
    LT              reduce using rule 41 (variable -> ID .)
    GE              reduce using rule 41 (variable -> ID .)
    LE              reduce using rule 41 (variable -> ID .)
    NE              reduce using rule 41 (variable -> ID .)
    ]               reduce using rule 41 (variable -> ID .)
    ,               reduce using rule 41 (variable -> ID .)
    :               reduce using rule 41 (variable -> ID .)
    )               reduce using rule 41 (variable -> ID .)
    IF              reduce using rule 41 (variable -> ID .)
    FOR             reduce using rule 41 (variable -> ID .)
    WHILE           reduce using rule 41 (variable -> ID .)
    {               reduce using rule 41 (variable -> ID .)
    PRINT           reduce using rule 41 (variable -> ID .)
    RETURN          reduce using rule 41 (variable -> ID .)
    CONTINUE        reduce using rule 41 (variable -> ID .)
    BREAK           reduce using rule 41 (variable -> ID .)
    ID              reduce using rule 41 (variable -> ID .)
    [               shift and go to state 20


state 9

    (10) instruction -> WHILE . ( condition ) instruction

    (               shift and go to state 21


state 10

    (11) instruction -> { . instructions }
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR ID ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . RETURN expression
    (14) statement -> . RETURN
    (15) statement -> . CONTINUE
    (16) statement -> . BREAK
    (17) statement -> . variable ASSIGN expression
    (18) statement -> . variable ADDASSIGN expression
    (19) statement -> . variable SUBASSIGN expression
    (20) statement -> . variable MULASSIGN expression
    (21) statement -> . variable DIVASSIGN expression
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]

    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 8

    instructions                   shift and go to state 22
    instruction                    shift and go to state 4
    statement                      shift and go to state 5
    variable                       shift and go to state 15

state 11

    (12) statement -> PRINT . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 23
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 12

    (13) statement -> RETURN . expression
    (14) statement -> RETURN .
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    ;               reduce using rule 14 (statement -> RETURN .)
    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 35
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 13

    (15) statement -> CONTINUE .

    ;               reduce using rule 15 (statement -> CONTINUE .)


state 14

    (16) statement -> BREAK .

    ;               reduce using rule 16 (statement -> BREAK .)


state 15

    (17) statement -> variable . ASSIGN expression
    (18) statement -> variable . ADDASSIGN expression
    (19) statement -> variable . SUBASSIGN expression
    (20) statement -> variable . MULASSIGN expression
    (21) statement -> variable . DIVASSIGN expression

    ASSIGN          shift and go to state 36
    ADDASSIGN       shift and go to state 37
    SUBASSIGN       shift and go to state 38
    MULASSIGN       shift and go to state 39
    DIVASSIGN       shift and go to state 40


state 16

    (4) instructions -> instructions instruction .

    IF              reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    {               reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)


state 17

    (6) instruction -> statement ; .

    IF              reduce using rule 6 (instruction -> statement ; .)
    FOR             reduce using rule 6 (instruction -> statement ; .)
    WHILE           reduce using rule 6 (instruction -> statement ; .)
    {               reduce using rule 6 (instruction -> statement ; .)
    PRINT           reduce using rule 6 (instruction -> statement ; .)
    RETURN          reduce using rule 6 (instruction -> statement ; .)
    CONTINUE        reduce using rule 6 (instruction -> statement ; .)
    BREAK           reduce using rule 6 (instruction -> statement ; .)
    ID              reduce using rule 6 (instruction -> statement ; .)
    $end            reduce using rule 6 (instruction -> statement ; .)
    }               reduce using rule 6 (instruction -> statement ; .)
    ELSE            reduce using rule 6 (instruction -> statement ; .)


state 18

    (7) instruction -> IF ( . condition ) instruction ELSE instruction
    (8) instruction -> IF ( . condition ) instruction
    (22) condition -> . expression EQ expression
    (23) condition -> . expression GT expression
    (24) condition -> . expression LT expression
    (25) condition -> . expression GE expression
    (26) condition -> . expression LE expression
    (27) condition -> . expression NE expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    condition                      shift and go to state 41
    expression                     shift and go to state 42
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 19

    (9) instruction -> FOR ID . ASSIGN expression : expression instruction

    ASSIGN          shift and go to state 43


state 20

    (42) variable -> ID [ . expression ]
    (43) variable -> ID [ . expression , expression ]
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 44
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 21

    (10) instruction -> WHILE ( . condition ) instruction
    (22) condition -> . expression EQ expression
    (23) condition -> . expression GT expression
    (24) condition -> . expression LT expression
    (25) condition -> . expression GE expression
    (26) condition -> . expression LE expression
    (27) condition -> . expression NE expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    condition                      shift and go to state 45
    expression                     shift and go to state 42
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 22

    (11) instruction -> { instructions . }
    (4) instructions -> instructions . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR ID ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . RETURN expression
    (14) statement -> . RETURN
    (15) statement -> . CONTINUE
    (16) statement -> . BREAK
    (17) statement -> . variable ASSIGN expression
    (18) statement -> . variable ADDASSIGN expression
    (19) statement -> . variable SUBASSIGN expression
    (20) statement -> . variable MULASSIGN expression
    (21) statement -> . variable DIVASSIGN expression
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]

    }               shift and go to state 46
    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 8

    instruction                    shift and go to state 16
    statement                      shift and go to state 5
    variable                       shift and go to state 15

state 23

    (12) statement -> PRINT expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ;               reduce using rule 12 (statement -> PRINT expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 24

    (36) expression -> SUB . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 56
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 25

    (38) expression -> INTNUM .

    ADD             reduce using rule 38 (expression -> INTNUM .)
    SUB             reduce using rule 38 (expression -> INTNUM .)
    MUL             reduce using rule 38 (expression -> INTNUM .)
    DIV             reduce using rule 38 (expression -> INTNUM .)
    DOTADD          reduce using rule 38 (expression -> INTNUM .)
    DOTSUB          reduce using rule 38 (expression -> INTNUM .)
    DOTMUL          reduce using rule 38 (expression -> INTNUM .)
    DOTDIV          reduce using rule 38 (expression -> INTNUM .)
    TRANSPOSE       reduce using rule 38 (expression -> INTNUM .)
    ;               reduce using rule 38 (expression -> INTNUM .)
    EQ              reduce using rule 38 (expression -> INTNUM .)
    GT              reduce using rule 38 (expression -> INTNUM .)
    LT              reduce using rule 38 (expression -> INTNUM .)
    GE              reduce using rule 38 (expression -> INTNUM .)
    LE              reduce using rule 38 (expression -> INTNUM .)
    NE              reduce using rule 38 (expression -> INTNUM .)
    ]               reduce using rule 38 (expression -> INTNUM .)
    ,               reduce using rule 38 (expression -> INTNUM .)
    :               reduce using rule 38 (expression -> INTNUM .)
    )               reduce using rule 38 (expression -> INTNUM .)
    IF              reduce using rule 38 (expression -> INTNUM .)
    FOR             reduce using rule 38 (expression -> INTNUM .)
    WHILE           reduce using rule 38 (expression -> INTNUM .)
    {               reduce using rule 38 (expression -> INTNUM .)
    PRINT           reduce using rule 38 (expression -> INTNUM .)
    RETURN          reduce using rule 38 (expression -> INTNUM .)
    CONTINUE        reduce using rule 38 (expression -> INTNUM .)
    BREAK           reduce using rule 38 (expression -> INTNUM .)
    ID              reduce using rule 38 (expression -> INTNUM .)


state 26

    (39) expression -> FLOATNUM .

    ADD             reduce using rule 39 (expression -> FLOATNUM .)
    SUB             reduce using rule 39 (expression -> FLOATNUM .)
    MUL             reduce using rule 39 (expression -> FLOATNUM .)
    DIV             reduce using rule 39 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 39 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 39 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 39 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 39 (expression -> FLOATNUM .)
    TRANSPOSE       reduce using rule 39 (expression -> FLOATNUM .)
    ;               reduce using rule 39 (expression -> FLOATNUM .)
    EQ              reduce using rule 39 (expression -> FLOATNUM .)
    GT              reduce using rule 39 (expression -> FLOATNUM .)
    LT              reduce using rule 39 (expression -> FLOATNUM .)
    GE              reduce using rule 39 (expression -> FLOATNUM .)
    LE              reduce using rule 39 (expression -> FLOATNUM .)
    NE              reduce using rule 39 (expression -> FLOATNUM .)
    ]               reduce using rule 39 (expression -> FLOATNUM .)
    ,               reduce using rule 39 (expression -> FLOATNUM .)
    :               reduce using rule 39 (expression -> FLOATNUM .)
    )               reduce using rule 39 (expression -> FLOATNUM .)
    IF              reduce using rule 39 (expression -> FLOATNUM .)
    FOR             reduce using rule 39 (expression -> FLOATNUM .)
    WHILE           reduce using rule 39 (expression -> FLOATNUM .)
    {               reduce using rule 39 (expression -> FLOATNUM .)
    PRINT           reduce using rule 39 (expression -> FLOATNUM .)
    RETURN          reduce using rule 39 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 39 (expression -> FLOATNUM .)
    BREAK           reduce using rule 39 (expression -> FLOATNUM .)
    ID              reduce using rule 39 (expression -> FLOATNUM .)


state 27

    (40) expression -> variable .

    ADD             reduce using rule 40 (expression -> variable .)
    SUB             reduce using rule 40 (expression -> variable .)
    MUL             reduce using rule 40 (expression -> variable .)
    DIV             reduce using rule 40 (expression -> variable .)
    DOTADD          reduce using rule 40 (expression -> variable .)
    DOTSUB          reduce using rule 40 (expression -> variable .)
    DOTMUL          reduce using rule 40 (expression -> variable .)
    DOTDIV          reduce using rule 40 (expression -> variable .)
    TRANSPOSE       reduce using rule 40 (expression -> variable .)
    ;               reduce using rule 40 (expression -> variable .)
    EQ              reduce using rule 40 (expression -> variable .)
    GT              reduce using rule 40 (expression -> variable .)
    LT              reduce using rule 40 (expression -> variable .)
    GE              reduce using rule 40 (expression -> variable .)
    LE              reduce using rule 40 (expression -> variable .)
    NE              reduce using rule 40 (expression -> variable .)
    ]               reduce using rule 40 (expression -> variable .)
    ,               reduce using rule 40 (expression -> variable .)
    :               reduce using rule 40 (expression -> variable .)
    )               reduce using rule 40 (expression -> variable .)
    IF              reduce using rule 40 (expression -> variable .)
    FOR             reduce using rule 40 (expression -> variable .)
    WHILE           reduce using rule 40 (expression -> variable .)
    {               reduce using rule 40 (expression -> variable .)
    PRINT           reduce using rule 40 (expression -> variable .)
    RETURN          reduce using rule 40 (expression -> variable .)
    CONTINUE        reduce using rule 40 (expression -> variable .)
    BREAK           reduce using rule 40 (expression -> variable .)
    ID              reduce using rule 40 (expression -> variable .)


state 28

    (44) expression -> STRING .

    ADD             reduce using rule 44 (expression -> STRING .)
    SUB             reduce using rule 44 (expression -> STRING .)
    MUL             reduce using rule 44 (expression -> STRING .)
    DIV             reduce using rule 44 (expression -> STRING .)
    DOTADD          reduce using rule 44 (expression -> STRING .)
    DOTSUB          reduce using rule 44 (expression -> STRING .)
    DOTMUL          reduce using rule 44 (expression -> STRING .)
    DOTDIV          reduce using rule 44 (expression -> STRING .)
    TRANSPOSE       reduce using rule 44 (expression -> STRING .)
    ;               reduce using rule 44 (expression -> STRING .)
    EQ              reduce using rule 44 (expression -> STRING .)
    GT              reduce using rule 44 (expression -> STRING .)
    LT              reduce using rule 44 (expression -> STRING .)
    GE              reduce using rule 44 (expression -> STRING .)
    LE              reduce using rule 44 (expression -> STRING .)
    NE              reduce using rule 44 (expression -> STRING .)
    ]               reduce using rule 44 (expression -> STRING .)
    ,               reduce using rule 44 (expression -> STRING .)
    :               reduce using rule 44 (expression -> STRING .)
    )               reduce using rule 44 (expression -> STRING .)
    IF              reduce using rule 44 (expression -> STRING .)
    FOR             reduce using rule 44 (expression -> STRING .)
    WHILE           reduce using rule 44 (expression -> STRING .)
    {               reduce using rule 44 (expression -> STRING .)
    PRINT           reduce using rule 44 (expression -> STRING .)
    RETURN          reduce using rule 44 (expression -> STRING .)
    CONTINUE        reduce using rule 44 (expression -> STRING .)
    BREAK           reduce using rule 44 (expression -> STRING .)
    ID              reduce using rule 44 (expression -> STRING .)


state 29

    (45) expression -> matrix .

    ADD             reduce using rule 45 (expression -> matrix .)
    SUB             reduce using rule 45 (expression -> matrix .)
    MUL             reduce using rule 45 (expression -> matrix .)
    DIV             reduce using rule 45 (expression -> matrix .)
    DOTADD          reduce using rule 45 (expression -> matrix .)
    DOTSUB          reduce using rule 45 (expression -> matrix .)
    DOTMUL          reduce using rule 45 (expression -> matrix .)
    DOTDIV          reduce using rule 45 (expression -> matrix .)
    TRANSPOSE       reduce using rule 45 (expression -> matrix .)
    ;               reduce using rule 45 (expression -> matrix .)
    EQ              reduce using rule 45 (expression -> matrix .)
    GT              reduce using rule 45 (expression -> matrix .)
    LT              reduce using rule 45 (expression -> matrix .)
    GE              reduce using rule 45 (expression -> matrix .)
    LE              reduce using rule 45 (expression -> matrix .)
    NE              reduce using rule 45 (expression -> matrix .)
    ]               reduce using rule 45 (expression -> matrix .)
    ,               reduce using rule 45 (expression -> matrix .)
    :               reduce using rule 45 (expression -> matrix .)
    )               reduce using rule 45 (expression -> matrix .)
    IF              reduce using rule 45 (expression -> matrix .)
    FOR             reduce using rule 45 (expression -> matrix .)
    WHILE           reduce using rule 45 (expression -> matrix .)
    {               reduce using rule 45 (expression -> matrix .)
    PRINT           reduce using rule 45 (expression -> matrix .)
    RETURN          reduce using rule 45 (expression -> matrix .)
    CONTINUE        reduce using rule 45 (expression -> matrix .)
    BREAK           reduce using rule 45 (expression -> matrix .)
    ID              reduce using rule 45 (expression -> matrix .)


state 30

    (46) expression -> vector .

    ADD             reduce using rule 46 (expression -> vector .)
    SUB             reduce using rule 46 (expression -> vector .)
    MUL             reduce using rule 46 (expression -> vector .)
    DIV             reduce using rule 46 (expression -> vector .)
    DOTADD          reduce using rule 46 (expression -> vector .)
    DOTSUB          reduce using rule 46 (expression -> vector .)
    DOTMUL          reduce using rule 46 (expression -> vector .)
    DOTDIV          reduce using rule 46 (expression -> vector .)
    TRANSPOSE       reduce using rule 46 (expression -> vector .)
    ;               reduce using rule 46 (expression -> vector .)
    EQ              reduce using rule 46 (expression -> vector .)
    GT              reduce using rule 46 (expression -> vector .)
    LT              reduce using rule 46 (expression -> vector .)
    GE              reduce using rule 46 (expression -> vector .)
    LE              reduce using rule 46 (expression -> vector .)
    NE              reduce using rule 46 (expression -> vector .)
    ]               reduce using rule 46 (expression -> vector .)
    ,               reduce using rule 46 (expression -> vector .)
    :               reduce using rule 46 (expression -> vector .)
    )               reduce using rule 46 (expression -> vector .)
    IF              reduce using rule 46 (expression -> vector .)
    FOR             reduce using rule 46 (expression -> vector .)
    WHILE           reduce using rule 46 (expression -> vector .)
    {               reduce using rule 46 (expression -> vector .)
    PRINT           reduce using rule 46 (expression -> vector .)
    RETURN          reduce using rule 46 (expression -> vector .)
    CONTINUE        reduce using rule 46 (expression -> vector .)
    BREAK           reduce using rule 46 (expression -> vector .)
    ID              reduce using rule 46 (expression -> vector .)


state 31

    (53) matrix -> [ . vectors ]
    (56) vector -> [ . elements , element ]
    (57) vector -> [ . element ]
    (54) vectors -> . vectors , vector
    (55) vectors -> . vector
    (58) elements -> . elements , element
    (59) elements -> . element
    (60) element -> . expression
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]

    [               shift and go to state 57
    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34

    vectors                        shift and go to state 58
    elements                       shift and go to state 59
    element                        shift and go to state 60
    vector                         shift and go to state 61
    expression                     shift and go to state 62
    variable                       shift and go to state 27
    matrix                         shift and go to state 29

state 32

    (47) matrix -> ONES . ( expression )
    (48) matrix -> ONES . ( expression , expression )

    (               shift and go to state 63


state 33

    (49) matrix -> ZEROS . ( expression )
    (50) matrix -> ZEROS . ( expression , expression )

    (               shift and go to state 64


state 34

    (51) matrix -> EYE . ( expression )
    (52) matrix -> EYE . ( expression , expression )

    (               shift and go to state 65


state 35

    (13) statement -> RETURN expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ;               reduce using rule 13 (statement -> RETURN expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 36

    (17) statement -> variable ASSIGN . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    variable                       shift and go to state 27
    expression                     shift and go to state 66
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 37

    (18) statement -> variable ADDASSIGN . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    variable                       shift and go to state 27
    expression                     shift and go to state 67
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 38

    (19) statement -> variable SUBASSIGN . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    variable                       shift and go to state 27
    expression                     shift and go to state 68
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 39

    (20) statement -> variable MULASSIGN . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    variable                       shift and go to state 27
    expression                     shift and go to state 69
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 40

    (21) statement -> variable DIVASSIGN . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    variable                       shift and go to state 27
    expression                     shift and go to state 70
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 41

    (7) instruction -> IF ( condition . ) instruction ELSE instruction
    (8) instruction -> IF ( condition . ) instruction

    )               shift and go to state 71


state 42

    (22) condition -> expression . EQ expression
    (23) condition -> expression . GT expression
    (24) condition -> expression . LT expression
    (25) condition -> expression . GE expression
    (26) condition -> expression . LE expression
    (27) condition -> expression . NE expression
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    EQ              shift and go to state 72
    GT              shift and go to state 73
    LT              shift and go to state 74
    GE              shift and go to state 75
    LE              shift and go to state 76
    NE              shift and go to state 77
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 43

    (9) instruction -> FOR ID ASSIGN . expression : expression instruction
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 78
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 44

    (42) variable -> ID [ expression . ]
    (43) variable -> ID [ expression . , expression ]
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ]               shift and go to state 79
    ,               shift and go to state 80
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 45

    (10) instruction -> WHILE ( condition . ) instruction

    )               shift and go to state 81


state 46

    (11) instruction -> { instructions } .

    IF              reduce using rule 11 (instruction -> { instructions } .)
    FOR             reduce using rule 11 (instruction -> { instructions } .)
    WHILE           reduce using rule 11 (instruction -> { instructions } .)
    {               reduce using rule 11 (instruction -> { instructions } .)
    PRINT           reduce using rule 11 (instruction -> { instructions } .)
    RETURN          reduce using rule 11 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 11 (instruction -> { instructions } .)
    BREAK           reduce using rule 11 (instruction -> { instructions } .)
    ID              reduce using rule 11 (instruction -> { instructions } .)
    $end            reduce using rule 11 (instruction -> { instructions } .)
    }               reduce using rule 11 (instruction -> { instructions } .)
    ELSE            reduce using rule 11 (instruction -> { instructions } .)


state 47

    (28) expression -> expression ADD . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 82
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 48

    (29) expression -> expression SUB . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 83
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 49

    (30) expression -> expression MUL . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 84
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 50

    (31) expression -> expression DIV . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 85
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 51

    (32) expression -> expression DOTADD . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 86
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 52

    (33) expression -> expression DOTSUB . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 87
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 53

    (34) expression -> expression DOTMUL . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 88
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 54

    (35) expression -> expression DOTDIV . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 89
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 55

    (37) expression -> expression TRANSPOSE .

    ADD             reduce using rule 37 (expression -> expression TRANSPOSE .)
    SUB             reduce using rule 37 (expression -> expression TRANSPOSE .)
    MUL             reduce using rule 37 (expression -> expression TRANSPOSE .)
    DIV             reduce using rule 37 (expression -> expression TRANSPOSE .)
    DOTADD          reduce using rule 37 (expression -> expression TRANSPOSE .)
    DOTSUB          reduce using rule 37 (expression -> expression TRANSPOSE .)
    DOTMUL          reduce using rule 37 (expression -> expression TRANSPOSE .)
    DOTDIV          reduce using rule 37 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 37 (expression -> expression TRANSPOSE .)
    ;               reduce using rule 37 (expression -> expression TRANSPOSE .)
    EQ              reduce using rule 37 (expression -> expression TRANSPOSE .)
    GT              reduce using rule 37 (expression -> expression TRANSPOSE .)
    LT              reduce using rule 37 (expression -> expression TRANSPOSE .)
    GE              reduce using rule 37 (expression -> expression TRANSPOSE .)
    LE              reduce using rule 37 (expression -> expression TRANSPOSE .)
    NE              reduce using rule 37 (expression -> expression TRANSPOSE .)
    ]               reduce using rule 37 (expression -> expression TRANSPOSE .)
    ,               reduce using rule 37 (expression -> expression TRANSPOSE .)
    :               reduce using rule 37 (expression -> expression TRANSPOSE .)
    )               reduce using rule 37 (expression -> expression TRANSPOSE .)
    IF              reduce using rule 37 (expression -> expression TRANSPOSE .)
    FOR             reduce using rule 37 (expression -> expression TRANSPOSE .)
    WHILE           reduce using rule 37 (expression -> expression TRANSPOSE .)
    {               reduce using rule 37 (expression -> expression TRANSPOSE .)
    PRINT           reduce using rule 37 (expression -> expression TRANSPOSE .)
    RETURN          reduce using rule 37 (expression -> expression TRANSPOSE .)
    CONTINUE        reduce using rule 37 (expression -> expression TRANSPOSE .)
    BREAK           reduce using rule 37 (expression -> expression TRANSPOSE .)
    ID              reduce using rule 37 (expression -> expression TRANSPOSE .)


state 56

    (36) expression -> SUB expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ADD             reduce using rule 36 (expression -> SUB expression .)
    SUB             reduce using rule 36 (expression -> SUB expression .)
    MUL             reduce using rule 36 (expression -> SUB expression .)
    DIV             reduce using rule 36 (expression -> SUB expression .)
    DOTADD          reduce using rule 36 (expression -> SUB expression .)
    DOTSUB          reduce using rule 36 (expression -> SUB expression .)
    DOTMUL          reduce using rule 36 (expression -> SUB expression .)
    DOTDIV          reduce using rule 36 (expression -> SUB expression .)
    ;               reduce using rule 36 (expression -> SUB expression .)
    EQ              reduce using rule 36 (expression -> SUB expression .)
    GT              reduce using rule 36 (expression -> SUB expression .)
    LT              reduce using rule 36 (expression -> SUB expression .)
    GE              reduce using rule 36 (expression -> SUB expression .)
    LE              reduce using rule 36 (expression -> SUB expression .)
    NE              reduce using rule 36 (expression -> SUB expression .)
    ]               reduce using rule 36 (expression -> SUB expression .)
    ,               reduce using rule 36 (expression -> SUB expression .)
    :               reduce using rule 36 (expression -> SUB expression .)
    )               reduce using rule 36 (expression -> SUB expression .)
    IF              reduce using rule 36 (expression -> SUB expression .)
    FOR             reduce using rule 36 (expression -> SUB expression .)
    WHILE           reduce using rule 36 (expression -> SUB expression .)
    {               reduce using rule 36 (expression -> SUB expression .)
    PRINT           reduce using rule 36 (expression -> SUB expression .)
    RETURN          reduce using rule 36 (expression -> SUB expression .)
    CONTINUE        reduce using rule 36 (expression -> SUB expression .)
    BREAK           reduce using rule 36 (expression -> SUB expression .)
    ID              reduce using rule 36 (expression -> SUB expression .)
    TRANSPOSE       shift and go to state 55

  ! TRANSPOSE       [ reduce using rule 36 (expression -> SUB expression .) ]
  ! ADD             [ shift and go to state 47 ]
  ! SUB             [ shift and go to state 48 ]
  ! MUL             [ shift and go to state 49 ]
  ! DIV             [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]


state 57

    (56) vector -> [ . elements , element ]
    (57) vector -> [ . element ]
    (53) matrix -> [ . vectors ]
    (58) elements -> . elements , element
    (59) elements -> . element
    (60) element -> . expression
    (54) vectors -> . vectors , vector
    (55) vectors -> . vector
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    [               shift and go to state 57
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34

    elements                       shift and go to state 59
    element                        shift and go to state 60
    vectors                        shift and go to state 58
    expression                     shift and go to state 62
    vector                         shift and go to state 61
    variable                       shift and go to state 27
    matrix                         shift and go to state 29

state 58

    (53) matrix -> [ vectors . ]
    (54) vectors -> vectors . , vector

    ]               shift and go to state 90
    ,               shift and go to state 91


state 59

    (56) vector -> [ elements . , element ]
    (58) elements -> elements . , element

    ,               shift and go to state 92


state 60

    (57) vector -> [ element . ]
    (59) elements -> element .

    ]               shift and go to state 93
    ,               reduce using rule 59 (elements -> element .)


state 61

    (55) vectors -> vector .
    (46) expression -> vector .

  ! reduce/reduce conflict for ] resolved using rule 46 (expression -> vector .)
  ! reduce/reduce conflict for , resolved using rule 46 (expression -> vector .)
    ADD             reduce using rule 46 (expression -> vector .)
    SUB             reduce using rule 46 (expression -> vector .)
    MUL             reduce using rule 46 (expression -> vector .)
    DIV             reduce using rule 46 (expression -> vector .)
    DOTADD          reduce using rule 46 (expression -> vector .)
    DOTSUB          reduce using rule 46 (expression -> vector .)
    DOTMUL          reduce using rule 46 (expression -> vector .)
    DOTDIV          reduce using rule 46 (expression -> vector .)
    TRANSPOSE       reduce using rule 46 (expression -> vector .)
    ]               reduce using rule 46 (expression -> vector .)
    ,               reduce using rule 46 (expression -> vector .)

  ! ]               [ reduce using rule 55 (vectors -> vector .) ]
  ! ,               [ reduce using rule 55 (vectors -> vector .) ]


state 62

    (60) element -> expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ]               reduce using rule 60 (element -> expression .)
    ,               reduce using rule 60 (element -> expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 63

    (47) matrix -> ONES ( . expression )
    (48) matrix -> ONES ( . expression , expression )
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 94
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 64

    (49) matrix -> ZEROS ( . expression )
    (50) matrix -> ZEROS ( . expression , expression )
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 95
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 65

    (51) matrix -> EYE ( . expression )
    (52) matrix -> EYE ( . expression , expression )
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 96
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 66

    (17) statement -> variable ASSIGN expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ;               reduce using rule 17 (statement -> variable ASSIGN expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 67

    (18) statement -> variable ADDASSIGN expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ;               reduce using rule 18 (statement -> variable ADDASSIGN expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 68

    (19) statement -> variable SUBASSIGN expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ;               reduce using rule 19 (statement -> variable SUBASSIGN expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 69

    (20) statement -> variable MULASSIGN expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ;               reduce using rule 20 (statement -> variable MULASSIGN expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 70

    (21) statement -> variable DIVASSIGN expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ;               reduce using rule 21 (statement -> variable DIVASSIGN expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 71

    (7) instruction -> IF ( condition ) . instruction ELSE instruction
    (8) instruction -> IF ( condition ) . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR ID ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . RETURN expression
    (14) statement -> . RETURN
    (15) statement -> . CONTINUE
    (16) statement -> . BREAK
    (17) statement -> . variable ASSIGN expression
    (18) statement -> . variable ADDASSIGN expression
    (19) statement -> . variable SUBASSIGN expression
    (20) statement -> . variable MULASSIGN expression
    (21) statement -> . variable DIVASSIGN expression
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]

    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 8

    instruction                    shift and go to state 97
    statement                      shift and go to state 5
    variable                       shift and go to state 15

state 72

    (22) condition -> expression EQ . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 98
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 73

    (23) condition -> expression GT . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 99
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 74

    (24) condition -> expression LT . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 100
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 75

    (25) condition -> expression GE . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 101
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 76

    (26) condition -> expression LE . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 102
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 77

    (27) condition -> expression NE . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 103
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 78

    (9) instruction -> FOR ID ASSIGN expression . : expression instruction
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    :               shift and go to state 104
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 79

    (42) variable -> ID [ expression ] .

    ASSIGN          reduce using rule 42 (variable -> ID [ expression ] .)
    ADDASSIGN       reduce using rule 42 (variable -> ID [ expression ] .)
    SUBASSIGN       reduce using rule 42 (variable -> ID [ expression ] .)
    MULASSIGN       reduce using rule 42 (variable -> ID [ expression ] .)
    DIVASSIGN       reduce using rule 42 (variable -> ID [ expression ] .)
    ADD             reduce using rule 42 (variable -> ID [ expression ] .)
    SUB             reduce using rule 42 (variable -> ID [ expression ] .)
    MUL             reduce using rule 42 (variable -> ID [ expression ] .)
    DIV             reduce using rule 42 (variable -> ID [ expression ] .)
    DOTADD          reduce using rule 42 (variable -> ID [ expression ] .)
    DOTSUB          reduce using rule 42 (variable -> ID [ expression ] .)
    DOTMUL          reduce using rule 42 (variable -> ID [ expression ] .)
    DOTDIV          reduce using rule 42 (variable -> ID [ expression ] .)
    TRANSPOSE       reduce using rule 42 (variable -> ID [ expression ] .)
    ;               reduce using rule 42 (variable -> ID [ expression ] .)
    EQ              reduce using rule 42 (variable -> ID [ expression ] .)
    GT              reduce using rule 42 (variable -> ID [ expression ] .)
    LT              reduce using rule 42 (variable -> ID [ expression ] .)
    GE              reduce using rule 42 (variable -> ID [ expression ] .)
    LE              reduce using rule 42 (variable -> ID [ expression ] .)
    NE              reduce using rule 42 (variable -> ID [ expression ] .)
    ]               reduce using rule 42 (variable -> ID [ expression ] .)
    ,               reduce using rule 42 (variable -> ID [ expression ] .)
    :               reduce using rule 42 (variable -> ID [ expression ] .)
    )               reduce using rule 42 (variable -> ID [ expression ] .)
    IF              reduce using rule 42 (variable -> ID [ expression ] .)
    FOR             reduce using rule 42 (variable -> ID [ expression ] .)
    WHILE           reduce using rule 42 (variable -> ID [ expression ] .)
    {               reduce using rule 42 (variable -> ID [ expression ] .)
    PRINT           reduce using rule 42 (variable -> ID [ expression ] .)
    RETURN          reduce using rule 42 (variable -> ID [ expression ] .)
    CONTINUE        reduce using rule 42 (variable -> ID [ expression ] .)
    BREAK           reduce using rule 42 (variable -> ID [ expression ] .)
    ID              reduce using rule 42 (variable -> ID [ expression ] .)


state 80

    (43) variable -> ID [ expression , . expression ]
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 105
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 81

    (10) instruction -> WHILE ( condition ) . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR ID ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . RETURN expression
    (14) statement -> . RETURN
    (15) statement -> . CONTINUE
    (16) statement -> . BREAK
    (17) statement -> . variable ASSIGN expression
    (18) statement -> . variable ADDASSIGN expression
    (19) statement -> . variable SUBASSIGN expression
    (20) statement -> . variable MULASSIGN expression
    (21) statement -> . variable DIVASSIGN expression
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]

    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 8

    instruction                    shift and go to state 106
    statement                      shift and go to state 5
    variable                       shift and go to state 15

state 82

    (28) expression -> expression ADD expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ADD             reduce using rule 28 (expression -> expression ADD expression .)
    SUB             reduce using rule 28 (expression -> expression ADD expression .)
    DOTADD          reduce using rule 28 (expression -> expression ADD expression .)
    DOTSUB          reduce using rule 28 (expression -> expression ADD expression .)
    ;               reduce using rule 28 (expression -> expression ADD expression .)
    EQ              reduce using rule 28 (expression -> expression ADD expression .)
    GT              reduce using rule 28 (expression -> expression ADD expression .)
    LT              reduce using rule 28 (expression -> expression ADD expression .)
    GE              reduce using rule 28 (expression -> expression ADD expression .)
    LE              reduce using rule 28 (expression -> expression ADD expression .)
    NE              reduce using rule 28 (expression -> expression ADD expression .)
    ]               reduce using rule 28 (expression -> expression ADD expression .)
    ,               reduce using rule 28 (expression -> expression ADD expression .)
    :               reduce using rule 28 (expression -> expression ADD expression .)
    )               reduce using rule 28 (expression -> expression ADD expression .)
    IF              reduce using rule 28 (expression -> expression ADD expression .)
    FOR             reduce using rule 28 (expression -> expression ADD expression .)
    WHILE           reduce using rule 28 (expression -> expression ADD expression .)
    {               reduce using rule 28 (expression -> expression ADD expression .)
    PRINT           reduce using rule 28 (expression -> expression ADD expression .)
    RETURN          reduce using rule 28 (expression -> expression ADD expression .)
    CONTINUE        reduce using rule 28 (expression -> expression ADD expression .)
    BREAK           reduce using rule 28 (expression -> expression ADD expression .)
    ID              reduce using rule 28 (expression -> expression ADD expression .)
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55

  ! MUL             [ reduce using rule 28 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 28 (expression -> expression ADD expression .) ]
  ! DOTMUL          [ reduce using rule 28 (expression -> expression ADD expression .) ]
  ! DOTDIV          [ reduce using rule 28 (expression -> expression ADD expression .) ]
  ! TRANSPOSE       [ reduce using rule 28 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 47 ]
  ! SUB             [ shift and go to state 48 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]


state 83

    (29) expression -> expression SUB expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ADD             reduce using rule 29 (expression -> expression SUB expression .)
    SUB             reduce using rule 29 (expression -> expression SUB expression .)
    DOTADD          reduce using rule 29 (expression -> expression SUB expression .)
    DOTSUB          reduce using rule 29 (expression -> expression SUB expression .)
    ;               reduce using rule 29 (expression -> expression SUB expression .)
    EQ              reduce using rule 29 (expression -> expression SUB expression .)
    GT              reduce using rule 29 (expression -> expression SUB expression .)
    LT              reduce using rule 29 (expression -> expression SUB expression .)
    GE              reduce using rule 29 (expression -> expression SUB expression .)
    LE              reduce using rule 29 (expression -> expression SUB expression .)
    NE              reduce using rule 29 (expression -> expression SUB expression .)
    ]               reduce using rule 29 (expression -> expression SUB expression .)
    ,               reduce using rule 29 (expression -> expression SUB expression .)
    :               reduce using rule 29 (expression -> expression SUB expression .)
    )               reduce using rule 29 (expression -> expression SUB expression .)
    IF              reduce using rule 29 (expression -> expression SUB expression .)
    FOR             reduce using rule 29 (expression -> expression SUB expression .)
    WHILE           reduce using rule 29 (expression -> expression SUB expression .)
    {               reduce using rule 29 (expression -> expression SUB expression .)
    PRINT           reduce using rule 29 (expression -> expression SUB expression .)
    RETURN          reduce using rule 29 (expression -> expression SUB expression .)
    CONTINUE        reduce using rule 29 (expression -> expression SUB expression .)
    BREAK           reduce using rule 29 (expression -> expression SUB expression .)
    ID              reduce using rule 29 (expression -> expression SUB expression .)
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55

  ! MUL             [ reduce using rule 29 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 29 (expression -> expression SUB expression .) ]
  ! DOTMUL          [ reduce using rule 29 (expression -> expression SUB expression .) ]
  ! DOTDIV          [ reduce using rule 29 (expression -> expression SUB expression .) ]
  ! TRANSPOSE       [ reduce using rule 29 (expression -> expression SUB expression .) ]
  ! ADD             [ shift and go to state 47 ]
  ! SUB             [ shift and go to state 48 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]


state 84

    (30) expression -> expression MUL expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ADD             reduce using rule 30 (expression -> expression MUL expression .)
    SUB             reduce using rule 30 (expression -> expression MUL expression .)
    MUL             reduce using rule 30 (expression -> expression MUL expression .)
    DIV             reduce using rule 30 (expression -> expression MUL expression .)
    DOTADD          reduce using rule 30 (expression -> expression MUL expression .)
    DOTSUB          reduce using rule 30 (expression -> expression MUL expression .)
    DOTMUL          reduce using rule 30 (expression -> expression MUL expression .)
    DOTDIV          reduce using rule 30 (expression -> expression MUL expression .)
    ;               reduce using rule 30 (expression -> expression MUL expression .)
    EQ              reduce using rule 30 (expression -> expression MUL expression .)
    GT              reduce using rule 30 (expression -> expression MUL expression .)
    LT              reduce using rule 30 (expression -> expression MUL expression .)
    GE              reduce using rule 30 (expression -> expression MUL expression .)
    LE              reduce using rule 30 (expression -> expression MUL expression .)
    NE              reduce using rule 30 (expression -> expression MUL expression .)
    ]               reduce using rule 30 (expression -> expression MUL expression .)
    ,               reduce using rule 30 (expression -> expression MUL expression .)
    :               reduce using rule 30 (expression -> expression MUL expression .)
    )               reduce using rule 30 (expression -> expression MUL expression .)
    IF              reduce using rule 30 (expression -> expression MUL expression .)
    FOR             reduce using rule 30 (expression -> expression MUL expression .)
    WHILE           reduce using rule 30 (expression -> expression MUL expression .)
    {               reduce using rule 30 (expression -> expression MUL expression .)
    PRINT           reduce using rule 30 (expression -> expression MUL expression .)
    RETURN          reduce using rule 30 (expression -> expression MUL expression .)
    CONTINUE        reduce using rule 30 (expression -> expression MUL expression .)
    BREAK           reduce using rule 30 (expression -> expression MUL expression .)
    ID              reduce using rule 30 (expression -> expression MUL expression .)
    TRANSPOSE       shift and go to state 55

  ! TRANSPOSE       [ reduce using rule 30 (expression -> expression MUL expression .) ]
  ! ADD             [ shift and go to state 47 ]
  ! SUB             [ shift and go to state 48 ]
  ! MUL             [ shift and go to state 49 ]
  ! DIV             [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]


state 85

    (31) expression -> expression DIV expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ADD             reduce using rule 31 (expression -> expression DIV expression .)
    SUB             reduce using rule 31 (expression -> expression DIV expression .)
    MUL             reduce using rule 31 (expression -> expression DIV expression .)
    DIV             reduce using rule 31 (expression -> expression DIV expression .)
    DOTADD          reduce using rule 31 (expression -> expression DIV expression .)
    DOTSUB          reduce using rule 31 (expression -> expression DIV expression .)
    DOTMUL          reduce using rule 31 (expression -> expression DIV expression .)
    DOTDIV          reduce using rule 31 (expression -> expression DIV expression .)
    ;               reduce using rule 31 (expression -> expression DIV expression .)
    EQ              reduce using rule 31 (expression -> expression DIV expression .)
    GT              reduce using rule 31 (expression -> expression DIV expression .)
    LT              reduce using rule 31 (expression -> expression DIV expression .)
    GE              reduce using rule 31 (expression -> expression DIV expression .)
    LE              reduce using rule 31 (expression -> expression DIV expression .)
    NE              reduce using rule 31 (expression -> expression DIV expression .)
    ]               reduce using rule 31 (expression -> expression DIV expression .)
    ,               reduce using rule 31 (expression -> expression DIV expression .)
    :               reduce using rule 31 (expression -> expression DIV expression .)
    )               reduce using rule 31 (expression -> expression DIV expression .)
    IF              reduce using rule 31 (expression -> expression DIV expression .)
    FOR             reduce using rule 31 (expression -> expression DIV expression .)
    WHILE           reduce using rule 31 (expression -> expression DIV expression .)
    {               reduce using rule 31 (expression -> expression DIV expression .)
    PRINT           reduce using rule 31 (expression -> expression DIV expression .)
    RETURN          reduce using rule 31 (expression -> expression DIV expression .)
    CONTINUE        reduce using rule 31 (expression -> expression DIV expression .)
    BREAK           reduce using rule 31 (expression -> expression DIV expression .)
    ID              reduce using rule 31 (expression -> expression DIV expression .)
    TRANSPOSE       shift and go to state 55

  ! TRANSPOSE       [ reduce using rule 31 (expression -> expression DIV expression .) ]
  ! ADD             [ shift and go to state 47 ]
  ! SUB             [ shift and go to state 48 ]
  ! MUL             [ shift and go to state 49 ]
  ! DIV             [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]


state 86

    (32) expression -> expression DOTADD expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ADD             reduce using rule 32 (expression -> expression DOTADD expression .)
    SUB             reduce using rule 32 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 32 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 32 (expression -> expression DOTADD expression .)
    ;               reduce using rule 32 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 32 (expression -> expression DOTADD expression .)
    GT              reduce using rule 32 (expression -> expression DOTADD expression .)
    LT              reduce using rule 32 (expression -> expression DOTADD expression .)
    GE              reduce using rule 32 (expression -> expression DOTADD expression .)
    LE              reduce using rule 32 (expression -> expression DOTADD expression .)
    NE              reduce using rule 32 (expression -> expression DOTADD expression .)
    ]               reduce using rule 32 (expression -> expression DOTADD expression .)
    ,               reduce using rule 32 (expression -> expression DOTADD expression .)
    :               reduce using rule 32 (expression -> expression DOTADD expression .)
    )               reduce using rule 32 (expression -> expression DOTADD expression .)
    IF              reduce using rule 32 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 32 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 32 (expression -> expression DOTADD expression .)
    {               reduce using rule 32 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 32 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 32 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 32 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 32 (expression -> expression DOTADD expression .)
    ID              reduce using rule 32 (expression -> expression DOTADD expression .)
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55

  ! MUL             [ reduce using rule 32 (expression -> expression DOTADD expression .) ]
  ! DIV             [ reduce using rule 32 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 32 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 32 (expression -> expression DOTADD expression .) ]
  ! TRANSPOSE       [ reduce using rule 32 (expression -> expression DOTADD expression .) ]
  ! ADD             [ shift and go to state 47 ]
  ! SUB             [ shift and go to state 48 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]


state 87

    (33) expression -> expression DOTSUB expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ADD             reduce using rule 33 (expression -> expression DOTSUB expression .)
    SUB             reduce using rule 33 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 33 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 33 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 33 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 33 (expression -> expression DOTSUB expression .)
    GT              reduce using rule 33 (expression -> expression DOTSUB expression .)
    LT              reduce using rule 33 (expression -> expression DOTSUB expression .)
    GE              reduce using rule 33 (expression -> expression DOTSUB expression .)
    LE              reduce using rule 33 (expression -> expression DOTSUB expression .)
    NE              reduce using rule 33 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 33 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 33 (expression -> expression DOTSUB expression .)
    :               reduce using rule 33 (expression -> expression DOTSUB expression .)
    )               reduce using rule 33 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 33 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 33 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 33 (expression -> expression DOTSUB expression .)
    {               reduce using rule 33 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 33 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 33 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 33 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 33 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 33 (expression -> expression DOTSUB expression .)
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55

  ! MUL             [ reduce using rule 33 (expression -> expression DOTSUB expression .) ]
  ! DIV             [ reduce using rule 33 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 33 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 33 (expression -> expression DOTSUB expression .) ]
  ! TRANSPOSE       [ reduce using rule 33 (expression -> expression DOTSUB expression .) ]
  ! ADD             [ shift and go to state 47 ]
  ! SUB             [ shift and go to state 48 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]


state 88

    (34) expression -> expression DOTMUL expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ADD             reduce using rule 34 (expression -> expression DOTMUL expression .)
    SUB             reduce using rule 34 (expression -> expression DOTMUL expression .)
    MUL             reduce using rule 34 (expression -> expression DOTMUL expression .)
    DIV             reduce using rule 34 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 34 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 34 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 34 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 34 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 34 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 34 (expression -> expression DOTMUL expression .)
    GT              reduce using rule 34 (expression -> expression DOTMUL expression .)
    LT              reduce using rule 34 (expression -> expression DOTMUL expression .)
    GE              reduce using rule 34 (expression -> expression DOTMUL expression .)
    LE              reduce using rule 34 (expression -> expression DOTMUL expression .)
    NE              reduce using rule 34 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 34 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 34 (expression -> expression DOTMUL expression .)
    :               reduce using rule 34 (expression -> expression DOTMUL expression .)
    )               reduce using rule 34 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 34 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 34 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 34 (expression -> expression DOTMUL expression .)
    {               reduce using rule 34 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 34 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 34 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 34 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 34 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 34 (expression -> expression DOTMUL expression .)
    TRANSPOSE       shift and go to state 55

  ! TRANSPOSE       [ reduce using rule 34 (expression -> expression DOTMUL expression .) ]
  ! ADD             [ shift and go to state 47 ]
  ! SUB             [ shift and go to state 48 ]
  ! MUL             [ shift and go to state 49 ]
  ! DIV             [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]


state 89

    (35) expression -> expression DOTDIV expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ADD             reduce using rule 35 (expression -> expression DOTDIV expression .)
    SUB             reduce using rule 35 (expression -> expression DOTDIV expression .)
    MUL             reduce using rule 35 (expression -> expression DOTDIV expression .)
    DIV             reduce using rule 35 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 35 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 35 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 35 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 35 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 35 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 35 (expression -> expression DOTDIV expression .)
    GT              reduce using rule 35 (expression -> expression DOTDIV expression .)
    LT              reduce using rule 35 (expression -> expression DOTDIV expression .)
    GE              reduce using rule 35 (expression -> expression DOTDIV expression .)
    LE              reduce using rule 35 (expression -> expression DOTDIV expression .)
    NE              reduce using rule 35 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 35 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 35 (expression -> expression DOTDIV expression .)
    :               reduce using rule 35 (expression -> expression DOTDIV expression .)
    )               reduce using rule 35 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 35 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 35 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 35 (expression -> expression DOTDIV expression .)
    {               reduce using rule 35 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 35 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 35 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 35 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 35 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 35 (expression -> expression DOTDIV expression .)
    TRANSPOSE       shift and go to state 55

  ! TRANSPOSE       [ reduce using rule 35 (expression -> expression DOTDIV expression .) ]
  ! ADD             [ shift and go to state 47 ]
  ! SUB             [ shift and go to state 48 ]
  ! MUL             [ shift and go to state 49 ]
  ! DIV             [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]


state 90

    (53) matrix -> [ vectors ] .

    ADD             reduce using rule 53 (matrix -> [ vectors ] .)
    SUB             reduce using rule 53 (matrix -> [ vectors ] .)
    MUL             reduce using rule 53 (matrix -> [ vectors ] .)
    DIV             reduce using rule 53 (matrix -> [ vectors ] .)
    DOTADD          reduce using rule 53 (matrix -> [ vectors ] .)
    DOTSUB          reduce using rule 53 (matrix -> [ vectors ] .)
    DOTMUL          reduce using rule 53 (matrix -> [ vectors ] .)
    DOTDIV          reduce using rule 53 (matrix -> [ vectors ] .)
    TRANSPOSE       reduce using rule 53 (matrix -> [ vectors ] .)
    ;               reduce using rule 53 (matrix -> [ vectors ] .)
    EQ              reduce using rule 53 (matrix -> [ vectors ] .)
    GT              reduce using rule 53 (matrix -> [ vectors ] .)
    LT              reduce using rule 53 (matrix -> [ vectors ] .)
    GE              reduce using rule 53 (matrix -> [ vectors ] .)
    LE              reduce using rule 53 (matrix -> [ vectors ] .)
    NE              reduce using rule 53 (matrix -> [ vectors ] .)
    ]               reduce using rule 53 (matrix -> [ vectors ] .)
    ,               reduce using rule 53 (matrix -> [ vectors ] .)
    :               reduce using rule 53 (matrix -> [ vectors ] .)
    )               reduce using rule 53 (matrix -> [ vectors ] .)
    IF              reduce using rule 53 (matrix -> [ vectors ] .)
    FOR             reduce using rule 53 (matrix -> [ vectors ] .)
    WHILE           reduce using rule 53 (matrix -> [ vectors ] .)
    {               reduce using rule 53 (matrix -> [ vectors ] .)
    PRINT           reduce using rule 53 (matrix -> [ vectors ] .)
    RETURN          reduce using rule 53 (matrix -> [ vectors ] .)
    CONTINUE        reduce using rule 53 (matrix -> [ vectors ] .)
    BREAK           reduce using rule 53 (matrix -> [ vectors ] .)
    ID              reduce using rule 53 (matrix -> [ vectors ] .)


state 91

    (54) vectors -> vectors , . vector
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    [               shift and go to state 108

    vector                         shift and go to state 107

state 92

    (56) vector -> [ elements , . element ]
    (58) elements -> elements , . element
    (60) element -> . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    element                        shift and go to state 109
    expression                     shift and go to state 62
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 93

    (57) vector -> [ element ] .

    ADD             reduce using rule 57 (vector -> [ element ] .)
    SUB             reduce using rule 57 (vector -> [ element ] .)
    MUL             reduce using rule 57 (vector -> [ element ] .)
    DIV             reduce using rule 57 (vector -> [ element ] .)
    DOTADD          reduce using rule 57 (vector -> [ element ] .)
    DOTSUB          reduce using rule 57 (vector -> [ element ] .)
    DOTMUL          reduce using rule 57 (vector -> [ element ] .)
    DOTDIV          reduce using rule 57 (vector -> [ element ] .)
    TRANSPOSE       reduce using rule 57 (vector -> [ element ] .)
    ;               reduce using rule 57 (vector -> [ element ] .)
    EQ              reduce using rule 57 (vector -> [ element ] .)
    GT              reduce using rule 57 (vector -> [ element ] .)
    LT              reduce using rule 57 (vector -> [ element ] .)
    GE              reduce using rule 57 (vector -> [ element ] .)
    LE              reduce using rule 57 (vector -> [ element ] .)
    NE              reduce using rule 57 (vector -> [ element ] .)
    ]               reduce using rule 57 (vector -> [ element ] .)
    ,               reduce using rule 57 (vector -> [ element ] .)
    :               reduce using rule 57 (vector -> [ element ] .)
    )               reduce using rule 57 (vector -> [ element ] .)
    IF              reduce using rule 57 (vector -> [ element ] .)
    FOR             reduce using rule 57 (vector -> [ element ] .)
    WHILE           reduce using rule 57 (vector -> [ element ] .)
    {               reduce using rule 57 (vector -> [ element ] .)
    PRINT           reduce using rule 57 (vector -> [ element ] .)
    RETURN          reduce using rule 57 (vector -> [ element ] .)
    CONTINUE        reduce using rule 57 (vector -> [ element ] .)
    BREAK           reduce using rule 57 (vector -> [ element ] .)
    ID              reduce using rule 57 (vector -> [ element ] .)


state 94

    (47) matrix -> ONES ( expression . )
    (48) matrix -> ONES ( expression . , expression )
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    )               shift and go to state 110
    ,               shift and go to state 111
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 95

    (49) matrix -> ZEROS ( expression . )
    (50) matrix -> ZEROS ( expression . , expression )
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    )               shift and go to state 112
    ,               shift and go to state 113
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 96

    (51) matrix -> EYE ( expression . )
    (52) matrix -> EYE ( expression . , expression )
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    )               shift and go to state 114
    ,               shift and go to state 115
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 97

    (7) instruction -> IF ( condition ) instruction . ELSE instruction
    (8) instruction -> IF ( condition ) instruction .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 116
    IF              reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    FOR             reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    WHILE           reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    {               reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    PRINT           reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    RETURN          reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    CONTINUE        reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    BREAK           reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    ID              reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    $end            reduce using rule 8 (instruction -> IF ( condition ) instruction .)
    }               reduce using rule 8 (instruction -> IF ( condition ) instruction .)

  ! ELSE            [ reduce using rule 8 (instruction -> IF ( condition ) instruction .) ]


state 98

    (22) condition -> expression EQ expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    )               reduce using rule 22 (condition -> expression EQ expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 99

    (23) condition -> expression GT expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    )               reduce using rule 23 (condition -> expression GT expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 100

    (24) condition -> expression LT expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    )               reduce using rule 24 (condition -> expression LT expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 101

    (25) condition -> expression GE expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    )               reduce using rule 25 (condition -> expression GE expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 102

    (26) condition -> expression LE expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    )               reduce using rule 26 (condition -> expression LE expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 103

    (27) condition -> expression NE expression .
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    )               reduce using rule 27 (condition -> expression NE expression .)
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 104

    (9) instruction -> FOR ID ASSIGN expression : . expression instruction
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 117
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 105

    (43) variable -> ID [ expression , expression . ]
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    ]               shift and go to state 118
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 106

    (10) instruction -> WHILE ( condition ) instruction .

    IF              reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    FOR             reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    WHILE           reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    {               reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    PRINT           reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    RETURN          reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    CONTINUE        reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    BREAK           reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    ID              reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    $end            reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    }               reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)
    ELSE            reduce using rule 10 (instruction -> WHILE ( condition ) instruction .)


state 107

    (54) vectors -> vectors , vector .

    ]               reduce using rule 54 (vectors -> vectors , vector .)
    ,               reduce using rule 54 (vectors -> vectors , vector .)


state 108

    (56) vector -> [ . elements , element ]
    (57) vector -> [ . element ]
    (58) elements -> . elements , element
    (59) elements -> . element
    (60) element -> . expression
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    elements                       shift and go to state 59
    element                        shift and go to state 60
    expression                     shift and go to state 62
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 109

    (56) vector -> [ elements , element . ]
    (58) elements -> elements , element .

    ]               shift and go to state 119
    ,               reduce using rule 58 (elements -> elements , element .)


state 110

    (47) matrix -> ONES ( expression ) .

    ADD             reduce using rule 47 (matrix -> ONES ( expression ) .)
    SUB             reduce using rule 47 (matrix -> ONES ( expression ) .)
    MUL             reduce using rule 47 (matrix -> ONES ( expression ) .)
    DIV             reduce using rule 47 (matrix -> ONES ( expression ) .)
    DOTADD          reduce using rule 47 (matrix -> ONES ( expression ) .)
    DOTSUB          reduce using rule 47 (matrix -> ONES ( expression ) .)
    DOTMUL          reduce using rule 47 (matrix -> ONES ( expression ) .)
    DOTDIV          reduce using rule 47 (matrix -> ONES ( expression ) .)
    TRANSPOSE       reduce using rule 47 (matrix -> ONES ( expression ) .)
    ;               reduce using rule 47 (matrix -> ONES ( expression ) .)
    EQ              reduce using rule 47 (matrix -> ONES ( expression ) .)
    GT              reduce using rule 47 (matrix -> ONES ( expression ) .)
    LT              reduce using rule 47 (matrix -> ONES ( expression ) .)
    GE              reduce using rule 47 (matrix -> ONES ( expression ) .)
    LE              reduce using rule 47 (matrix -> ONES ( expression ) .)
    NE              reduce using rule 47 (matrix -> ONES ( expression ) .)
    ]               reduce using rule 47 (matrix -> ONES ( expression ) .)
    ,               reduce using rule 47 (matrix -> ONES ( expression ) .)
    :               reduce using rule 47 (matrix -> ONES ( expression ) .)
    )               reduce using rule 47 (matrix -> ONES ( expression ) .)
    IF              reduce using rule 47 (matrix -> ONES ( expression ) .)
    FOR             reduce using rule 47 (matrix -> ONES ( expression ) .)
    WHILE           reduce using rule 47 (matrix -> ONES ( expression ) .)
    {               reduce using rule 47 (matrix -> ONES ( expression ) .)
    PRINT           reduce using rule 47 (matrix -> ONES ( expression ) .)
    RETURN          reduce using rule 47 (matrix -> ONES ( expression ) .)
    CONTINUE        reduce using rule 47 (matrix -> ONES ( expression ) .)
    BREAK           reduce using rule 47 (matrix -> ONES ( expression ) .)
    ID              reduce using rule 47 (matrix -> ONES ( expression ) .)


state 111

    (48) matrix -> ONES ( expression , . expression )
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 120
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 112

    (49) matrix -> ZEROS ( expression ) .

    ADD             reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    SUB             reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    MUL             reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    DIV             reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    DOTADD          reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    DOTSUB          reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    DOTMUL          reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    DOTDIV          reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    TRANSPOSE       reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    ;               reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    EQ              reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    GT              reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    LT              reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    GE              reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    LE              reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    NE              reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    ]               reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    ,               reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    :               reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    )               reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    IF              reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    FOR             reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    WHILE           reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    {               reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    PRINT           reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    RETURN          reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    BREAK           reduce using rule 49 (matrix -> ZEROS ( expression ) .)
    ID              reduce using rule 49 (matrix -> ZEROS ( expression ) .)


state 113

    (50) matrix -> ZEROS ( expression , . expression )
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 121
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 114

    (51) matrix -> EYE ( expression ) .

    ADD             reduce using rule 51 (matrix -> EYE ( expression ) .)
    SUB             reduce using rule 51 (matrix -> EYE ( expression ) .)
    MUL             reduce using rule 51 (matrix -> EYE ( expression ) .)
    DIV             reduce using rule 51 (matrix -> EYE ( expression ) .)
    DOTADD          reduce using rule 51 (matrix -> EYE ( expression ) .)
    DOTSUB          reduce using rule 51 (matrix -> EYE ( expression ) .)
    DOTMUL          reduce using rule 51 (matrix -> EYE ( expression ) .)
    DOTDIV          reduce using rule 51 (matrix -> EYE ( expression ) .)
    TRANSPOSE       reduce using rule 51 (matrix -> EYE ( expression ) .)
    ;               reduce using rule 51 (matrix -> EYE ( expression ) .)
    EQ              reduce using rule 51 (matrix -> EYE ( expression ) .)
    GT              reduce using rule 51 (matrix -> EYE ( expression ) .)
    LT              reduce using rule 51 (matrix -> EYE ( expression ) .)
    GE              reduce using rule 51 (matrix -> EYE ( expression ) .)
    LE              reduce using rule 51 (matrix -> EYE ( expression ) .)
    NE              reduce using rule 51 (matrix -> EYE ( expression ) .)
    ]               reduce using rule 51 (matrix -> EYE ( expression ) .)
    ,               reduce using rule 51 (matrix -> EYE ( expression ) .)
    :               reduce using rule 51 (matrix -> EYE ( expression ) .)
    )               reduce using rule 51 (matrix -> EYE ( expression ) .)
    IF              reduce using rule 51 (matrix -> EYE ( expression ) .)
    FOR             reduce using rule 51 (matrix -> EYE ( expression ) .)
    WHILE           reduce using rule 51 (matrix -> EYE ( expression ) .)
    {               reduce using rule 51 (matrix -> EYE ( expression ) .)
    PRINT           reduce using rule 51 (matrix -> EYE ( expression ) .)
    RETURN          reduce using rule 51 (matrix -> EYE ( expression ) .)
    CONTINUE        reduce using rule 51 (matrix -> EYE ( expression ) .)
    BREAK           reduce using rule 51 (matrix -> EYE ( expression ) .)
    ID              reduce using rule 51 (matrix -> EYE ( expression ) .)


state 115

    (52) matrix -> EYE ( expression , . expression )
    (28) expression -> . expression ADD expression
    (29) expression -> . expression SUB expression
    (30) expression -> . expression MUL expression
    (31) expression -> . expression DIV expression
    (32) expression -> . expression DOTADD expression
    (33) expression -> . expression DOTSUB expression
    (34) expression -> . expression DOTMUL expression
    (35) expression -> . expression DOTDIV expression
    (36) expression -> . SUB expression
    (37) expression -> . expression TRANSPOSE
    (38) expression -> . INTNUM
    (39) expression -> . FLOATNUM
    (40) expression -> . variable
    (44) expression -> . STRING
    (45) expression -> . matrix
    (46) expression -> . vector
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]
    (47) matrix -> . ONES ( expression )
    (48) matrix -> . ONES ( expression , expression )
    (49) matrix -> . ZEROS ( expression )
    (50) matrix -> . ZEROS ( expression , expression )
    (51) matrix -> . EYE ( expression )
    (52) matrix -> . EYE ( expression , expression )
    (53) matrix -> . [ vectors ]
    (56) vector -> . [ elements , element ]
    (57) vector -> . [ element ]

    SUB             shift and go to state 24
    INTNUM          shift and go to state 25
    FLOATNUM        shift and go to state 26
    STRING          shift and go to state 28
    ID              shift and go to state 8
    ONES            shift and go to state 32
    ZEROS           shift and go to state 33
    EYE             shift and go to state 34
    [               shift and go to state 31

    expression                     shift and go to state 122
    variable                       shift and go to state 27
    matrix                         shift and go to state 29
    vector                         shift and go to state 30

state 116

    (7) instruction -> IF ( condition ) instruction ELSE . instruction
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR ID ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . RETURN expression
    (14) statement -> . RETURN
    (15) statement -> . CONTINUE
    (16) statement -> . BREAK
    (17) statement -> . variable ASSIGN expression
    (18) statement -> . variable ADDASSIGN expression
    (19) statement -> . variable SUBASSIGN expression
    (20) statement -> . variable MULASSIGN expression
    (21) statement -> . variable DIVASSIGN expression
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]

    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 8

    instruction                    shift and go to state 123
    statement                      shift and go to state 5
    variable                       shift and go to state 15

state 117

    (9) instruction -> FOR ID ASSIGN expression : expression . instruction
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE
    (6) instruction -> . statement ;
    (7) instruction -> . IF ( condition ) instruction ELSE instruction
    (8) instruction -> . IF ( condition ) instruction
    (9) instruction -> . FOR ID ASSIGN expression : expression instruction
    (10) instruction -> . WHILE ( condition ) instruction
    (11) instruction -> . { instructions }
    (12) statement -> . PRINT expression
    (13) statement -> . RETURN expression
    (14) statement -> . RETURN
    (15) statement -> . CONTINUE
    (16) statement -> . BREAK
    (17) statement -> . variable ASSIGN expression
    (18) statement -> . variable ADDASSIGN expression
    (19) statement -> . variable SUBASSIGN expression
    (20) statement -> . variable MULASSIGN expression
    (21) statement -> . variable DIVASSIGN expression
    (41) variable -> . ID
    (42) variable -> . ID [ expression ]
    (43) variable -> . ID [ expression , expression ]

    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55
    IF              shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 9
    {               shift and go to state 10
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ID              shift and go to state 8

    instruction                    shift and go to state 124
    statement                      shift and go to state 5
    variable                       shift and go to state 15

state 118

    (43) variable -> ID [ expression , expression ] .

    ASSIGN          reduce using rule 43 (variable -> ID [ expression , expression ] .)
    ADDASSIGN       reduce using rule 43 (variable -> ID [ expression , expression ] .)
    SUBASSIGN       reduce using rule 43 (variable -> ID [ expression , expression ] .)
    MULASSIGN       reduce using rule 43 (variable -> ID [ expression , expression ] .)
    DIVASSIGN       reduce using rule 43 (variable -> ID [ expression , expression ] .)
    ADD             reduce using rule 43 (variable -> ID [ expression , expression ] .)
    SUB             reduce using rule 43 (variable -> ID [ expression , expression ] .)
    MUL             reduce using rule 43 (variable -> ID [ expression , expression ] .)
    DIV             reduce using rule 43 (variable -> ID [ expression , expression ] .)
    DOTADD          reduce using rule 43 (variable -> ID [ expression , expression ] .)
    DOTSUB          reduce using rule 43 (variable -> ID [ expression , expression ] .)
    DOTMUL          reduce using rule 43 (variable -> ID [ expression , expression ] .)
    DOTDIV          reduce using rule 43 (variable -> ID [ expression , expression ] .)
    TRANSPOSE       reduce using rule 43 (variable -> ID [ expression , expression ] .)
    ;               reduce using rule 43 (variable -> ID [ expression , expression ] .)
    EQ              reduce using rule 43 (variable -> ID [ expression , expression ] .)
    GT              reduce using rule 43 (variable -> ID [ expression , expression ] .)
    LT              reduce using rule 43 (variable -> ID [ expression , expression ] .)
    GE              reduce using rule 43 (variable -> ID [ expression , expression ] .)
    LE              reduce using rule 43 (variable -> ID [ expression , expression ] .)
    NE              reduce using rule 43 (variable -> ID [ expression , expression ] .)
    ]               reduce using rule 43 (variable -> ID [ expression , expression ] .)
    ,               reduce using rule 43 (variable -> ID [ expression , expression ] .)
    :               reduce using rule 43 (variable -> ID [ expression , expression ] .)
    )               reduce using rule 43 (variable -> ID [ expression , expression ] .)
    IF              reduce using rule 43 (variable -> ID [ expression , expression ] .)
    FOR             reduce using rule 43 (variable -> ID [ expression , expression ] .)
    WHILE           reduce using rule 43 (variable -> ID [ expression , expression ] .)
    {               reduce using rule 43 (variable -> ID [ expression , expression ] .)
    PRINT           reduce using rule 43 (variable -> ID [ expression , expression ] .)
    RETURN          reduce using rule 43 (variable -> ID [ expression , expression ] .)
    CONTINUE        reduce using rule 43 (variable -> ID [ expression , expression ] .)
    BREAK           reduce using rule 43 (variable -> ID [ expression , expression ] .)
    ID              reduce using rule 43 (variable -> ID [ expression , expression ] .)


state 119

    (56) vector -> [ elements , element ] .

    ADD             reduce using rule 56 (vector -> [ elements , element ] .)
    SUB             reduce using rule 56 (vector -> [ elements , element ] .)
    MUL             reduce using rule 56 (vector -> [ elements , element ] .)
    DIV             reduce using rule 56 (vector -> [ elements , element ] .)
    DOTADD          reduce using rule 56 (vector -> [ elements , element ] .)
    DOTSUB          reduce using rule 56 (vector -> [ elements , element ] .)
    DOTMUL          reduce using rule 56 (vector -> [ elements , element ] .)
    DOTDIV          reduce using rule 56 (vector -> [ elements , element ] .)
    TRANSPOSE       reduce using rule 56 (vector -> [ elements , element ] .)
    ;               reduce using rule 56 (vector -> [ elements , element ] .)
    EQ              reduce using rule 56 (vector -> [ elements , element ] .)
    GT              reduce using rule 56 (vector -> [ elements , element ] .)
    LT              reduce using rule 56 (vector -> [ elements , element ] .)
    GE              reduce using rule 56 (vector -> [ elements , element ] .)
    LE              reduce using rule 56 (vector -> [ elements , element ] .)
    NE              reduce using rule 56 (vector -> [ elements , element ] .)
    ]               reduce using rule 56 (vector -> [ elements , element ] .)
    ,               reduce using rule 56 (vector -> [ elements , element ] .)
    :               reduce using rule 56 (vector -> [ elements , element ] .)
    )               reduce using rule 56 (vector -> [ elements , element ] .)
    IF              reduce using rule 56 (vector -> [ elements , element ] .)
    FOR             reduce using rule 56 (vector -> [ elements , element ] .)
    WHILE           reduce using rule 56 (vector -> [ elements , element ] .)
    {               reduce using rule 56 (vector -> [ elements , element ] .)
    PRINT           reduce using rule 56 (vector -> [ elements , element ] .)
    RETURN          reduce using rule 56 (vector -> [ elements , element ] .)
    CONTINUE        reduce using rule 56 (vector -> [ elements , element ] .)
    BREAK           reduce using rule 56 (vector -> [ elements , element ] .)
    ID              reduce using rule 56 (vector -> [ elements , element ] .)


state 120

    (48) matrix -> ONES ( expression , expression . )
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    )               shift and go to state 125
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 121

    (50) matrix -> ZEROS ( expression , expression . )
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    )               shift and go to state 126
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 122

    (52) matrix -> EYE ( expression , expression . )
    (28) expression -> expression . ADD expression
    (29) expression -> expression . SUB expression
    (30) expression -> expression . MUL expression
    (31) expression -> expression . DIV expression
    (32) expression -> expression . DOTADD expression
    (33) expression -> expression . DOTSUB expression
    (34) expression -> expression . DOTMUL expression
    (35) expression -> expression . DOTDIV expression
    (37) expression -> expression . TRANSPOSE

    )               shift and go to state 127
    ADD             shift and go to state 47
    SUB             shift and go to state 48
    MUL             shift and go to state 49
    DIV             shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    TRANSPOSE       shift and go to state 55


state 123

    (7) instruction -> IF ( condition ) instruction ELSE instruction .

    IF              reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    FOR             reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    WHILE           reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    {               reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    PRINT           reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    RETURN          reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    BREAK           reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    ID              reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    $end            reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    }               reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)
    ELSE            reduce using rule 7 (instruction -> IF ( condition ) instruction ELSE instruction .)


state 124

    (9) instruction -> FOR ID ASSIGN expression : expression instruction .

    IF              reduce using rule 9 (instruction -> FOR ID ASSIGN expression : expression instruction .)
    FOR             reduce using rule 9 (instruction -> FOR ID ASSIGN expression : expression instruction .)
    WHILE           reduce using rule 9 (instruction -> FOR ID ASSIGN expression : expression instruction .)
    {               reduce using rule 9 (instruction -> FOR ID ASSIGN expression : expression instruction .)
    PRINT           reduce using rule 9 (instruction -> FOR ID ASSIGN expression : expression instruction .)
    RETURN          reduce using rule 9 (instruction -> FOR ID ASSIGN expression : expression instruction .)
    CONTINUE        reduce using rule 9 (instruction -> FOR ID ASSIGN expression : expression instruction .)
    BREAK           reduce using rule 9 (instruction -> FOR ID ASSIGN expression : expression instruction .)
    ID              reduce using rule 9 (instruction -> FOR ID ASSIGN expression : expression instruction .)
    $end            reduce using rule 9 (instruction -> FOR ID ASSIGN expression : expression instruction .)
    }               reduce using rule 9 (instruction -> FOR ID ASSIGN expression : expression instruction .)
    ELSE            reduce using rule 9 (instruction -> FOR ID ASSIGN expression : expression instruction .)


state 125

    (48) matrix -> ONES ( expression , expression ) .

    ADD             reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    SUB             reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    MUL             reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    DIV             reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    DOTADD          reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    DOTSUB          reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    DOTMUL          reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    DOTDIV          reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    TRANSPOSE       reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    ;               reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    EQ              reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    GT              reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    LT              reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    GE              reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    LE              reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    NE              reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    ]               reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    ,               reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    :               reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    )               reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    IF              reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    FOR             reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    WHILE           reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    {               reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    PRINT           reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    RETURN          reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    CONTINUE        reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    BREAK           reduce using rule 48 (matrix -> ONES ( expression , expression ) .)
    ID              reduce using rule 48 (matrix -> ONES ( expression , expression ) .)


state 126

    (50) matrix -> ZEROS ( expression , expression ) .

    ADD             reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    SUB             reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    MUL             reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    DIV             reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    DOTADD          reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    DOTSUB          reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    DOTMUL          reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    DOTDIV          reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    TRANSPOSE       reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    ;               reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    EQ              reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    GT              reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    LT              reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    GE              reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    LE              reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    NE              reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    ]               reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    ,               reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    :               reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    )               reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    IF              reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    FOR             reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    WHILE           reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    {               reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    PRINT           reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    RETURN          reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    CONTINUE        reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    BREAK           reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)
    ID              reduce using rule 50 (matrix -> ZEROS ( expression , expression ) .)


state 127

    (52) matrix -> EYE ( expression , expression ) .

    ADD             reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    SUB             reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    MUL             reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    DIV             reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    DOTADD          reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    DOTSUB          reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    DOTMUL          reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    DOTDIV          reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    TRANSPOSE       reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    ;               reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    EQ              reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    GT              reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    LT              reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    GE              reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    LE              reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    NE              reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    ]               reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    ,               reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    :               reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    )               reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    IF              reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    FOR             reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    WHILE           reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    {               reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    PRINT           reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    RETURN          reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    CONTINUE        reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    BREAK           reduce using rule 52 (matrix -> EYE ( expression , expression ) .)
    ID              reduce using rule 52 (matrix -> EYE ( expression , expression ) .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 97 resolved as shift
WARNING: reduce/reduce conflict in state 61 resolved using rule (expression -> vector)
WARNING: rejected rule (vectors -> vector) in state 61
WARNING: Rule (vectors -> vector) is never reduced
