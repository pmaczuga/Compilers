
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocASSIGNADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNnonassocEQGTLTGELENEleftADDSUBDOTADDDOTSUBleftMULDIVDOTMULDOTDIVrightNEGATIONleftTRANSPOSEADD ADDASSIGN ASSIGN BREAK COMMENT CONTINUE DIV DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE GT ID IF INTNUM LE LT MUL MULASSIGN NE ONES PRINT RETURN STRING SUB SUBASSIGN TRANSPOSE WHILE ZEROSprogram : instructions_optinstructions_opt : instructionsinstructions_opt : instructions : instructions instructioninstructions : instructioninstruction : statement ';' instruction : IF '(' condition ')' instruction ELSE instruction\n                   | IF '(' condition ')' instructioninstruction : FOR ID ASSIGN expression ':' expression instructioninstruction : WHILE '(' condition ')' instructioninstruction : '{' instructions '}' statement : PRINT expressionstatement : RETURN expression\n                 | RETURNstatement : CONTINUEstatement : BREAKstatement : variable ASSIGN expression\n                 | variable ADDASSIGN expression\n                 | variable SUBASSIGN expression\n                 | variable MULASSIGN expression\n                 | variable DIVASSIGN expressioncondition : expression EQ expression\n                 | expression GT expression\n                 | expression LT expression\n                 | expression GE expression\n                 | expression LE expression\n                 | expression NE expressionexpression : expression ADD expression\n                  | expression SUB expression\n                  | expression MUL expression\n                  | expression DIV expressionexpression : expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expressionexpression : SUB expression %prec NEGATIONexpression : expression TRANSPOSE expression : INTNUM\n              | FLOATNUMexpression : variablevariable : ID\n                | ID '[' expression ']' \n                | ID '[' expression ',' expression ']' expression : STRINGexpression : '(' expression ')' expression : matrixexpression : vectormatrix : ONES '(' expression ')'\n              | ONES '(' expression ',' expression ')' matrix : ZEROS '(' expression ')'\n              | ZEROS '(' expression ',' expression ')' matrix : EYE '(' expression ')'\n              | EYE '(' expression ',' expression ')' matrix : '[' vector ']' matrix : '[' vectors ']' vectors : vector ',' vector vectors : vectors ',' vector vector : '[' expression ']' vector : '[' expressions ']' expressions : expression ',' expressionexpressions : expressions ',' expression"
    
_lr_action_items = {'$end':([0,1,2,3,4,16,17,47,104,113,131,132,],[-3,0,-1,-2,-5,-4,-6,-11,-8,-10,-7,-9,]),'IF':([0,3,4,8,10,16,17,22,25,26,27,28,30,31,47,56,57,72,80,82,83,84,85,86,87,88,89,90,91,93,95,97,99,104,113,119,121,123,125,126,127,131,132,133,134,135,],[6,6,-5,-41,6,-4,-6,6,-38,-39,-40,-44,-46,-47,-11,-37,-36,6,-42,6,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-8,-10,-48,-50,-52,6,6,-43,-7,-9,-49,-51,-53,]),'FOR':([0,3,4,8,10,16,17,22,25,26,27,28,30,31,47,56,57,72,80,82,83,84,85,86,87,88,89,90,91,93,95,97,99,104,113,119,121,123,125,126,127,131,132,133,134,135,],[7,7,-5,-41,7,-4,-6,7,-38,-39,-40,-44,-46,-47,-11,-37,-36,7,-42,7,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-8,-10,-48,-50,-52,7,7,-43,-7,-9,-49,-51,-53,]),'WHILE':([0,3,4,8,10,16,17,22,25,26,27,28,30,31,47,56,57,72,80,82,83,84,85,86,87,88,89,90,91,93,95,97,99,104,113,119,121,123,125,126,127,131,132,133,134,135,],[9,9,-5,-41,9,-4,-6,9,-38,-39,-40,-44,-46,-47,-11,-37,-36,9,-42,9,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-8,-10,-48,-50,-52,9,9,-43,-7,-9,-49,-51,-53,]),'{':([0,3,4,8,10,16,17,22,25,26,27,28,30,31,47,56,57,72,80,82,83,84,85,86,87,88,89,90,91,93,95,97,99,104,113,119,121,123,125,126,127,131,132,133,134,135,],[10,10,-5,-41,10,-4,-6,10,-38,-39,-40,-44,-46,-47,-11,-37,-36,10,-42,10,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-8,-10,-48,-50,-52,10,10,-43,-7,-9,-49,-51,-53,]),'PRINT':([0,3,4,8,10,16,17,22,25,26,27,28,30,31,47,56,57,72,80,82,83,84,85,86,87,88,89,90,91,93,95,97,99,104,113,119,121,123,125,126,127,131,132,133,134,135,],[11,11,-5,-41,11,-4,-6,11,-38,-39,-40,-44,-46,-47,-11,-37,-36,11,-42,11,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-8,-10,-48,-50,-52,11,11,-43,-7,-9,-49,-51,-53,]),'RETURN':([0,3,4,8,10,16,17,22,25,26,27,28,30,31,47,56,57,72,80,82,83,84,85,86,87,88,89,90,91,93,95,97,99,104,113,119,121,123,125,126,127,131,132,133,134,135,],[12,12,-5,-41,12,-4,-6,12,-38,-39,-40,-44,-46,-47,-11,-37,-36,12,-42,12,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-8,-10,-48,-50,-52,12,12,-43,-7,-9,-49,-51,-53,]),'CONTINUE':([0,3,4,8,10,16,17,22,25,26,27,28,30,31,47,56,57,72,80,82,83,84,85,86,87,88,89,90,91,93,95,97,99,104,113,119,121,123,125,126,127,131,132,133,134,135,],[13,13,-5,-41,13,-4,-6,13,-38,-39,-40,-44,-46,-47,-11,-37,-36,13,-42,13,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-8,-10,-48,-50,-52,13,13,-43,-7,-9,-49,-51,-53,]),'BREAK':([0,3,4,8,10,16,17,22,25,26,27,28,30,31,47,56,57,72,80,82,83,84,85,86,87,88,89,90,91,93,95,97,99,104,113,119,121,123,125,126,127,131,132,133,134,135,],[14,14,-5,-41,14,-4,-6,14,-38,-39,-40,-44,-46,-47,-11,-37,-36,14,-42,14,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-8,-10,-48,-50,-52,14,14,-43,-7,-9,-49,-51,-53,]),'ID':([0,3,4,7,8,10,11,12,16,17,18,20,21,22,24,25,26,27,28,29,30,31,32,37,38,39,40,41,44,47,48,49,50,51,52,53,54,55,56,57,59,64,65,66,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,93,95,97,98,99,100,104,111,113,115,119,120,121,122,123,124,125,126,127,131,132,133,134,135,],[8,8,-5,19,-41,8,8,8,-4,-6,8,8,8,8,8,-38,-39,-40,-44,8,-46,-47,8,8,8,8,8,8,8,-11,8,8,8,8,8,8,8,8,-37,-36,8,8,8,8,8,8,8,8,8,8,8,-42,8,8,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,8,-59,8,-8,8,-10,8,-48,8,-50,8,-52,8,8,8,-43,-7,-9,-49,-51,-53,]),'}':([4,16,17,22,47,104,113,131,132,],[-5,-4,-6,47,-11,-8,-10,-7,-9,]),';':([5,8,12,13,14,23,25,26,27,28,30,31,36,56,57,67,68,69,70,71,80,83,84,85,86,87,88,89,90,91,93,95,97,99,119,121,123,127,133,134,135,],[17,-41,-14,-15,-16,-12,-38,-39,-40,-44,-46,-47,-13,-37,-36,-17,-18,-19,-20,-21,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-48,-50,-52,-43,-49,-51,-53,]),'(':([6,9,11,12,18,20,21,24,29,32,33,34,35,37,38,39,40,41,44,48,49,50,51,52,53,54,55,59,64,65,66,73,74,75,76,77,78,81,98,100,111,115,120,122,124,],[18,21,29,29,29,29,29,29,29,29,64,65,66,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ASSIGN':([8,15,19,80,127,],[-41,37,44,-42,-43,]),'ADDASSIGN':([8,15,80,127,],[-41,38,-42,-43,]),'SUBASSIGN':([8,15,80,127,],[-41,39,-42,-43,]),'MULASSIGN':([8,15,80,127,],[-41,40,-42,-43,]),'DIVASSIGN':([8,15,80,127,],[-41,41,-42,-43,]),'ADD':([8,23,25,26,27,28,30,31,36,43,45,56,57,58,60,62,67,68,69,70,71,79,80,83,84,85,86,87,88,89,90,91,92,93,95,97,99,101,102,103,105,106,107,108,109,110,112,117,118,119,121,123,126,127,128,129,130,133,134,135,],[-41,48,-38,-39,-40,-44,-46,-47,48,48,48,-37,-36,48,-47,48,48,48,48,48,48,48,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,-47,-54,-55,-58,-59,48,48,48,48,48,48,48,48,48,48,48,48,-48,-50,-52,48,-43,48,48,48,-49,-51,-53,]),'SUB':([8,11,12,18,20,21,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,115,117,118,119,120,121,122,123,124,126,127,128,129,130,133,134,135,],[-41,24,24,24,24,24,49,24,-38,-39,-40,-44,24,-46,-47,24,49,24,24,24,24,24,49,24,49,24,24,24,24,24,24,24,24,-37,-36,49,24,-47,49,24,24,24,49,49,49,49,49,24,24,24,24,24,24,49,-42,24,-28,-29,-30,-31,-32,-33,-34,-35,-45,-47,-54,-55,-58,24,-59,24,49,49,49,49,49,49,49,49,49,24,49,24,49,49,-48,24,-50,24,-52,24,49,-43,49,49,49,-49,-51,-53,]),'MUL':([8,23,25,26,27,28,30,31,36,43,45,56,57,58,60,62,67,68,69,70,71,79,80,83,84,85,86,87,88,89,90,91,92,93,95,97,99,101,102,103,105,106,107,108,109,110,112,117,118,119,121,123,126,127,128,129,130,133,134,135,],[-41,50,-38,-39,-40,-44,-46,-47,50,50,50,-37,-36,50,-47,50,50,50,50,50,50,50,-42,50,50,-30,-31,50,50,-34,-35,-45,-47,-54,-55,-58,-59,50,50,50,50,50,50,50,50,50,50,50,50,-48,-50,-52,50,-43,50,50,50,-49,-51,-53,]),'DIV':([8,23,25,26,27,28,30,31,36,43,45,56,57,58,60,62,67,68,69,70,71,79,80,83,84,85,86,87,88,89,90,91,92,93,95,97,99,101,102,103,105,106,107,108,109,110,112,117,118,119,121,123,126,127,128,129,130,133,134,135,],[-41,51,-38,-39,-40,-44,-46,-47,51,51,51,-37,-36,51,-47,51,51,51,51,51,51,51,-42,51,51,-30,-31,51,51,-34,-35,-45,-47,-54,-55,-58,-59,51,51,51,51,51,51,51,51,51,51,51,51,-48,-50,-52,51,-43,51,51,51,-49,-51,-53,]),'DOTADD':([8,23,25,26,27,28,30,31,36,43,45,56,57,58,60,62,67,68,69,70,71,79,80,83,84,85,86,87,88,89,90,91,92,93,95,97,99,101,102,103,105,106,107,108,109,110,112,117,118,119,121,123,126,127,128,129,130,133,134,135,],[-41,52,-38,-39,-40,-44,-46,-47,52,52,52,-37,-36,52,-47,52,52,52,52,52,52,52,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,-47,-54,-55,-58,-59,52,52,52,52,52,52,52,52,52,52,52,52,-48,-50,-52,52,-43,52,52,52,-49,-51,-53,]),'DOTSUB':([8,23,25,26,27,28,30,31,36,43,45,56,57,58,60,62,67,68,69,70,71,79,80,83,84,85,86,87,88,89,90,91,92,93,95,97,99,101,102,103,105,106,107,108,109,110,112,117,118,119,121,123,126,127,128,129,130,133,134,135,],[-41,53,-38,-39,-40,-44,-46,-47,53,53,53,-37,-36,53,-47,53,53,53,53,53,53,53,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,-47,-54,-55,-58,-59,53,53,53,53,53,53,53,53,53,53,53,53,-48,-50,-52,53,-43,53,53,53,-49,-51,-53,]),'DOTMUL':([8,23,25,26,27,28,30,31,36,43,45,56,57,58,60,62,67,68,69,70,71,79,80,83,84,85,86,87,88,89,90,91,92,93,95,97,99,101,102,103,105,106,107,108,109,110,112,117,118,119,121,123,126,127,128,129,130,133,134,135,],[-41,54,-38,-39,-40,-44,-46,-47,54,54,54,-37,-36,54,-47,54,54,54,54,54,54,54,-42,54,54,-30,-31,54,54,-34,-35,-45,-47,-54,-55,-58,-59,54,54,54,54,54,54,54,54,54,54,54,54,-48,-50,-52,54,-43,54,54,54,-49,-51,-53,]),'DOTDIV':([8,23,25,26,27,28,30,31,36,43,45,56,57,58,60,62,67,68,69,70,71,79,80,83,84,85,86,87,88,89,90,91,92,93,95,97,99,101,102,103,105,106,107,108,109,110,112,117,118,119,121,123,126,127,128,129,130,133,134,135,],[-41,55,-38,-39,-40,-44,-46,-47,55,55,55,-37,-36,55,-47,55,55,55,55,55,55,55,-42,55,55,-30,-31,55,55,-34,-35,-45,-47,-54,-55,-58,-59,55,55,55,55,55,55,55,55,55,55,55,55,-48,-50,-52,55,-43,55,55,55,-49,-51,-53,]),'TRANSPOSE':([8,23,25,26,27,28,30,31,36,43,45,56,57,58,60,62,67,68,69,70,71,79,80,83,84,85,86,87,88,89,90,91,92,93,95,97,99,101,102,103,105,106,107,108,109,110,112,117,118,119,121,123,126,127,128,129,130,133,134,135,],[-41,56,-38,-39,-40,-44,-46,-47,56,56,56,-37,56,56,-47,56,56,56,56,56,56,56,-42,56,56,56,56,56,56,56,56,-45,-47,-54,-55,-58,-59,56,56,56,56,56,56,56,56,56,56,56,56,-48,-50,-52,56,-43,56,56,56,-49,-51,-53,]),'EQ':([8,25,26,27,28,30,31,43,56,57,80,83,84,85,86,87,88,89,90,91,93,95,97,99,119,121,123,127,133,134,135,],[-41,-38,-39,-40,-44,-46,-47,73,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-48,-50,-52,-43,-49,-51,-53,]),'GT':([8,25,26,27,28,30,31,43,56,57,80,83,84,85,86,87,88,89,90,91,93,95,97,99,119,121,123,127,133,134,135,],[-41,-38,-39,-40,-44,-46,-47,74,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-48,-50,-52,-43,-49,-51,-53,]),'LT':([8,25,26,27,28,30,31,43,56,57,80,83,84,85,86,87,88,89,90,91,93,95,97,99,119,121,123,127,133,134,135,],[-41,-38,-39,-40,-44,-46,-47,75,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-48,-50,-52,-43,-49,-51,-53,]),'GE':([8,25,26,27,28,30,31,43,56,57,80,83,84,85,86,87,88,89,90,91,93,95,97,99,119,121,123,127,133,134,135,],[-41,-38,-39,-40,-44,-46,-47,76,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-48,-50,-52,-43,-49,-51,-53,]),'LE':([8,25,26,27,28,30,31,43,56,57,80,83,84,85,86,87,88,89,90,91,93,95,97,99,119,121,123,127,133,134,135,],[-41,-38,-39,-40,-44,-46,-47,77,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-48,-50,-52,-43,-49,-51,-53,]),'NE':([8,25,26,27,28,30,31,43,56,57,80,83,84,85,86,87,88,89,90,91,93,95,97,99,119,121,123,127,133,134,135,],[-41,-38,-39,-40,-44,-46,-47,78,-37,-36,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-48,-50,-52,-43,-49,-51,-53,]),']':([8,25,26,27,28,30,31,45,56,57,60,61,62,63,80,83,84,85,86,87,88,89,90,91,92,93,95,97,99,112,114,116,117,118,119,121,123,127,133,134,135,],[-41,-38,-39,-40,-44,-46,-47,80,-37,-36,93,95,97,99,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,93,-54,-55,-58,-59,127,-56,-57,-60,-61,-48,-50,-52,-43,-49,-51,-53,]),',':([8,25,26,27,28,30,31,45,56,57,60,61,62,63,80,83,84,85,86,87,88,89,90,91,92,93,95,97,99,101,102,103,114,116,117,118,119,121,123,127,133,134,135,],[-41,-38,-39,-40,-44,-46,-47,81,-37,-36,94,96,98,100,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,94,-54,-55,-58,-59,120,122,124,-56,-57,-60,-61,-48,-50,-52,-43,-49,-51,-53,]),')':([8,25,26,27,28,30,31,42,46,56,57,58,80,83,84,85,86,87,88,89,90,91,93,95,97,99,101,102,103,105,106,107,108,109,110,119,121,123,127,128,129,130,133,134,135,],[-41,-38,-39,-40,-44,-46,-47,72,82,-37,-36,91,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,119,121,123,-22,-23,-24,-25,-26,-27,-48,-50,-52,-43,133,134,135,-49,-51,-53,]),':':([8,25,26,27,28,30,31,56,57,79,80,83,84,85,86,87,88,89,90,91,93,95,97,99,119,121,123,127,133,134,135,],[-41,-38,-39,-40,-44,-46,-47,-37,-36,111,-42,-28,-29,-30,-31,-32,-33,-34,-35,-45,-54,-55,-58,-59,-48,-50,-52,-43,-49,-51,-53,]),'[':([8,11,12,18,20,21,24,29,32,37,38,39,40,41,44,48,49,50,51,52,53,54,55,59,64,65,66,73,74,75,76,77,78,81,94,96,98,100,111,115,120,122,124,],[20,32,32,32,32,32,32,32,59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,59,32,32,32,32,32,32,32,32,32,32,115,115,32,32,32,32,32,32,32,]),'INTNUM':([11,12,18,20,21,24,29,32,37,38,39,40,41,44,48,49,50,51,52,53,54,55,59,64,65,66,73,74,75,76,77,78,81,98,100,111,115,120,122,124,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'FLOATNUM':([11,12,18,20,21,24,29,32,37,38,39,40,41,44,48,49,50,51,52,53,54,55,59,64,65,66,73,74,75,76,77,78,81,98,100,111,115,120,122,124,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'STRING':([11,12,18,20,21,24,29,32,37,38,39,40,41,44,48,49,50,51,52,53,54,55,59,64,65,66,73,74,75,76,77,78,81,98,100,111,115,120,122,124,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'ONES':([11,12,18,20,21,24,29,32,37,38,39,40,41,44,48,49,50,51,52,53,54,55,59,64,65,66,73,74,75,76,77,78,81,98,100,111,115,120,122,124,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'ZEROS':([11,12,18,20,21,24,29,32,37,38,39,40,41,44,48,49,50,51,52,53,54,55,59,64,65,66,73,74,75,76,77,78,81,98,100,111,115,120,122,124,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'EYE':([11,12,18,20,21,24,29,32,37,38,39,40,41,44,48,49,50,51,52,53,54,55,59,64,65,66,73,74,75,76,77,78,81,98,100,111,115,120,122,124,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'ELSE':([17,47,104,113,131,132,],[-6,-11,125,-10,-7,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,10,],[3,22,]),'instruction':([0,3,10,22,72,82,125,126,],[4,16,4,16,104,113,131,132,]),'statement':([0,3,10,22,72,82,125,126,],[5,5,5,5,5,5,5,5,]),'variable':([0,3,10,11,12,18,20,21,22,24,29,32,37,38,39,40,41,44,48,49,50,51,52,53,54,55,59,64,65,66,72,73,74,75,76,77,78,81,82,98,100,111,115,120,122,124,125,126,],[15,15,15,27,27,27,27,27,15,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,15,27,27,27,27,27,27,27,15,27,27,27,27,27,27,27,15,15,]),'expression':([11,12,18,20,21,24,29,32,37,38,39,40,41,44,48,49,50,51,52,53,54,55,59,64,65,66,73,74,75,76,77,78,81,98,100,111,115,120,122,124,],[23,36,43,45,43,57,58,62,67,68,69,70,71,79,83,84,85,86,87,88,89,90,62,101,102,103,105,106,107,108,109,110,112,117,118,126,62,128,129,130,]),'matrix':([11,12,18,20,21,24,29,32,37,38,39,40,41,44,48,49,50,51,52,53,54,55,59,64,65,66,73,74,75,76,77,78,81,98,100,111,115,120,122,124,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'vector':([11,12,18,20,21,24,29,32,37,38,39,40,41,44,48,49,50,51,52,53,54,55,59,64,65,66,73,74,75,76,77,78,81,94,96,98,100,111,115,120,122,124,],[31,31,31,31,31,31,31,60,31,31,31,31,31,31,31,31,31,31,31,31,31,31,92,31,31,31,31,31,31,31,31,31,31,114,116,31,31,31,31,31,31,31,]),'condition':([18,21,],[42,46,]),'vectors':([32,59,],[61,61,]),'expressions':([32,59,115,],[63,63,63,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','zad2_parser.py',24),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_some','zad2_parser.py',28),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_none','zad2_parser.py',32),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_multiple','zad2_parser.py',36),
  ('instructions -> instruction','instructions',1,'p_instructions_single','zad2_parser.py',40),
  ('instruction -> statement ;','instruction',2,'p_instruction_statement','zad2_parser.py',44),
  ('instruction -> IF ( condition ) instruction ELSE instruction','instruction',7,'p_instruction_if','zad2_parser.py',48),
  ('instruction -> IF ( condition ) instruction','instruction',5,'p_instruction_if','zad2_parser.py',49),
  ('instruction -> FOR ID ASSIGN expression : expression instruction','instruction',7,'p_instruction_for','zad2_parser.py',56),
  ('instruction -> WHILE ( condition ) instruction','instruction',5,'p_instruction_while','zad2_parser.py',60),
  ('instruction -> { instructions }','instruction',3,'p_instruction_comlex','zad2_parser.py',64),
  ('statement -> PRINT expression','statement',2,'p_statement_print','zad2_parser.py',68),
  ('statement -> RETURN expression','statement',2,'p_statement_return','zad2_parser.py',72),
  ('statement -> RETURN','statement',1,'p_statement_return','zad2_parser.py',73),
  ('statement -> CONTINUE','statement',1,'p_statement_continue','zad2_parser.py',81),
  ('statement -> BREAK','statement',1,'p_statement_break','zad2_parser.py',85),
  ('statement -> variable ASSIGN expression','statement',3,'p_statement_assign','zad2_parser.py',89),
  ('statement -> variable ADDASSIGN expression','statement',3,'p_statement_assign','zad2_parser.py',90),
  ('statement -> variable SUBASSIGN expression','statement',3,'p_statement_assign','zad2_parser.py',91),
  ('statement -> variable MULASSIGN expression','statement',3,'p_statement_assign','zad2_parser.py',92),
  ('statement -> variable DIVASSIGN expression','statement',3,'p_statement_assign','zad2_parser.py',93),
  ('condition -> expression EQ expression','condition',3,'p_condtion','zad2_parser.py',97),
  ('condition -> expression GT expression','condition',3,'p_condtion','zad2_parser.py',98),
  ('condition -> expression LT expression','condition',3,'p_condtion','zad2_parser.py',99),
  ('condition -> expression GE expression','condition',3,'p_condtion','zad2_parser.py',100),
  ('condition -> expression LE expression','condition',3,'p_condtion','zad2_parser.py',101),
  ('condition -> expression NE expression','condition',3,'p_condtion','zad2_parser.py',102),
  ('expression -> expression ADD expression','expression',3,'p_expression_binary_simple','zad2_parser.py',106),
  ('expression -> expression SUB expression','expression',3,'p_expression_binary_simple','zad2_parser.py',107),
  ('expression -> expression MUL expression','expression',3,'p_expression_binary_simple','zad2_parser.py',108),
  ('expression -> expression DIV expression','expression',3,'p_expression_binary_simple','zad2_parser.py',109),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_binary_dot','zad2_parser.py',113),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_binary_dot','zad2_parser.py',114),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_binary_dot','zad2_parser.py',115),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression_binary_dot','zad2_parser.py',116),
  ('expression -> SUB expression','expression',2,'p_expression_negation','zad2_parser.py',120),
  ('expression -> expression TRANSPOSE','expression',2,'p_expression_transposition','zad2_parser.py',124),
  ('expression -> INTNUM','expression',1,'p_expression_number','zad2_parser.py',128),
  ('expression -> FLOATNUM','expression',1,'p_expression_number','zad2_parser.py',129),
  ('expression -> variable','expression',1,'p_expression_variable','zad2_parser.py',133),
  ('variable -> ID','variable',1,'p_variable','zad2_parser.py',137),
  ('variable -> ID [ expression ]','variable',4,'p_variable','zad2_parser.py',138),
  ('variable -> ID [ expression , expression ]','variable',6,'p_variable','zad2_parser.py',139),
  ('expression -> STRING','expression',1,'p_expression_string','zad2_parser.py',148),
  ('expression -> ( expression )','expression',3,'p_expression_paren','zad2_parser.py',152),
  ('expression -> matrix','expression',1,'p_expression_matrix','zad2_parser.py',156),
  ('expression -> vector','expression',1,'p_expression_vector','zad2_parser.py',160),
  ('matrix -> ONES ( expression )','matrix',4,'p_matrix_ones','zad2_parser.py',164),
  ('matrix -> ONES ( expression , expression )','matrix',6,'p_matrix_ones','zad2_parser.py',165),
  ('matrix -> ZEROS ( expression )','matrix',4,'p_matrix_zeros','zad2_parser.py',172),
  ('matrix -> ZEROS ( expression , expression )','matrix',6,'p_matrix_zeros','zad2_parser.py',173),
  ('matrix -> EYE ( expression )','matrix',4,'p_matrix_eye','zad2_parser.py',180),
  ('matrix -> EYE ( expression , expression )','matrix',6,'p_matrix_eye','zad2_parser.py',181),
  ('matrix -> [ vector ]','matrix',3,'p_matrix_vector_one','zad2_parser.py',188),
  ('matrix -> [ vectors ]','matrix',3,'p_matrix_vectors_more','zad2_parser.py',193),
  ('vectors -> vector , vector','vectors',3,'p_vectors_two','zad2_parser.py',197),
  ('vectors -> vectors , vector','vectors',3,'p_vectors_more','zad2_parser.py',201),
  ('vector -> [ expression ]','vector',3,'p_vecotor_one','zad2_parser.py',205),
  ('vector -> [ expressions ]','vector',3,'p_vector_more','zad2_parser.py',209),
  ('expressions -> expression , expression','expressions',3,'p_expressions_two','zad2_parser.py',213),
  ('expressions -> expressions , expression','expressions',3,'p_expressions_more','zad2_parser.py',217),
]
